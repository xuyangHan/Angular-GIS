(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"1E6V":function(e,t,r){"use strict";r.r(t);var n=r("pO5D"),s=(r("wSAH"),r("6S2I"),r("zqDF"),r("WbKI")),a=r("04ZG"),c=r("4EHJ"),i=(r("ju1D"),r("9AIY"),r("kglp")),o=r("Lqtk"),N=r("u3Ia"),O=r("Ehki"),u=(r("4GrV"),r("pXG8")),I=r("qatw"),_=r("vaBp"),f=r("Fpx9"),T=r("UH+o"),j=r("2jrz"),l=r("1lHr"),S=r("xazm"),b=r("jksI"),U=r("rJHQ"),y=r("fQPN"),E=r("Nvf0"),p=r("UhwK"),R=r("GeAh"),g=r("5SEJ");let A=class extends i.a{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=Object(N.c)(e),s={...n.query,f:"json",...t.toJSON()},a=Object(N.a)(s,r);return Object(o.default)(n.path+"/areasAndLengths",a).then(e=>e.data)}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,a=Object(N.c)(e),c={...a.query,f:"json",sr:JSON.stringify(s.toJSON()),polygons:JSON.stringify(Object(u.b)(t).geometries),polylines:JSON.stringify(Object(u.b)(r).geometries)},i=Object(N.a)(c,n);return Object(o.default)(a.path+"/autoComplete",i).then(({data:e})=>(e.geometries||[]).map(({rings:e})=>new O.a({spatialReference:s,rings:e})))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=Object(N.c)(e),s={...n.query,f:"json",...t.toJSON()},a=t.outSpatialReference||t.geometries[0].spatialReference,c=Object(N.a)(s,r);return Object(o.default)(n.path+"/buffer",c).then(e=>(e.data.geometries||[]).map(({rings:e})=>new O.a({spatialReference:a,rings:e})))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=Object(N.c)(e),a={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(Object(u.b)(t))},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/convexHull",c).then(({data:e})=>Object(I.a)(e.geometry).set({spatialReference:n}))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const s=Object(N.c)(e),a=t[0].spatialReference,c={...n,query:{...s.query,f:"json",sr:JSON.stringify(a),target:JSON.stringify({geometryType:Object(I.c)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},i=await Object(o.default)(s.path+"/cut",c),{cutIndexes:O,geometries:u=[]}=i.data;return{cutIndexes:O,geometries:u.map(e=>{const t=Object(I.a)(e);return t.spatialReference=a,t})}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,s=Object(N.c)(e),a={...s.query,f:"json",...t.toJSON()},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/densify",c).then(({data:e})=>(e.geometries||[]).map(e=>Object(I.a)(e).set({spatialReference:n})))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,a=Object(N.c)(e);let c={query:{...a.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(Object(u.b)(t)),geometry:JSON.stringify({geometryType:Object(I.c)(r),geometry:r.toJSON()})}};return n&&(c={...n,...c}),Object(o.default)(a.path+"/difference",c).then(({data:e})=>(e.geometries||[]).map(e=>Object(I.a)(e).set({spatialReference:s})))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=Object(N.c)(e),s={...n.query,f:"json",...t.toJSON()},a=Object(N.a)(s,r);return Object(o.default)(n.path+"/distance",a).then(({data:e})=>e&&e.distance)}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};n.sr=null!=t.sr&&"object"==typeof t.sr?t.sr.wkid||JSON.stringify(t.sr):t.sr,n.strings=JSON.stringify(t.strings),n.conversionType=_.a.toJSON(t.conversionType||"mgrs"),n.conversionMode=t.conversionMode;const s=Object(N.c)(e),a={...s.query,f:"json",...n},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/fromGeoCoordinateString",c).then(({data:e})=>e.coordinates)}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=T.a.from(t)).toJSON(),s=Object(f.a)(t),a=Object(N.c)(e),c={...a.query,f:"json",...s},i=n.geometries[0].spatialReference,O=Object(N.a)(c,r);return Object(o.default)(a.path+"/generalize",O).then(({data:e})=>(e.geometries||[]).map(e=>Object(I.a)(e).set({spatialReference:i})))}(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,a=Object(N.c)(e),c={...a.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(Object(u.b)(t)),geometry:JSON.stringify({geometryType:Object(I.c)(r),geometry:r.toJSON()})},i=Object(N.a)(c,n);return Object(o.default)(a.path+"/intersect",i).then(({data:e})=>(e.geometries||[]).map(e=>Object(I.a)(e).set({spatialReference:s})))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map(e=>e.toJSON()),s=t[0].spatialReference,a=Object(N.c)(e),c={...a.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s.toJSON()),polygons:JSON.stringify(n)},i=Object(N.a)(c,r);return Object(o.default)(a.path+"/labelPoints",i).then(({data:e})=>(e.labelPoints||[]).map(e=>Object(I.a)(e).set({spatialReference:s})))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){t=l.a.from(t);const n=Object(j.a)(t),s=Object(N.c)(e),a={...s.query,f:"json",...n},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/lengths",c).then(({data:e})=>e)}(this.url,e,t)}offset(e,t){return async function(e,t,r){t=b.a.from(t);const n=Object(S.a)(t),s=Object(N.c)(e),a={...s.query,f:"json",...n},c=t.geometries[0].spatialReference,i=Object(N.a)(a,r);return Object(o.default)(s.path+"/offset",i).then(({data:e})=>(e.geometries||[]).map(e=>Object(I.a)(e).set({spatialReference:c})))}(this.url,e,t)}project(e,t){return Object(U.a)(this.url,e,t)}relation(e,t){return async function(e,t,r){t=E.a.from(t);const n=Object(y.a)(t),s=Object(N.c)(e),a={...s.query,f:"json",...n},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/relation",c).then(({data:e})=>e.relations)}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const s=t.spatialReference,a=Object(N.c)(e),c={...a.query,f:"json",sr:JSON.stringify(s.toJSON()),target:JSON.stringify({geometryType:Object(I.c)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},i=Object(N.a)(c,n);return Object(o.default)(a.path+"/reshape",i).then(({data:e})=>Object(I.a)(e.geometry).set({spatialReference:s}))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const n="string"==typeof e?Object(c.J)(e):e,s=t[0].spatialReference,a=Object(I.c)(t[0]),i={...r,query:{...n.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s),geometries:JSON.stringify(Object(u.b)(t))}},{data:N}=await Object(o.default)(n.path+"/simplify",i);return Object(u.a)(N.geometries,a,s)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};n.sr=null!=t.sr&&"object"==typeof t.sr?t.sr.wkid||JSON.stringify(t.sr):t.sr,n.coordinates=JSON.stringify(t.coordinates),n.conversionType=_.a.toJSON(t.conversionType||"mgrs"),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const s=Object(N.c)(e),a={...s.query,f:"json",...n},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/toGeoCoordinateString",c).then(({data:e})=>e.strings)}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){t=g.a.from(t);const n=Object(R.a)(t),s=Object(N.c)(e),a={...s.query,f:"json",...n},c=t.sr,i=Object(N.a)(a,r);return Object(o.default)(s.path+"/trimExtend",i).then(({data:e})=>(e.geometries||[]).map(({paths:e})=>new p.a({spatialReference:c,paths:e})))}(this.url,e,t)}union(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=Object(N.c)(e),a={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(Object(u.b)(t))},c=Object(N.a)(a,r);return Object(o.default)(s.path+"/union",c).then(({data:e})=>Object(I.a)(e.geometry).set({spatialReference:n}))}(this.url,e,t)}};A.UNIT_METER=9001,A.UNIT_GERMAN_METER=9031,A.UNIT_FOOT=9002,A.UNIT_SURVEY_FOOT=9003,A.UNIT_CLARKE_FOOT=9005,A.UNIT_FATHOM=9014,A.UNIT_NAUTICAL_MILE=9030,A.UNIT_SURVEY_CHAIN=9033,A.UNIT_SURVEY_LINK=9034,A.UNIT_SURVEY_MILE=9035,A.UNIT_KILOMETER=9036,A.UNIT_CLARKE_YARD=9037,A.UNIT_CLARKE_CHAIN=9038,A.UNIT_CLARKE_LINK=9039,A.UNIT_SEARS_YARD=9040,A.UNIT_SEARS_FOOT=9041,A.UNIT_SEARS_CHAIN=9042,A.UNIT_SEARS_LINK=9043,A.UNIT_BENOIT_1895A_YARD=9050,A.UNIT_BENOIT_1895A_FOOT=9051,A.UNIT_BENOIT_1895A_CHAIN=9052,A.UNIT_BENOIT_1895A_LINK=9053,A.UNIT_BENOIT_1895B_YARD=9060,A.UNIT_BENOIT_1895B_FOOT=9061,A.UNIT_BENOIT_1895B_CHAIN=9062,A.UNIT_BENOIT_1895B_LINK=9063,A.UNIT_INDIAN_FOOT=9080,A.UNIT_INDIAN_1937_FOOT=9081,A.UNIT_INDIAN_1962_FOOT=9082,A.UNIT_INDIAN_1975_FOOT=9083,A.UNIT_INDIAN_YARD=9084,A.UNIT_INDIAN_1937_YARD=9085,A.UNIT_INDIAN_1962_YARD=9086,A.UNIT_INDIAN_1975_YARD=9087,A.UNIT_FOOT_1865=9070,A.UNIT_RADIAN=9101,A.UNIT_DEGREE=9102,A.UNIT_ARCMINUTE=9103,A.UNIT_ARCSECOND=9104,A.UNIT_GRAD=9105,A.UNIT_GON=9106,A.UNIT_MICRORADIAN=9109,A.UNIT_ARCMINUTE_CENTESIMAL=9112,A.UNIT_ARCSECOND_CENTESIMAL=9113,A.UNIT_MIL6400=9114,A.UNIT_BRITISH_1936_FOOT=9095,A.UNIT_GOLDCOAST_FOOT=9094,A.UNIT_INTERNATIONAL_CHAIN=109003,A.UNIT_INTERNATIONAL_LINK=109004,A.UNIT_INTERNATIONAL_YARD=109001,A.UNIT_STATUTE_MILE=9093,A.UNIT_SURVEY_YARD=109002,A.UNIT_50KILOMETER_LENGTH=109030,A.UNIT_150KILOMETER_LENGTH=109031,A.UNIT_DECIMETER=109005,A.UNIT_CENTIMETER=109006,A.UNIT_MILLIMETER=109007,A.UNIT_INTERNATIONAL_INCH=109008,A.UNIT_US_SURVEY_INCH=109009,A.UNIT_INTERNATIONAL_ROD=109010,A.UNIT_US_SURVEY_ROD=109011,A.UNIT_US_NAUTICAL_MILE=109012,A.UNIT_UK_NAUTICAL_MILE=109013,A.UNIT_SQUARE_INCHES="esriSquareInches",A.UNIT_SQUARE_FEET="esriSquareFeet",A.UNIT_SQUARE_YARDS="esriSquareYards",A.UNIT_ACRES="esriAcres",A.UNIT_SQUARE_MILES="esriSquareMiles",A.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",A.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",A.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",A.UNIT_SQUARE_METERS="esriSquareMeters",A.UNIT_ARES="esriAres",A.UNIT_HECTARES="esriHectares",A.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",Object(n.a)([Object(s.b)()],A.prototype,"url",void 0),A=Object(n.a)([Object(a.a)("esri.tasks.GeometryService")],A),t.default=A}}]);