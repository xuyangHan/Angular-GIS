(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{mRf7:function(e,t,i){"use strict";i.r(t);var r=i("pO5D"),a=(i("wSAH"),i("srIe")),n=i("6S2I"),s=i("zqDF"),o=i("WbKI"),l=i("+opI"),c=i("RI0u"),u=i("r88o"),f=i("04ZG"),h=i("zlDU"),d=i("4EHJ"),p=(i("ju1D"),i("9AIY"),i("SFah")),m=i("pqNC"),y=i("5pQd"),b=i("IvSi"),g=i("uRH/"),x=i("ukD5"),O=i("ofM5"),w=i("mXvl"),v=i("DbUH"),I=i("jhcG"),j=i("WmKv"),S=i("9Ruv"),T=i("Stxv"),R=i("f4Nx"),C=i("WZb1"),_=i("OvF4"),M=(i("4GrV"),i("Lqtk")),k=i("VLTf"),F=i("3/ME"),P=i("tidM"),D=i("2mvb"),B=i("HM2S"),N=i("ciAr");const H=n.a.getLogger("esri.layers.mixins.ImageryTileMixin"),z=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",Object(k.g)(e,H))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=Object(B.e)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let r;this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:n}=this;return r=a?await a.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=Object(R.d)(e);return F.a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,r={}){if(r.requestAsImageElement){const a=this.getTileUrl(e,t,i);return Object(M.default)(a,{responseType:"image",query:{sliceId:this._sliceId,_ts:r.timestamp},signal:r.signal}).then(e=>e.data)}return await this._initJobHandler(),this.multidimensionalDefinition&&(r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,buffer:"raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null,...r}),this.raster.fetchTile(e,t,i,r)}async fetchPixels(e,t,i,r){return await this._initJobHandler(),this.multidimensionalDefinition&&(r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...r}),this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new D.a;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(B.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(a.i)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach(e=>{i.push(new P.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))}),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=Object(B.b)(e)),this.renderer||(this.renderer=Object(B.a)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=Object(B.e)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new N.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||H.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return Object(r.a)([Object(o.b)()],t.prototype,"_cachedRendererJson",void 0),Object(r.a)([Object(o.b)()],t.prototype,"_sliceId",void 0),Object(r.a)([Object(o.b)()],t.prototype,"_compatibleFullExtent",void 0),Object(r.a)([Object(o.b)()],t.prototype,"_rasterJobHandler",void 0),Object(r.a)([Object(o.b)()],t.prototype,"bandIds",void 0),Object(r.a)([Object(o.b)()],t.prototype,"copyright",void 0),Object(r.a)([Object(o.b)({type:_.a}),Object(T.a)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(r.a)([Object(o.b)()],t.prototype,"interpolation",void 0),Object(r.a)([Object(o.b)()],t.prototype,"ioConfig",void 0),Object(r.a)([Object(o.b)({type:[P.a]})],t.prototype,"multidimensionalDefinition",null),Object(r.a)([Object(o.b)()],t.prototype,"raster",void 0),Object(r.a)([Object(o.b)({readOnly:!0}),Object(T.a)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(r.a)([Object(o.b)()],t.prototype,"sourceJSON",void 0),Object(r.a)([Object(o.b)({type:C.a}),Object(T.a)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(r.a)([Object(o.b)({type:F.a}),Object(T.a)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(r.a)([Object(o.b)(b.n)],t.prototype,"url",null),Object(r.a)([Object(o.b)({types:x.a})],t.prototype,"renderer",null),Object(r.a)([Object(o.b)()],t.prototype,"symbolizer",void 0),t=Object(r.a)([Object(f.a)("esri.layers.ImageryTileMixin")],t),t};var L=i("SuVq"),E=i("8prj"),J=i("pPNP"),A=i("ag7Y");let q=class extends A.a{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};Object(r.a)([Object(o.b)({type:Number,json:{write:!0}})],q.prototype,"blockWidth",void 0),Object(r.a)([Object(o.b)({type:Number,json:{write:!0}})],q.prototype,"blockHeight",void 0),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],q.prototype,"compression",void 0),Object(r.a)([Object(o.b)({type:L.a,json:{write:!0}})],q.prototype,"origin",void 0),Object(r.a)([Object(o.b)({type:Number,json:{write:!0}})],q.prototype,"firstPyramidLevel",void 0),Object(r.a)([Object(o.b)({type:Number,json:{write:!0}})],q.prototype,"maximumPyramidLevel",void 0),Object(r.a)([Object(o.b)()],q.prototype,"pyramidScalingFactor",void 0),Object(r.a)([Object(o.b)({type:Number,json:{write:!0}})],q.prototype,"pyramidBlockWidth",void 0),Object(r.a)([Object(o.b)({type:Number,json:{write:!0}})],q.prototype,"pyramidBlockHeight",void 0),Object(r.a)([Object(o.b)({type:Boolean,json:{write:!0}})],q.prototype,"isVirtualTileInfo",void 0),Object(r.a)([Object(o.b)({json:{write:!0}})],q.prototype,"tileInfo",void 0),Object(r.a)([Object(o.b)()],q.prototype,"blockBoundary",void 0),q=Object(r.a)([Object(f.a)("esri.layers.support.RasterStorageInfo")],q);var U=q,W=i("9MzC"),G=i("+rMe"),V=i("FFFX"),$=i("ne7T"),Y=i("tODX"),X=i("IYxN");let K=class extends(Object(G.b)(A.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(Y.d)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:F.a.create(),...e.ioConfig}}),e}set url(e){this._set("url",Object(k.g)(e,n.a.getLogger(this.declaredClass)))}async open(e){throw new h.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){var n;const{tileInfo:s}=r,o=s.lodAt(e),l=this.getTileExtent({x:o.resolution,y:o.resolution},t,i,s.origin,s.spatialReference,s.size);return null!=(n=r.multidimensionalDefinition)&&n.length&&Object(a.i)(this.rasterInfo.multidimensionalInfo)&&null==r.sliceId&&(r={...r,sliceId:this.getSliceIndex(r.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],r)}async identify(e,t={}){const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:n}=t;let s=Object(Y.f)(e,i,n);if(!r.intersects(s))return{location:s,value:null};if(Object(a.i)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let o=0;if(t.srcResolution)o=Object(Y.h)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:s,value:null};const l=this.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:f,colOffset:h}=l,d=Object(X.d)(this.url,t.sliceId),p=`${o}/${c}/${u}`;let m=Object(X.c)(d,null,p);Object(a.i)(m)||(m=this.fetchRawTile(o,c,u,t),Object(X.e)(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const b=f*this.rasterInfo.storageInfo.blockHeight+h;return{location:s,value:!y.mask||y.mask[b]?y.pixels.map(e=>e[b]):null,pyramidLevel:o}}async fetchPixels(e,t,i,r={}){const n=e.clone().normalize(),s=this.rasterInfo.spatialReference,o=!(e=n[0]).spatialReference.equals(s),{datumTransformation:l}=r,c=new L.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=r.srcResolution||(o?Object(Y.g)(c,s,e,l):c);if(!u)return null;const{pyramidLevel:f,pyramidResolution:h,excessiveReading:d}=Object(Y.h)(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=o?Object(Y.e)(e,s,l):e;const y=Object(a.o)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const b={x:Math.floor((m.xmin-p.origin.x)/h.x+.1),y:Math.floor((p.origin.y-m.ymax)/h.y+.1)},g=Math.ceil((m.xmax-m.xmin)/h.x-.1),x=Math.ceil((m.ymax-m.ymin)/h.y-.1);if(g/t>8||x/i>8)return null;const O=await this.fetchRawPixels(f,b,{width:g,height:x},r);if(!O)return null;if(!o&&1===O.pixelBlocks.length&&(f>0?p.pyramidBlockWidth:p.blockWidth)===t&&(f>0?p.pyramidBlockHeight:p.blockHeight)===i&&u.x===c.x&&u.y===c.y)return{extent:e,srcExtent:m,pixelBlock:O.pixelBlocks[0]};const w=Object(Y.c)(e,O.extent,c,l,y);let v;const I=!r.requestRawData,j={rows:w.spacing[0],cols:w.spacing[1]},{pixelBlocks:S,mosaicSize:T,isPartiallyFilled:R}=O;if(this.rasterJobHandler)v=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:S,srcMosaicSize:T,destDimension:I?{width:t,height:i}:null,coefs:I?w.coefficients:null,sampleSpacing:I?j:null,interpolation:r.interpolation},r);else{const e=Object($.j)(S,T);v=I?Object($.a)(e,{width:t,height:i},w.coefficients,j,r.interpolation):e}return r.requestRawData?{srcExtent:m,pixelBlock:v,transformGrid:w,extent:e,isPartiallyFilled:R}:{srcExtent:m,extent:e,pixelBlock:v}}async fetchRawPixels(e,t,i,r){const{origin:a,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:o}=this.getBlockWidthHeight(e);let{x:l,y:c}=t,{width:u,height:f}=i;r.buffer&&(l-=r.buffer.cols,c-=r.buffer.rows,u+=2*r.buffer.cols,f+=2*r.buffer.rows);const h=Math.floor(l/s),d=Math.floor(c/o),p=Math.floor((l+u-1)/s),m=Math.floor((c+f-1)/o),y=n[e];if(!y)return null;const{minRow:b,minCol:g,maxCol:x,maxRow:O}=y;if(m<b||p<g||d>O||h>x)return null;const w=[];let v,I=!1;for(let _=d;_<=m;_++)for(let t=h;t<=p;t++)_>=b&&t>=g&&O>=_&&x>=t?(v=this._fetchRawTile(e,_,t,r),this.ioConfig.allowPartialFill&&(v=new Promise(e=>{v.then(t=>e(t)).catch(()=>{I=!0,e(null)})})),w.push(v)):w.push(null);if(0===w.length)return null;const j=await Promise.all(w),S={height:(m-d+1)*s,width:(p-h+1)*o},{nativePixelSize:T,spatialReference:R}=this.rasterInfo,C=T.x*2**e,M=T.y*2**e;return{extent:new _.a({xmin:a.x+h*s*C,xmax:a.x+(p+1)*s*C,ymin:a.y-(m+1)*o*M,ymax:a.y-d*o*M,spatialReference:R}),pixelBlocks:j,mosaicSize:S,isPartiallyFilled:I}}async fetchRawTile(e,t,i,r){throw new h.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(Y.e)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(V.a)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var r,a;const{customFetchParameters:n}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(r=null!=(a=i)?a:t.retryCount)?r:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(M.default)(e,{...t,query:{...o,...n},headers:{...l,...c}})}catch(u){if(i>0)return i--,this.request(e,t,i);throw u}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(a.i)(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let a=0;a<t.variables.length;a++){const n=t.variables[a],s=n.dimensions;if(n.name!==r){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const o=s.map(e=>this._getDimensionValuesCount(e)),l=s.length;for(let t=0;t<l;t++){const r=e.filter(e=>e.dimensionName===s[t].name)[0];if(null==r)return null;const a=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(a,s[t]);if(-1===n)return null;o.shift(),i+=t===l-1?n:n*o.reduce((e,t)=>e+t)}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const a=[],n=e.maximumPyramidLevel||0;let s=Math.max(r.x,r.y),o=1/.0254*96*s;for(let e=0;e<=n;e++)a.push({level:n-e,resolution:s,scale:o}),s*=2,o*=2;const l=new L.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new F.a({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:a}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:a,height:n,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new L.a({x:s.xmin,y:s.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(a,n))/Math.LN2-8)));const u=this._computeBlockBoundary(s,o,r,512,512);e.storageInfo=new U({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:r,nativePixelSize:a,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,f=Object(Y.f)(e,r,i);if(!n.intersects(f))return null;if(t<0||t>l)return null;const h=c**t,d=(u.y-f.y)/(h*a.y)/o,p=(f.x-u.x)/(h*a.x)/s,m=Math.min(o-1,Math.floor((d-Math.floor(d))*o)),y=Math.min(s-1,Math.floor((p-Math.floor(p))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:f}}getTileExtent(e,t,i,r,a,n){const[s,o]=n,l=r.x+i*s*e.x,c=r.y-t*o*e.y;return new _.a({xmin:l,xmax:l+s*e.x,ymin:c-o*e.y,ymax:c,spatialReference:a})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}_computeBlockBoundary(e,t,i,r,a){let{x:n,y:s}=t;const o=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-o+.1*n)/r/n),maxCol:Math.floor((e.xmax-o-.1*n)/r/n),minRow:Math.floor((l-e.ymax+.1*s)/a/s),maxRow:Math.floor((l-e.ymin-.1*s)/a/s)}];if(i>0)for(let u=0;u<i;u++)n*=2,s*=2,c.push({minCol:Math.floor((e.xmin-o+.1*n)/r/n),maxCol:Math.floor((e.xmax-o-.1*n)/r/n),minRow:Math.floor((l-e.ymax+.1*s)/a/n),maxRow:Math.floor((l-e.ymin-.1*s)/a/n)});return c}_fetchRawTile(e,t,i,r){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:o,maxCol:l,maxRow:c}=n;if(t<s||i<o||t>c||i>l)return Promise.resolve(null);const u=Object(X.d)(this.url,r.sliceId),f=`${e}/${t}/${i}`;let h=Object(X.c)(u,r.registryId,f);if(!Object(a.i)(h)){const a=Object(W.d)();h=this.fetchRawTile(e,t,i,{...r,signal:a.signal}),Object(X.e)(u,r.registryId,f,h,a),h.catch(()=>{Object(X.b)(u,r.registryId,f)})}return r.signal&&Object(W.p)(r,()=>{Object(X.a)(u,r.registryId,f)}),h}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:a,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex(t=>t[0]<=e&&t[1]>=e):n.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if("ISO8601"===a){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-s)/1e3/r);break;case"minutes":o=Math.round((e-s)/6e4/r);break;case"hours":o=Math.round((e-s)/36e5/r);break;case"days":o=Math.round((e-s)/864e5/r);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r)}return o}return Math.round((e-s)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:a}=e;let n=(null==a?void 0:a.length)||0;if(n)return n;const s=t[0];if(0===n&&"ISO8601"===r){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/i);break;case"hours":n=Math.round((t[1]-t[0])/36e5/i);break;case"days":n=Math.round((t[1]-t[0])/864e5/i);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return n}return Math.round((t[1]-t[0])/i)}};Object(r.a)([Object(o.b)(b.n)],K.prototype,"url",null),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],K.prototype,"datasetName",void 0),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),Object(r.a)([Object(o.b)()],K.prototype,"rasterInfo",void 0),Object(r.a)([Object(o.b)()],K.prototype,"ioConfig",void 0),Object(r.a)([Object(o.b)()],K.prototype,"sourceJSON",void 0),K=Object(r.a)([Object(f.a)("esri.layers.support.rasterDatasets.BaseRaster")],K);var Z=K,Q=i("dCrW");function ee(e){const t=e.fields,i=e.records,r=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",a=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),n=a.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[r]=o++,l=1;l<n.length;l++)t[n[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:"",fields:a,features:s}}let te=class extends A.a{constructor(){super(...arguments),this.type="identity"}forwardTransform(e){return e}inverseTransform(e){return e}};Object(r.a)([Object(o.b)({json:{write:!0}})],te.prototype,"spatialReference",void 0),Object(r.a)([Object(c.a)({IdentityXform:"identity"})],te.prototype,"type",void 0),te=Object(r.a)([Object(f.a)("esri.layers.support.rasterTransforms.IdentityTransform")],te);var ie=te,re=i("Cduq");function ae(e,t,i){const{x:r,y:a}=t;if(i<2)return{x:e[0]+r*e[2]+a*e[4],y:e[1]+r*e[3]+a*e[5]};if(2===i){const t=r*r,i=a*a,n=r*a;return{x:e[0]+r*e[2]+a*e[4]+t*e[6]+n*e[8]+i*e[10],y:e[1]+r*e[3]+a*e[5]+t*e[7]+n*e[9]+i*e[11]}}const n=r*r,s=a*a,o=r*a,l=n*r,c=n*a,u=r*s,f=a*s;return{x:e[0]+r*e[2]+a*e[4]+n*e[6]+o*e[8]+s*e[10]+l*e[12]+c*e[14]+u*e[16]+f*e[18],y:e[1]+r*e[3]+a*e[5]+n*e[7]+o*e[9]+s*e[11]+l*e[13]+c*e[15]+u*e[17]+f*e[19]}}function ne(e,t,i){const{xmin:r,ymin:a,xmax:n,ymax:s,spatialReference:o}=t;let l=[];if(i<2)l.push({x:r,y:s}),l.push({x:n,y:s}),l.push({x:r,y:a}),l.push({x:n,y:a});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:a+(s-a)*t/(e-1)}),l.push({x:n,y:a+(s-a)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(n-r)*t/e,y:a}),l.push({x:r+(n-r)*t/e,y:s})}l=l.map(t=>ae(e,t,i));const c=l.map(e=>e.x),u=l.map(e=>e.y);return new _.a({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let se=class extends A.a{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const a=[];for(let n=0;n<i.length;n++)a.push(i[n]),a.push(r[n]);return a}writeForwardCoefficients(e,t,i){const r=[],a=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?r.push(e[n]):a.push(e[n]);t.coeffX=r,t.coeffY=a}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,r,a,n,s]=e,o=r*s-n*a,l=n*a-r*s;return[(n*i-t*s)/o,(r*i-t*a)/l,s/o,a/l,-n/o,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const a=[];for(let n=0;n<i.length;n++)a.push(i[n]),a.push(r[n]);return a}writeInverseCoefficients(e,t,i){const r=[],a=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?r.push(e[n]):a.push(e[n]);t.inverseCoeffX=r,t.inverseCoeffY=a}forwardTransform(e){if("point"===e.type){const t=ae(this.forwardCoefficients,e,this.polynomialOrder);return new L.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return ne(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=ae(this.inverseCoefficients,e,this.polynomialOrder);return new L.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return ne(this.inverseCoefficients,e,this.polynomialOrder)}};Object(r.a)([Object(o.b)({json:{write:!0}})],se.prototype,"polynomialOrder",void 0),Object(r.a)([Object(o.b)()],se.prototype,"forwardCoefficients",void 0),Object(r.a)([Object(u.a)("forwardCoefficients",["coeffX","coeffY"])],se.prototype,"readForwardCoefficients",null),Object(r.a)([Object(re.a)("forwardCoefficients")],se.prototype,"writeForwardCoefficients",null),Object(r.a)([Object(o.b)({json:{write:!0}})],se.prototype,"inverseCoefficients",null),Object(r.a)([Object(u.a)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],se.prototype,"readInverseCoefficients",null),Object(r.a)([Object(re.a)("inverseCoefficients")],se.prototype,"writeInverseCoefficients",null),Object(r.a)([Object(o.b)({json:{write:!0}})],se.prototype,"spatialReference",void 0),Object(r.a)([Object(c.a)({PolynomialXform:"polynomial"})],se.prototype,"type",void 0),se=Object(r.a)([Object(f.a)("esri.layers.support.rasterTransforms.PolynomialTransform")],se);var oe=se;const le={PolynomialXform:oe,IdentityXform:ie},ce=Object.keys(le),ue=new Map;ue.set("int16","esriFieldTypeSmallInteger"),ue.set("int32","esriFieldTypeInteger"),ue.set("int64","esriFieldTypeInteger"),ue.set("float32","esriFieldTypeSingle"),ue.set("float64","esriFieldTypeDouble"),ue.set("text","esriFieldTypeString");let fe=class extends Z{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new h.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const a=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(a<0)return null;const n=this._buildCacheFilePath(a,t,i,r.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const u=await this.request(n,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:r.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(t=>!e[t])}_parseHeader(e){var t,i;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:a,histograms:n,colormap:s,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,f=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),h=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new C.a(null!=h&&h.wkid||null!=h&&h.wkt?h:d);let m=new _.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const y=new L.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),b=Math.round((m.xmax-m.xmin)/y.x),g=Math.round((m.ymax-m.ymin)/y.y),x=this._parseTransform(e.geodataXform),O=x?m:null;x&&(m=x.forwardTransform(m),y.x=(m.xmax-m.xmin)/b,y.y=(m.ymax-m.ymin)/g);const w=null!=(i=e.properties)?i:{},v=e.format.toLowerCase().replace("cache/",""),I=new L.a(e.origin.x,e.origin.y,p);let j,S,T,R;if(s&&s.colors)for(j=[],S=0;S<s.colors.length;S++)T=s.colors[S],R=s.values?s.values[S]:S,j.push([R,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const M=e.LODInfos,k=[];for(S=0;S<M.levels.length;S++)k.push({level:M.levels[S],resolution:M.resolutions[S],scale:96/.0254*M.resolutions[S]});const P=new F.a({dpi:96,lods:k,format:v,origin:I,size:[o,l],spatialReference:p}),D={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},B=[{maxCol:Math.ceil(b/o)-1,maxRow:Math.ceil(g/l)-1,minCol:0,minRow:0}];let N=2;if(u>0)for(S=0;S<u;S++)B.push({maxCol:Math.ceil(b/N/o)-1,maxRow:Math.ceil(g/N/l)-1,minCol:0,minRow:0}),N*=2;return{storageInfo:D,rasterInfo:new J.a({width:b,height:g,pixelType:r,bandCount:a,extent:m,nativeExtent:O,transform:x,spatialReference:p,pixelSize:y,keyProperties:w,statistics:f,histograms:n,multidimensionalInfo:e.mdInfo,colormap:j,storageInfo:new U({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:I,tileInfo:P,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:B})})}}_parseTransform(e){var t,i,r;if((r=e)&&!ce.includes(null==r?void 0:r.type))throw new h.a("cloudraster:open","the data contains unsupported geodata transform types");const a=function(e){if(!(null==e?void 0:e.type))return null;const t=le[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===a.type)return null;if(null==(t=a.forwardCoefficients)||!t.length||null==(i=a.inverseCoefficients)||!i.length)throw new h.a("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return a}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),r=await Promise.all([t,i]);let a;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":ue.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(a={fields:e,features:i})}}return!a&&r[1]&&(a=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),a=t.getUint16(8,!0),n=t.getUint16(10,!0),s={version:i,recordCount:r,headerByteCount:a,recordByteCount:n};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(Q.a)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<r&&e.byteLength-o>n;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push(Object(Q.a)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=n}}return{header:s,fields:l,records:c,recordSet:ee({fields:l,records:c})}}}.parse(r[1]).recordSet),E.default.fromJSON(a)}_buildCacheFilePath(e,t,i,r){const n=this.storageInfo.packetSize,s=Math.floor(t/n)*n,o=Math.floor(i/n)*n,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=null==r?void 0:r[0];if(!Object(a.i)(u)||!f)return`${this.url}/_alllayers/${c}/${l}.bundle`;let h=u.variables.filter(e=>e.name===f.variableName)[0].dimensions[0].values.indexOf(f.values[0]).toString(16);const d=4-h.length;for(let a=0;a<d;a++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${f.variableName}/${h}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,a=0;for(r=0;r<5;r++)a|=(255&i[r])<<8*r;const n=0xffffffffff&a;for(a=0,r=5;r<8;r++)a|=(255&i[r])<<8*(r-5);return{position:n,recordSize:0xffffffffff&a}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(r.a)([Object(o.b)({readOnly:!0})],fe.prototype,"storageInfo",void 0),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=Object(r.a)([Object(f.a)("esri.layers.support.rasterDatasets.CloudRaster")],fe);var he=fe;let de=class extends Z{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:a,name:n,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:f}=i,h=this.data.extent||new _.a({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new C.a({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p=new J.a({width:c,height:u,pixelType:f,extent:h,nativeExtent:o,transform:l,pixelSize:{x:h.width/c,y:h.height/u},spatialReference:h.spatialReference,bandCount:3,keyProperties:s||{},statistics:r,isPseudoSpatialReference:d,histograms:a});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(e,t,i,r={}){const a=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(a)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve(Object($.n)(e,t,r)),s=Object(a.i)(this.rasterInfo.statistics),o=Object(a.i)(this.rasterInfo.histograms),l=s&&o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object($.g)(e)),c=await Object(W.j)([n,l]);if(!c[0].value&&c[1].value)throw new h.a("inmemory-raster:open","failed to build in memory raster");var u,f;this._pixelBlockTiles=c[0].value,s||(this.rasterInfo.statistics=null==(u=c[1].value)?void 0:u.statistics),o&&(this.rasterInfo.histograms=null==(f=c[1].value)?void 0:f.histograms)}};Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),Object(r.a)([Object(o.b)()],de.prototype,"data",void 0),de=Object(r.a)([Object(f.a)("esri.layers.support.rasterDatasets.InMemoryRaster")],de);var pe=de;function me(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const a=me(e,i);for(let e=0;e<a.length;e++)me(a[e],t).forEach(e=>r.push(e));return r}const a=e.getElementsByTagNameNS("*",i);if(!a||0===a.length)return[];for(let n=0;n<a.length;n++)r.push(a[n]||a.item[n]);return r}function ye(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=me(e,i);return r.length>0?t?ye(r[0],t):r[0]:null}function be(e,t=null){const i=t?ye(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function ge(e,t){return function(e,t){const i=me(e,t),r=[];let a;for(let n=0;n<i.length;n++)a=i[n].textContent||i[n].nodeValue,a&&(a=a.trim(),""!==a&&r.push(a));return r}(e,t).map(e=>Number(e))}function xe(e,t){const i=be(e,t);return Number(i)}function Oe(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),a=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===a}function we(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function ve(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new C.a({wkid:t});if(!(e=String(e)).startsWith("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(e=>e.trim()).filter(e=>""!==e),r=i[i.length-1].split(",");return"EPSG"===r[0]&&e.endsWith('"]]')&&(t=Number(r[1]),!isNaN(t)&&0!==t)?new C.a({wkid:t}):new C.a({wkt:e})}function Ie(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(Oe(e,"SRS")){if(!i.spatialReference){const t=be(e);i.spatialReference=ve(t)}}else if(Oe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const i=ye(e,"GeodataXform"),r=ve(xe(i,"SpatialReference/WKID")||be(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const a=null!=(t=xe(i,"PolynomialOrder"))?t:1,n=ge(i,"CoeffX/Double"),s=ge(i,"CoeffY/Double"),o=ge(i,"InverseCoeffX/Double"),l=ge(i,"InverseCoeffY/Double"),c=we(n,s),u=we(o,l);return{spatialReference:r,transform:new oe({spatialReference:r,polynomialOrder:a,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else me(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=be(e));else if(Oe(e,"PAMRasterBand")){const t=function(e){var t;const i=xe(e,"NoDataValue"),r=ye(e,"Histograms/HistItem"),a=xe(r,"HistMin"),n=xe(r,"HistMax"),s=xe(r,"BucketCount"),o=null==(t=be(r,"HistCounts"))?void 0:t.split("|").map(e=>Number(e));let l,c,u,f;me(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":f=i}});const h=xe(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:a,max:n,size:s||o.length,counts:o}:null,sourceBandIndex:h,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:f}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const r=i.rasterBands;return r&&(i.statistics=r[0].statistics?r.map(e=>e.statistics):null,i.histograms=r[0].histogram?r.map(e=>e.histogram):null),i}let je=class extends Z{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:a,transform:n}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new C.a({wkid:3857})),null!=a&&a.length&&null==r&&(r=Object($.f)(a));const{width:o,height:l}=t;let c=new _.a({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=n?n.forwardTransform(c):c;let f=!0;if(n){const e=n.forwardCoefficients;f=e&&0===e[1]&&0===e[2],f&&(n=null,c=u)}const h=new pe({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:t,statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await h.open(),this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object(V.b)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new h.a("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const r=Object(a.o)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],s=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),o=this.datasetFormat,l="JPG"===o?"jgw":"PNG"===o?"pgw":"BMP"===o?"bpw":null,c=n.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:r}),u=await Object(W.j)([s,c]);if(null!=r&&r.aborted)throw Object(W.e)();const f=Ie(null==(i=u[0].value)?void 0:i.data);if(!f.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;f.transform=6===(null==e?void 0:e.length)?new oe({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],je.prototype,"datasetFormat",void 0),je=Object(r.a)([Object(f.a)("esri.layers.support.rasterDatasets.ImageAuxRaster")],je);var Se=je,Te=i("q2iW"),Re=i("llFo");let Ce=class extends Z{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;if(this.sourceJSON=r,!r)throw new h.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new h.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=r.cacheType,null==this.tileType&&(this.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(r.tileInfo.format.toLowerCase())>-1?"Map":"lerc"===r.tileInfo.format.toLowerCase()?"Elevation":"Raster"),this.datasetName=r.name.slice(r.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!Object(a.i)(n))throw new h.a("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(Te.a)(r.tileInfo,r):F.a.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=n,a=.5/n.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(s=e.lods.filter(e=>e.resolution===i.x)[0],s||(s=e.lods[e.lods.length-1])):(s=e.lods.filter(e=>Math.abs(e.scale-r.maxScale)<a)[0],s||(s=e.lods.filter(e=>e.scale>r.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter(e=>Math.abs(e.scale-r.minScale)<a)[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>a||!e.lods.some(e=>Math.abs(e.resolution-u)<a))&&(i.x=i.y=s.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const f=s.level-o.level,[h,d]=e.size,p=e.origin;let{x:m,y:y}=i;const b=[{minCol:Math.floor((t.xmin-p.x+.1*m)/h/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/h/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/y),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/y)}];if(f>0)for(let r=0;r<f;r++)m*=2,y*=2,b.push({minCol:Math.floor((t.xmin-p.x+.1*m)/h/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/h/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/m),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/m)});n.storageInfo=new U({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:f,tileInfo:e,blockBoundary:b}),this._set("rasterInfo",n)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:Object(d.J)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Re.a({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:a,extent:n,pixelSize:s}=this.rasterInfo,o=`${this.url}/tile/${a.maximumPyramidLevel-e+this._levelOffset}/${t}/${i}`,l=this._slices?{sliceId:r.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:"array-buffer",signal:r.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=a.blockBoundary[e];if("jpg"!==a.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return u;const{origin:h,blockWidth:d,blockHeight:p}=a,m=2**e,y=Math.round((n.xmin-h.x)/(s.x*m))%d,b=Math.round((n.xmax-h.x)/(s.x*m))%d,g=Math.round((h.y-n.ymax)/(s.x*m))%p,x=Math.round((h.y-n.ymin)/(s.x*m))%p,O=i===f.minCol?y:0,w=t===f.minRow?g:0,v=i===f.maxCol?b:d,I=t===f.maxRow?x:p;return Object($.m)(u,{x:O,y:w},{width:v-O,height:I-w}),u}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.filter(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName)[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Promise.all([i,r]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(a.o)(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let s=n-r+this._levelOffset;const o=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,r++,i=this.identifyPixelLocation(o,r,Object(a.o)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=C.a.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new J.a({width:i,height:r,bandCount:3,extent:_.a.fromJSON(t.extent),spatialReference:a,pixelSize:new L.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:n,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:n,f:"json"},signal:s}).then(e=>E.default.fromJSON(e.data)).catch(()=>null),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:n,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:n,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then(e=>e.data).catch(()=>{}),f=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),h=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Promise.all([o,l,c,u,f,h]).then(e=>{let n=null;if(t.minValues&&t.minValues.length===t.bandCount){n=[];for(let e=0;e<t.minValues.length;e++)n.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new J.a({width:i,height:r,bandCount:t.bandCount,extent:_.a.fromJSON(t.extent),spatialReference:a,pixelSize:new L.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:n,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}};Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Object(r.a)([Object(o.b)()],Ce.prototype,"tileType",void 0),Ce=Object(r.a)([Object(f.a)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ce);var _e=Ce,Me=i("Piei"),ke=i("5VpP");const Fe=new Map;Fe.set("Int8","s8"),Fe.set("UInt8","u8"),Fe.set("Int16","s16"),Fe.set("UInt16","u16"),Fe.set("Int32","s32"),Fe.set("UInt32","u32"),Fe.set("Float32","f32"),Fe.set("Float64","f32"),Fe.set("Double64","f32");const Pe=new Map;Pe.set("lerc",".lrc"),Pe.set("none",".til"),Pe.set("deflate",".pzp"),Pe.set("jpeg",".jzp");let De=class extends Z{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(a.o)(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:s}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var o;null!=t&&(n.statistics=null!=(o=t.statistics)?o:n.statistics,n.histograms=t.histograms,t.histograms&&!Object(a.i)(n.statistics)&&(n.statistics=Object($.f)(t.histograms)))}this._set("rasterInfo",n),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let c,u,f=0,h=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:b,height:g,bandCount:x}=this.rasterInfo,O=[],w="none"===m?1:x;for(;f<this._storageIndex.length;)h++,c=Math.ceil(b/d/y**h),u=Math.ceil(g/p/y**h),f+=c*u*w*4,O.push({maxRow:u,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=O,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:a,blockHeight:n,blockBoundary:s,compression:o}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:f,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const e=new Uint8Array(a*n);return new Me.a({width:a,height:n,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:c,y=[];let b=0;for(b=0;b<m;b++)(!p||p.indexOf[b]>-1)&&y.push(this.request(this._files.data,{range:{from:f[b].from,to:f[b].to},responseType:"array-buffer",signal:r.signal}));const g=await Promise.all(y),x=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),O=new Uint8Array(x);let w=0;for(b=0;b<m;b++)O.set(new Uint8Array(g[b].data),w),w+=g[b].data.byteLength;const v="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",I=await this.decodePixelBlock(O.buffer,{width:a,height:n,format:v,pixelType:u});let j=0,S=0;if(h!==a||d!==n){let e=I.mask;if(e)for(b=0;b<n;b++)if(S=b*a,b<d)for(j=h;j<a;j++)e[S+j]=0;else for(j=0;j<a;j++)e[S+j]=0;else for(e=new Uint8Array(a*n),I.mask=e,b=0;b<d;b++)for(S=b*a,j=0;j<h;j++)e[S+j]=1}return I}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,a,n,s;if(ke.a){for(i=new Uint8Array(e),a=new ArrayBuffer(e.byteLength),r=new Uint8Array(a),n=0;n<e.byteLength/4;n++)for(s=0;s<4;s++)r[4*n+s]=i[4*n+3-s];t=new Uint32Array(a)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:a,pyramidScalingFactor:n,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,u="none"===s?1:c;let f,h,d,p=0,m=0;for(d=0;d<e;d++)m=n**d,f=Math.ceil(o/r/m),h=Math.ceil(l/a/m),p+=f*h;m=n**e,f=Math.ceil(o/r/m),h=Math.ceil(l/a/m),p+=t*f+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let b=0,g=0;const x=[];for(let O=0;O<u;O++)b=y[4*O+0]*2**32+y[4*O+1],g=b+y[4*O+2]*2**32+y[4*O+3],x.push({from:b,to:g});return{ranges:x,actualTileWidth:i<f-1?r:Math.ceil(o/m)-r*(f-1),actualTileHeight:t<h-1?a:Math.ceil(l/m)-a*(h-1)}}_parseHeader(e){const t=ye(e,"MRF_META/Raster");if(!t)throw new h.a("mrf:open","not a valid MRF format");const i=ye(t,"Size"),r=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),s=(be(t,"Compression")||"none").toLowerCase();if(!s||-1===["none","lerc"].indexOf(s))throw new h.a("mrf:open","currently does not support compression "+s);const o=be(t,"DataType")||"UInt8",l=Fe.get(o);if(null==l)throw new h.a("mrf:open","currently does not support pixel type "+o);const c=ye(t,"PageSize"),u=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),d=ye(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),ye(e,"MRF_META/CachedSource"))throw new h.a("mrf:open","currently does not support MRF referencing other data files");const y=ye(e,"MRF_META/GeoTags"),b=ye(y,"BoundingBox");if(null==b)throw new h.a("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const g=parseFloat(b.getAttribute("minx")),x=parseFloat(b.getAttribute("miny")),O=parseFloat(b.getAttribute("maxx")),w=parseFloat(b.getAttribute("maxy")),v=be(y,"Projection")||"",I=be(e,"datafile"),j=be(e,"IndexFile");let S;if("LOCAL_CS[]"!==v)if(v.toLowerCase().startsWith("epsg:")){const e=Number(v.slice(5));isNaN(e)||0===e||(S=new C.a({wkid:e}))}else S=ve(v);const T=new _.a(g,x,O,w);T.spatialReference=S;const R=ye(e,"MRF_META/Rsets"),M=parseInt(R&&R.getAttribute("scale")||"2",10),k=new U({origin:new L.a({x:T.xmin,y:T.ymax,spatialReference:S}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:s,pyramidScalingFactor:M}),F=new L.a({x:(O-g)/r,y:(w-x)/a,spatialReference:S});return{rasterInfo:new J.a({width:r,height:a,extent:T,spatialReference:S,bandCount:n,pixelType:l,pixelSize:F,noDataValue:p,storageInfo:k}),files:{mrf:this.url,index:j||this.url.replace(".mrf",".idx"),data:I||this.url.replace(".mrf",Pe.get(s))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ie(t)}catch{return null}}};Object(r.a)([Object(o.b)()],De.prototype,"_files",void 0),Object(r.a)([Object(o.b)()],De.prototype,"_storageIndex",void 0),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],De.prototype,"datasetFormat",void 0),De=Object(r.a)([Object(f.a)("esri.layers.support.rasterIO.MRFRaster")],De);var Be=De,Ne=i("D/0F"),He=i("bT0G");const ze=function(e,t){const i=e.get(t);return i&&i.values},Le=function(e,t){const i=e.get(t);return i&&i.values[0]};let Ee=class extends Z{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const i=e?Object(a.o)(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!r)throw new h.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:n,firstIFD:s,isBigTiff:o}=Object(He.f)(r),l=[];await this.readIFDs(l,r,n,s,0,o?8:4,i);const c=Object(He.c)(l),{width:u,height:f,tileWidth:d,tileHeight:p,planes:m,pixelType:y,compression:b,firstPyramidLevel:g,maximumPyramidLevel:x,pyramidBlockWidth:O,pyramidBlockHeight:w,tileBoundary:v,affine:I,metadata:j}=c,S=_.a.fromJSON(c.extent),T=S.spatialReference,R=new L.a(S?{x:S.xmin,y:S.ymax,spatialReference:T}:{x:0,y:0}),C=new U({blockWidth:d,blockHeight:p,pyramidBlockWidth:O,pyramidBlockHeight:w,compression:b,origin:R,firstPyramidLevel:g,maximumPyramidLevel:x,blockBoundary:v}),M=new L.a({x:(S.xmax-S.xmin)/u,y:(S.ymax-S.ymin)/f,spatialReference:T}),k=new J.a({width:u,height:f,bandCount:m,pixelType:y,compression:b,pixelSize:M,storageInfo:C,spatialReference:T,keyProperties:j?{BandProperties:j.bandProperties,DataType:j.dataType}:{},extent:S,statistics:j?j.statistics:null});if(null!=I&&I.length&&(k.nativeExtent=new _.a({xmin:-.5,ymin:.5-f,xmax:u-.5,ymax:.5,spatialReference:T}),k.transform=new oe({polynomialOrder:1,forwardCoefficients:[I[2]+I[0]/2,I[5]-I[3]/2,I[0],I[3],-I[1],-I[4]]}),k.extent=k.transform.forwardTransform(k.nativeExtent),k.pixelSize=new L.a({x:(S.xmax-S.xmin)/u,y:(S.ymax-S.ymin)/f,spatialReference:T}),C.origin.x=-.5,C.origin.y=.5),null==(t=this.ioConfig.skipExtensions)||!t.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var F;if(k.statistics=null!=(F=t.statistics)?F:k.statistics,k.histograms=t.histograms,t.histograms&&!Object(a.i)(k.statistics)&&(k.statistics=Object($.f)(t.histograms)),t.transform&&!I){k.transform=t.transform,k.nativeExtent=k.extent;const e=k.transform.forwardTransform(k.nativeExtent);k.pixelSize=new L.a({x:(e.xmax-e.xmin)/u,y:(e.ymax-e.ymin)/f,spatialReference:T}),k.extent=e}k.spatialReference||(k.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",k),this._headerInfo={littleEndian:n,isBigTiff:o,ifds:l,...c},!this._headerInfo.isSupported)throw new h.a("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){var a;if(null==(a=this._headerInfo)||!a.isSupported||this.isBlockOutside(e,t,i))return null;const n=this.getTileLocation(e,t,i);if(!n)return null;const{range:s,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,{data:u}=await this.request(this.url,{range:s,responseType:"array-buffer",signal:r.signal}),{blockWidth:f,blockHeight:h}=this.getBlockWidthHeight(e),d=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offset:0,size:0},width:f,height:h,planes:null,pixelType:null});let p,m,y;if(o!==f||l!==h){let e=d.mask;if(e)for(p=0;p<h;p++)if(y=p*f,p<l)for(m=o;m<f;m++)e[y+m]=0;else for(m=0;m<f;m++)e[y+m]=0;else for(e=new Uint8Array(f*h),d.mask=e,p=0;p<l;p++)for(y=p*f,m=0;m<o;m++)e[y+m]=1}return d}async readIFDs(e,t,i,r,a,n=4,s){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+a,to:r+a+this._bufferSize},responseType:"array-buffer",signal:s})).data,a=r+a,r=0);const o=await this.readIFD(t,i,r,a,Ne.a.TIFF_TAGS,n,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-a,a,n,s)}async readIFD(e,t,i,r,a=Ne.a.TIFF_TAGS,n=4,s){if(!e)return null;const o=Object(He.e)(e,t,i,r,a,n);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const a=i.map(e=>e.offlineOffsetSize),n=Math.min.apply(null,a.map(e=>e[0]));if(Math.min.apply(null,a.map(e=>e[0]+e[1]))-n<=this._bufferSize){const{data:a}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:s});e=a,r=n,i.forEach(i=>Object(He.d)(e,t,i,r))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),a=i.values;if(a&&a.length>4){const n=a[0]+"."+a[1]+"."+a[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,Ne.a.GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,Ne.a.TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:r,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(r-1),s=this._headerInfo.ifds[n];if(!s)return null;const o=ze(s,"TILEOFFSETS");if(void 0===o)return null;const l=ze(s,"TILEBYTECOUNTS"),{minRow:c,minCol:u,maxRow:f,maxCol:h}=a[n];if(t>f||i>h||t<c||i<u)return null;const d=Le(s,"IMAGEWIDTH"),p=Le(s,"IMAGELENGTH"),m=Le(s,"TILEWIDTH"),y=Le(s,"TILELENGTH"),b=t*(h+1)+i,g=o[b],x=l[b];return null==g||null==x?null:{range:{from:g,to:g+x-1},ifd:s,actualTileWidth:i===h?d%m:m,actualTileHeight:t===f?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ie(t)}catch{return null}}};Object(r.a)([Object(o.b)()],Ee.prototype,"_files",void 0),Object(r.a)([Object(o.b)()],Ee.prototype,"_headerInfo",void 0),Object(r.a)([Object(o.b)()],Ee.prototype,"_bufferSize",void 0),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=Object(r.a)([Object(f.a)("esri.layers.support.rasterDatasets.TIFFRaster")],Ee);var Je=Ee;const Ae=new Map;Ae.set("CRF",{desc:"Cloud Raster Format",constructor:he}),Ae.set("MRF",{desc:"Meta Raster Format",constructor:Be}),Ae.set("TIFF",{desc:"GeoTIFF",constructor:Je}),Ae.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_e}),Ae.set("JPG",{desc:"JPG Raster Format",constructor:Se}),Ae.set("PNG",{desc:"PNG Raster Format",constructor:Se}),Ae.set("GIF",{desc:"GIF Raster Format",constructor:Se}),Ae.set("BMP",{desc:"BMP Raster Format",constructor:Se});const qe=Object(l.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Ue(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let We=class extends(Object(w.a)(Object(j.a)(Object(I.a)(Object(g.a)(Object(v.a)(z(Object(y.a)(m.a)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(a.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._openRaster(t),()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new O.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name="Raster."+e.name,t});i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(x.b)(r,i)||void 0;if(null!=a)return a}createPopupTemplate(e){return Object(S.a)(this,e)}write(e,t){const{raster:i}=this;return(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(e,t):(t&&t.messages&&t.messages.push(new h.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t.origin}/${t.layerContainerType||"operational-layers"}'`,{layer:this})),null)}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Ae.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let a=e.datasetFormat;null==a&&t.lastIndexOf(".")&&(a=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const n={url:t,sourceJSON:r,datasetFormat:a,ioConfig:i||{bandIds:null,sampling:null}};let s,o;if(this.supportedFormats.has(a))return s=Ae.get(a).constructor,o=new s(n),await o.open({signal:e.signal}),o;if(a)throw new h.a("rasterfactory:open","not a supported format "+a);const l=Array.from(Ae.keys());let c=0;const u=function(){return a=l[c++],a?(s=Ae.get(a).constructor,o=new s(n),o.open({signal:e.signal}).then(()=>o).catch(()=>u())):null};return u()}static register(e,t,i){Ae.has(e.toUpperCase())||Ae.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new h.a("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(r.a)([Object(o.b)({type:[s.a],json:{write:{overridePolicy:Ue}}})],We.prototype,"bandIds",void 0),Object(r.a)([Object(o.b)({json:{write:{overridePolicy:Ue}}}),Object(c.a)(qe)],We.prototype,"interpolation",void 0),Object(r.a)([Object(o.b)({json:{write:!0}})],We.prototype,"multidimensionalDefinition",void 0),Object(r.a)([Object(o.b)(b.e)],We.prototype,"legendEnabled",void 0),Object(r.a)([Object(o.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],We.prototype,"isReference",void 0),Object(r.a)([Object(o.b)({type:["show","hide"]})],We.prototype,"listMode",void 0),Object(r.a)([Object(o.b)()],We.prototype,"sourceJSON",void 0),Object(r.a)([Object(o.b)({readOnly:!0})],We.prototype,"version",void 0),Object(r.a)([Object(o.b)()],We.prototype,"title",void 0),Object(r.a)([Object(o.b)({readOnly:!0,json:{read:!1}})],We.prototype,"type",void 0),Object(r.a)([Object(o.b)({type:["ArcGISTiledImageServiceLayer"]})],We.prototype,"operationalLayerType",void 0),Object(r.a)([Object(o.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Ue,writer(e,t,i){t[i]=!e}}}})],We.prototype,"popupEnabled",void 0),Object(r.a)([Object(o.b)({type:p.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Ue}}})],We.prototype,"popupTemplate",void 0),Object(r.a)([Object(o.b)({readOnly:!0})],We.prototype,"defaultPopupTemplate",null),Object(r.a)([Object(o.b)({readOnly:!0,type:[O.a]})],We.prototype,"fields",null),Object(r.a)([Object(o.b)({types:x.a,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Ue},origins:{"web-scene":{types:x.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],We.prototype,"renderer",null),Object(r.a)([Object(u.a)("renderer")],We.prototype,"readRenderer",null),We=Object(r.a)([Object(f.a)("esri.layers.ImageryTileLayer")],We),t.default=We}}]);