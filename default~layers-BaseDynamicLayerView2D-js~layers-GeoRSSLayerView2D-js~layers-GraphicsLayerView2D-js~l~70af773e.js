(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~layers-BaseDynamicLayerView2D-js~layers-GeoRSSLayerView2D-js~layers-GraphicsLayerView2D-js~l~70af773e"],{

/***/ "+0fo":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
var e={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\n  gl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\n  vec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\n  gl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\n  lowp vec4 color = texture2D(u_tex, v_uv);\n  gl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\n  gl_Position = vec4(a_pos, 0.0, 1.0);\n  v_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\n  return max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n  vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n  vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n  float d = q.x - min(q.w, q.y);\n  float e = 1.0e-10;\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\n  float vIn = rgb2v(Cb);\n  vec3 hsvTint = rgb2hsv(Cs);\n  vec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\n  return hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\n  return (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\n  return (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\n return (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\n  return (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\n\treturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\n  if (Cs <= 0.5) {\n    return Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n  }\n  if (Cb <= 0.25) {\n    return Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n  }\n  return Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\n  return (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\n  return min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\n  return max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\n  return dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\n  return maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\n  float lum = lumv3(color);\n  float mincol = minv3(color);\n  float maxcol = maxv3(color);\n  if (mincol < 0.0) {\n    color = lum + ((color - lum) * lum) / (lum - mincol);\n  }\n  if (maxcol > 1.0) {\n    color = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n  }\n  return color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\n  float lbase = lumv3(cbase);\n  float llum = lumv3(clum);\n  float ldiff = llum - lbase;\n  vec3 color = cbase + vec3(ldiff);\n  return clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\n  float minbase = minv3(cbase);\n  float sbase = satv3(cbase);\n  float ssat = satv3(csat);\n  vec3 color;\n  if (sbase > 0.0) {\n    color = (cbase - minbase) * ssat / sbase;\n  } else {\n    color = vec3(0.0);\n  }\n  return setLum(color, clum);\n}\nvoid main() {\n  vec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\n  gl_FragColor = src *  u_opacity;\n#else\n  vec4 dst = texture2D(u_backbufferTexture, v_uv);\n  vec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\n  vec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\n  float as = u_opacity * src.a;\n  float ab = dst.a;\n  #ifdef DESTINATION_OVER\n    gl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n  #endif\n  #ifdef SOURCE_IN\n    vec4 color = vec4(as * Cs * ab, as * ab);\n    vec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\n    gl_FragColor = color + fadeColor;\n  #endif\n  #ifdef DESTINATION_IN\n    vec4 color = vec4(ab * Cb * as, ab * as);\n    vec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\n    gl_FragColor = color + fadeColor;\n  #endif\n  #ifdef SOURCE_OUT\n    gl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n  #endif\n  #ifdef DESTINATION_OUT\n    gl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n  #endif\n  #ifdef SOURCE_ATOP\n    gl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n  #endif\n  #ifdef DESTINATION_ATOP\n    gl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n  #endif\n  #ifdef XOR\n    gl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\n                        as * (1.0 - ab) + ab * (1.0 - as));\n  #endif\n  #ifdef MULTIPLY\n    gl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef SCREEN\n    gl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef OVERLAY\n    vec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef DARKEN\n    gl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef LIGHTER\n    gl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n  #endif\n  #ifdef LIGHTEN\n    gl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef COLOR_DODGE\n    vec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef COLOR_BURN\n    vec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef HARD_LIGHT\n    vec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef SOFT_LIGHT\n    vec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef DIFFERENCE\n    gl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef EXCLUSION\n     vec3 f = Cs + Cb - 2.0 * Cs * Cb;\n     gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef INVERT\n    gl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n  #endif\n  #ifdef VIVID_LIGHT\n    vec3 f = vec3(vividLight(Cb.r, Cs.r),\n                  vividLight(Cb.g, Cs.g),\n                  vividLight(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef HUE\n    vec3 f = setLumSat(Cs,Cb,Cb);\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef SATURATION\n    vec3 f = setLumSat(Cb,Cs,Cb);\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef COLOR\n    vec3 f = setLum(Cs,Cb);\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef LUMINOSITY\n    vec3 f = setLum(Cb,Cs);\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef PLUS\n    gl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n  #endif\n  #ifdef MINUS\n     gl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n  #endif\n  #ifdef AVERAGE\n     vec3 f = (Cb + Cs) / 2.0;\n     gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n  #ifdef REFLECT\n    vec3 f = vec3(reflectBlend(Cb.r, Cs.r),\n                  reflectBlend(Cb.g, Cs.g),\n                  reflectBlend(Cb.b, Cs.b));\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\n                        as + ab * (1.0 - as));\n  #endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\n  gl_Position = vec4(a_position , 0.0, 1.0);\n  v_uv = (a_position + 1.0) / 2.0;\n}"},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\n  float b = 1.0 / 6.0;\n  float v2 = v * v;\n  float v3 = v2 * v;\n  float w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\n  float w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\n  float w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\n  float w3 = b * v3;\n  return vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\n  vec4 w = computeWeights(v);\n  float g0 = w.x + w.y;\n  float g1 = w.z + w.w;\n  float h0 = 1.0 - (w.y / g0) + v;\n  float h1 = 1.0 + (w.w / g1) - v;\n  return vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\n  vec2 eX = vec2(1.0 / texSize.x, 0.0);\n  vec2 eY = vec2(0.0, 1.0 / texSize.y);\n  vec2 texel = coords * texSize - 0.5;\n  vec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\n  vec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\n  vec2 coords10 = coords + hgX.x * eX;\n  vec2 coords00 = coords - hgX.y * eX;\n  vec2 coords11 = coords10 + hgY.x * eY;\n  vec2 coords01 = coords00 + hgY.x * eY;\n  coords10 = coords10 - hgY.y * eY;\n  coords00 = coords00 - hgY.y * eY;\n  vec4 color00 = texture2D(sampler, coords00);\n  vec4 color10 = texture2D(sampler, coords10);\n  vec4 color01 = texture2D(sampler, coords01);\n  vec4 color11 = texture2D(sampler, coords11);\n  color00 = mix(color00, color01, hgY.z);\n  color10 = mix(color10, color11, hgY.z);\n  color00 = mix(color00, color10, hgX.z);\n  return color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\n  vec2 texelStart = floor(coords * texSize);\n  vec2 coord0 = texelStart / texSize;\n  vec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\n  vec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\n  vec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\n  vec4 color0 = texture2D(sampler, coord0);\n  vec4 color1 = texture2D(sampler, coord1);\n  vec4 color2 = texture2D(sampler, coord2);\n  vec4 color3 = texture2D(sampler, coord3);\n  vec2 blend = fract(coords * texSize);\n  vec4 color01 = mix(color0, color1, blend.x);\n  vec4 color23 = mix(color2, color3, blend.x);\n  return mix(color01, color23, blend.y);\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\n  vec2 invSize = 1.0 / texSize;\n  vec2 texel = coords * texSize;\n  vec2 texel_i = floor(texel);\n  vec2 texel_frac = fract(texel);\n  vec4 colorP = texture2D(sampler, texel_i * invSize);\n  vec4 colorP1 = vec4(colorP);\n  vec4 colorP2 = vec4(colorP);\n  vec4 colorP3 = vec4(colorP);\n  vec4 colorP4 = vec4(colorP);\n  vec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\n  vec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\n  vec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\n  vec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\n  if (colorC == colorA && colorC != colorD && colorA != colorB) {\n    colorP1 = colorA;\n  }\n  if (colorA == colorB && colorA != colorC && colorB != colorD) {\n    colorP2 = colorB;\n  }\n  if (colorD == colorC && colorD != colorB && colorC != colorA) {\n    colorP3 = colorC;\n  }\n  if (colorB == colorD && colorB != colorA && colorD != colorC) {\n    colorP4 = colorD;\n  }\n  vec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\n  vec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\n  return mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\n  vec4 texel = texture2D(u_sourceTexture, v_texcoord);\n  vec4 data0 = texture2D(u_maskTexture, v_texcoord);\n  float flags = data0.r * 255.0;\n  float groupMinZoom = data0.g * 255.0;\n  float isVisible = getFilterBit(flags, 0);\n  float wouldClip = step(groupMinZoom, u_zoomLevel);\n  float direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\n  float dt = u_timeDelta / max(u_animationTime, 0.0001);\n  vec4 nextState = vec4(texel + direction * dt);\n  gl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\n  vec4 texel = texture2D(u_sourceTexture, v_texcoord);\n  gl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\n  v_texcoord = a_pos;\n  gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump vec4 u_sigmas;\nuniform sampler2D u_texture;\nmediump vec4 gauss4(mediump vec2 dir) {\n  return exp(-dot(dir, dir) / (2.0 * u_sigmas * u_sigmas));\n}\nmediump float gauss1(mediump vec2 dir) {\n  return exp(-dot(dir, dir) / (2.0 * u_sigmas[3] * u_sigmas[3]));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\n  return u_channelSelector * sample;\n}\nvoid accumGauss4(mediump float i, inout mediump vec4 tot, inout mediump vec4 weight) {\n  mediump vec4 w = gauss4(i * u_direction.xy);\n  tot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw)) * w;\n  weight += w;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\n  mediump float w = gauss1(i * u_direction.xy);\n  tot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\n  weight += w;\n}\nvoid main(void) {\n  mediump float tot = 0.0;\n  mediump float weight = 0.0;\n  accumGauss1(-4.0, tot, weight);\n  accumGauss1(-3.0, tot, weight);\n  accumGauss1(-2.0, tot, weight);\n  accumGauss1(-1.0, tot, weight);\n  accumGauss1(0.0, tot, weight);\n  accumGauss1(1.0, tot, weight);\n  accumGauss1(2.0, tot, weight);\n  accumGauss1(3.0, tot, weight);\n  accumGauss1(4.0, tot, weight);\n  gl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump vec4 u_sigmas;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\n  mediump float sigma = u_sigmas[3];\n  mediump float y = texture2D(u_texture, v_texcoord)[3];\n  const mediump float y0 = 0.5;\n  mediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * sigma);\n  mediump float d = (y - y0) / m0;\n  return d;\n}\nmediump vec4 shade(mediump float d) {\n  mediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\n  mappedDistance = clamp(mappedDistance, 0.0, 1.0);\n  return texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\n  mediump float d = estimateDistance();\n  gl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n  v_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\n  lowp vec2 uvn = uv * 2.0 - 1.0;\n  if (uvn.x == 0.0 && uvn.y == 0.0) {\n    return vec2(0.5, 0.5);\n  }\n  lowp float theta = atan(uvn.y, uvn.x);\n  lowp float r = pow(length(uvn), barrelFactor);\n  return r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\n  lowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\n  color = (color + (1.0 - color.a) * u_background);\n  lowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\n  color *= mask;\n  lowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\n  gl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\n  v_texCoord = a_pos;\n  gl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec4 id) {\n  highp vec4 texel = unpackDisplayIdTexel(id);\n  highp float size = float(u_attributeTextureSize);\n  highp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256 + int(texel.a) * 256 * 256 * 256);\n  highp float col = mod(u32, size);\n  highp float row = (u32 - col) / size;\n  highp float u = col / size;\n  highp float v = row / size;\n  return vec2(u, v);\n}\nhighp vec4 getAttributeData0(in highp vec4 id) {\n  vec2 coords = getAttributeDataCoords(id);\n  return texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec4 id) {\n  highp vec2 coords = getAttributeDataCoords(id);\n  return texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec4 id) {\n  highp vec2 coords = getAttributeDataCoords(id);\n  return texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec4 id) {\n  highp vec2 coords = getAttributeDataCoords(id);\n  return texture2D(u_attributeData3, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\n  bool isMagic = v.x == 255.0 && v.y == 255.0;\n  if (isMagic) {\n    return NAN_MAGIC_NUMBER;\n  }\n  return (v.x + v.y * float(0x100)) - 32768.0;\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.0000001;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;",fill:{"common.glsl":"#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\n#endif\n#ifdef DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying highp float v_flags;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#ifdef DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\nvoid main() {\n#ifdef ID\n  gl_FragColor = v_id;\n#elif defined(PATTERN)\n  mediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\n  mediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\n  lowp vec4 color = texture2D(u_texture, samplePos);\n  gl_FragColor = v_opacity * v_color * color;\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\n  vec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\n  vec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\n  vec4 difference0 = v_dotThresholds[0] - textureThresholds0;\n  vec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\n  vec4 isPositive0 = step(0.0, difference0);\n  vec4 isPositive1 = step(0.0, difference1);\n  float weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\n  float lessThanEqZero = step(weightSum, 0.0);\n  float greaterThanZero = 1.0 - lessThanEqZero ;\n  float divisor = (weightSum + lessThanEqZero);\n  vec4 weights0 = difference0 * isPositive0 / divisor;\n  vec4 weights1 = difference1 * isPositive1 / divisor;\n  vec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\n  vec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\n  float diffMax = max(max4(difference0), max4(difference1));\n  float lessThanZero = step(diffMax, 0.0);\n  float greaterOrEqZero = 1.0 - lessThanZero;\n  vec4 isMax0 = step(diffMax, difference0);\n  vec4 isMax1 = step(diffMax, difference1);\n  vec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\n  vec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\n  gl_FragColor = preEffectColor;\n#else\n  gl_FragColor = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\n  gl_FragColor.a = 1.0;\n#endif\n}","fill.vert":"precision highp float;\n#ifdef DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 a_aux3 = vec4(0.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_tlbr;\nattribute vec4 a_aux1;\nattribute vec2 a_aux2;\nattribute vec4 a_aux3;\n#endif\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#ifdef DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\n  return featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\nvoid main()\n{\n  INIT;\n  float a_bitSet = a_aux3.a;\n  v_color     = getColor(a_color, a_bitSet, 0);\n  v_opacity   = getOpacity();\n  v_id        = norm(a_id);\n  v_pos       = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n  v_flags     = getFilterFlags();\n#ifdef PATTERN\n  vec2 aux2 = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_aux2;\n  float width = u_zoomFactor * a_aux1.x * aux2.x;\n  float height = u_zoomFactor * a_aux1.y * aux2.y;\n  float angle = C_256_TO_RAD * a_aux3.z;\n  float sinA = sin(angle);\n  float cosA = cos(angle);\n  mat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n                           -sinA / width, cosA / height, 0,\n                            0,            0,             1);\n  vec2 symbolOffset = (a_aux1.zw - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\n  v_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\n  v_tlbr = a_tlbr / u_mosaicSize.xyxy;\n#elif defined(DOT_DENSITY)\n  vec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\n  vec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\n  float size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\n  v_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\n  v_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\n  v_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n  gl_Position = vec4(applyFilter(v_color, v_pos, v_flags), 1.0);\n}"},icon:{"common.glsl":"uniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying highp float v_filters;\nvarying lowp float v_opacity;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/icon/common.glsl>\nuniform lowp sampler2D u_texture;\nvoid main()\n{\n  vec2 v_size = v_sizeTex.xy;\n  vec2 v_tex  = v_sizeTex.zw;\n#ifdef SDF\n  lowp vec4 fillPixelColor = v_color;\n  float d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\n  float size = max(v_size.x, v_size.y);\n  float dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\n  fillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\n  float outlineWidth = v_outlineWidth;\n  #ifdef HIGHLIGHT\n    outlineWidth = max(outlineWidth, 4.0 * v_isThin);\n  #endif\n  if (outlineWidth > 0.25) {\n    lowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\n    float clampedOutlineSize = min(outlineWidth, size);\n    outlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\n    gl_FragColor = v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n  }\n  else {\n    gl_FragColor = v_opacity * fillPixelColor;\n  }\n#else\n   lowp vec4 texColor = texture2D(u_texture, v_tex);\n   gl_FragColor = v_opacity * texColor;\n#endif\n#ifdef HIGHLIGHT\n  gl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\n#endif\n#ifdef ID\n  if (gl_FragColor.a < 1.0 / 255.0) {\n    discard;\n  }\n  gl_FragColor = v_id;\n#endif\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\n#ifdef VV_SIZE\n  float r = getSize(baseSize.y) / referenceSize;\n  baseSize.xy *= r;\n  offset.xy *= r;\n  float scaleSymbolProportionally = getBit(bitSet, 3);\n  outlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\n  return baseSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\n  float isMapAligned = getBit(a_bitSet, 0);\n  vec3  offset       = getRotation() * vec3(in_offset, 0.0);\n  return getMatrix(isMapAligned) * offset;\n}\nvoid main()\n{\n  INIT;\n  vec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\n  vec2  a_offset = a_vertexOffset / 16.0;\n  float a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\n  float a_bitSet = a_bitSetAndDistRatio.x;\n  vec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\n  vec2 v_tex      = a_texCoords / u_mosaicSize;\n  v_color    = getColor(a_color, a_bitSet, 1);\n  v_opacity  = getOpacity();\n  v_id       = norm(a_id);\n  v_filters  = getFilterFlags();\n  v_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\n  v_sizeTex  = vec4(v_size.xy, v_tex.xy);\n#ifdef SDF\n  v_isThin   = getBit(a_bitSet, 2);\n  #ifdef VV_COLOR\n    v_overridingOutlineColor = v_isThin;\n  #else\n    v_overridingOutlineColor = 0.0;\n  #endif\n  v_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\n  v_outlineColor = a_outlineColor;\n  v_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\n  gl_Position = vec4(applyFilter(v_color, v_pos, v_filters), 1.0);\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_zoomLevel;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\n  float glyphAngle = angle * 360.0 / 254.0;\n  float mapAngle = u_mapRotation * 360.0 / 254.0;\n  float diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\n  float z = 0.0;\n  z += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_zoomLevel)));\n  z += u_mapAligned * 2.0 * step(90.0, diffAngle);\n  z += 2.0 * (1.0 - step(u_zoomLevel, maxZoom));\n  return z;\n}\nvoid main()\n{\n  INIT;\n  float groupMinZoom    = getMinZoom();\n  float glyphMinZoom    = a_glyphData.x;\n  float glyphMaxZoom    = a_glyphData.y;\n  float glyphAngle      = a_glyphData.z;\n  float a_minZoom          = max(groupMinZoom, glyphMinZoom);\n  float a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\n  vec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\n  float a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\n  float fontSize           = a_texAndSize.z;\n  float haloSize           = a_texAndSize.w * OUTLINE_SCALE;\n  vec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\n  vec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\n  float z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\n  float fontScale    = fontSize / SDF_FONT_SIZE;\n  float halfSize     = getSize(a_refSymbolSize) / 2.0;\n  float animation    = pow(getAnimationState(), vec4(2.0)).r;\n  v_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\n  v_opacity   = 1.0;\n  v_tex       = a_texCoords / u_mosaicSize;\n  v_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\n  v_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n  vec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\n  vec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\n  vec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\n  gl_Position = vec4(applyFilterLabels(v_color, v_pos, getFilterFlags()), 1.0);\n#ifdef DEBUG\n  v_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\nvarying highp vec3 v_pos;\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/line/common.glsl>\nuniform lowp float u_blur;\nuniform mediump float u_zoomFactor;\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\n#endif\n#ifdef SDF\nconst float sdfPatternHalfWidth = 15.5;\nconst float widthFactor = 2.0;\n#endif\nvoid main()\n{\n  mediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(v_lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\n  mediump float fragDist = length(v_normal) * v_lineHalfWidth;\n  lowp float alpha = clamp(thinLineFactor * (v_lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\n#if defined(SDF) && !defined(HIGHLIGHT)\n  mediump float lineHalfWidth = widthFactor * v_lineHalfWidth;\n  mediump float lineWidthRatio = lineHalfWidth / sdfPatternHalfWidth;\n  mediump float relativeTexX = mod((u_zoomFactor * v_accumulatedDistance + v_normal.x * lineHalfWidth) / (lineWidthRatio * v_patternSize.x), 1.0);\n  mediump float relativeTexY = 0.5 + 0.5 * v_normal.y;\n  mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\n  mediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\n  float dist = d * lineHalfWidth;\n  lowp vec4 fillPixelColor = v_opacity * alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\n  gl_FragColor = fillPixelColor;\n#elif defined(PATTERN) && !defined(HIGHLIGHT)\n  mediump float lineHalfWidth = v_lineHalfWidth;\n  mediump float adjustedPatternWidth = v_patternSize.x * 2.0 * lineHalfWidth / v_patternSize.y;\n  mediump float relativeTexX = mod((u_zoomFactor * v_accumulatedDistance + v_normal.x * lineHalfWidth) / adjustedPatternWidth, 1.0);\n  mediump float relativeTexY = 0.5 + 0.5 * v_normal.y;\n  mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexY, relativeTexX));\n  lowp vec4 color = texture2D(u_texture, texCoord);\n  gl_FragColor = v_opacity * alpha * v_color * color;\n#else\n  gl_FragColor = v_opacity * alpha * v_color;\n#endif\n#ifdef HIGHLIGHT\n  gl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\n#endif\n#ifdef ID\n  if (gl_FragColor.a < 1.0 / 255.0) {\n    discard;\n  }\n  gl_FragColor = v_id;\n#endif\n}","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\n#include <materials/vcommon.glsl>\n#include <materials/line/common.glsl>\nconst float SCALE = 1.0 / 31.0;\nconst float WIDTH_SCALE = 1.0 / 1024.0;\nfloat getBaseLineHalfWidth(in float in_lineHalfWidth) {\n#ifdef VV_SIZE\n  float referenceHalfWidth = a_aux.x * WIDTH_SCALE;\n  float lineWidth = 2.0 * in_lineHalfWidth;\n  return 0.5 * (in_lineHalfWidth / referenceHalfWidth) * getSize(lineWidth);\n#else\n  return in_lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\n  float halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\n  halfWidth = max(halfWidth, 2.0);\n#endif\n  return halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\n  float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\n#if defined(SDF) && !defined(HIGHLIGHT)\n  thinLineFactor *= 2.0;\n#endif\n  return thinLineFactor * halfWidth * offset * SCALE;\n}\nvoid main()\n{\n  INIT;\n  float a_bitSet          = a_segmentDirection.w;\n  float a_accumulatedDist = a_accumulatedDistanceAndHalfWidth.x;\n  float a_lineHalfWidth   = a_accumulatedDistanceAndHalfWidth.y * WIDTH_SCALE;\n  float aa                = 0.5 * u_antialiasing;\n  vec2  a_offset          = a_offsetAndNormal.xy;\n  float baseWidth = getBaseLineHalfWidth(a_lineHalfWidth);\n  float halfWidth = getLineHalfWidth(baseWidth, aa);\n  float z         = 2.0 * step(baseWidth, 0.0);\n  vec2  dist      = getDist(a_offset, halfWidth);\n  vec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\n  vec3  pos       = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + offset;\n  v_color         = getColor(a_color, a_bitSet, 0);\n  v_opacity       = getOpacity();\n  v_lineHalfWidth = halfWidth;\n  v_id            = norm(a_id);\n  v_normal        = a_offsetAndNormal.zw * SCALE;\n  v_pos           = vec3(pos.xy, z);\n#ifdef PATTERN\n  v_tlbr          = a_tlbr / u_mosaicSize.xyxy;\n  v_patternSize   = vec2(a_tlbr.z - a_tlbr.x, a_tlbr.w - a_tlbr.y);\n#endif\n#if defined(PATTERN) || defined(SDF)\n  v_accumulatedDistance = a_accumulatedDist + dot(SCALE * a_segmentDirection.xy, dist / u_zoomFactor);\n#endif\n  gl_Position = vec4(applyFilter(v_color, v_pos, getFilterFlags()), 1.0);\n}"},text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec4 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\nvoid main()\n{\n  float SDF_CUTOFF = (2.0 / 8.0);\n  float SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\n  lowp float dist = texture2D(u_texture, v_tex).a;\n  mediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\n  edge /= 2.0;\n#endif\n  lowp float aa = v_antialiasingWidth;\n  lowp float alpha = smoothstep(edge - aa, edge + aa, dist);\n  gl_FragColor = alpha * v_color * v_opacity;\n#ifdef ID\n  if (gl_FragColor.a < 1.0 / 255.0) {\n    discard;\n  }\n  gl_FragColor = v_id;\n#endif\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(in float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\n  return getSize(baseSize);\n#endif\n  return baseSize;\n}\nvoid main()\n{\n  INIT;\n  float a_referenceSize = a_aux.z * a_aux.z / 256.0;\n  float a_bitSet        = a_aux.w;\n  float a_fontSize      = a_texFontSize.z;\n  vec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\n  vec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\n  float fontSize      = getTextSize(a_fontSize, a_referenceSize);\n  float scaleFactor   = fontSize / a_fontSize;\n  float fontScale     = fontSize / SDF_FONT_SIZE;\n  vec3  offset        = getRotation() * vec3(scaleFactor * a_offset, 0.0);\n  mat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\n  v_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\n  v_opacity = getOpacity();\n  v_id      = norm(a_id);\n  v_tex     = a_texCoords / u_mosaicSize;\n  v_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\n  v_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\n  v_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n  gl_Position =  vec4(applyFilter(v_color, v_pos, getFilterFlags()), 1.0);\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\n  return floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\n  float offset = pow(2.0, float(bitIndex));\n  return mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\n  return getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\n  return getBit(bitset, 0);\n}\nhighp vec4 unpackDisplayIdTexel(in highp vec4 bitset) {\n  float isAggregate = getBit(bitset.a, 7);\n  return (1.0 - isAggregate) * bitset + isAggregate * (vec4(bitset.rgba) - vec4(0.0, 0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\n  float r = mod(rshift(u32, 0), 255.0);\n  float g = mod(rshift(u32, 8), 255.0);\n  float b = mod(rshift(u32, 16), 255.0);\n  float a = mod(rshift(u32, 24), 255.0);\n  return vec4(r, g, b, a);\n}\nvec4 norm(in vec4 v) {\n  return v /= 255.0;\n}\nfloat max4(vec4 target) {\n  return max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\n  return (bytes - 127.0) / 127.0;\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\nattribute vec2 a_pos;\nattribute highp vec4 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef OES_TEXTURE_FLOAT\n  target.rgba = getAttributeData2(a_id);\n#else\n  vec4 data0 = getAttributeData2(a_id);\n  vec4 data1 = getAttributeData3(a_id);\n  target.r = u88VVToFloat(data0.rg * 255.0);\n  target.g = u88VVToFloat(data0.ba * 255.0);\n  target.b = u88VVToFloat(data1.rg * 255.0);\n  target.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n  #define INIT loadVisualVariableData(VV_ADATA)\n#else\n  #define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\n  float isColorLocked   = getBit(a_bitSet, index);\n  return getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\n  return a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\n  return getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\n  return 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\n  return getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\n  return in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\n  return getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\n  return mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\n  return ceil(getAttributeData0(a_id).x * 255.0);\n#else\n  return getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\n  return getAttributeData1(a_id);\n}\nfloat getMinZoom() {\n  vec4 data0 = getAttributeData0(a_id) * 255.0;\n  return data0.g;\n}\nmat3 getMatrix(float isMapAligned) {\n  return isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 applyFilter(inout vec4 color, inout vec3 pos, in float filterFlags) {\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\n  pos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n  #if !defined(HIGHLIGHT_ALL)\n    pos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n  #endif\n#endif\n  return pos;\n}\nvec3 applyFilterLabels(inout vec4 color, inout vec3 pos, in float filterFlags) {\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifndef OUTSIDE_LABELS_VISIBLE\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#endif\n  return pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n  #define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n  #define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\n  return (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\n  if (isNan(sizeValue)) {\n    return fallback;\n  }\n  float interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\n  interpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\n  return u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\n  if (isNan(sizeValue)) {\n    return fallback;\n  }\n  if (sizeValue <= u_vvSizeFieldStopsValues[0]) {\n    return u_vvSizeFieldStopsSizes[0];\n  }\n  for (int i = 1; i < VV_SIZE_N; ++i) {\n    if (u_vvSizeFieldStopsValues[i] >= sizeValue) {\n      float f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\n      return mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n    }\n  }\n  return u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\n  if (isNan(sizeValue)) {\n    return fallback;\n  }\n  return u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\n  if (isNan(opacityValue)) {\n    return 1.0;\n  }\n  if (opacityValue <= u_vvOpacityValues[0]) {\n    return u_vvOpacities[0];\n  }\n  for (int i = 1; i < VV_OPACITY_N; ++i) {\n    if (u_vvOpacityValues[i] >= opacityValue) {\n      float f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\n      return mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n    }\n  }\n  return u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\n  if (isNan(rotationValue)) {\n    return mat4(1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1);\n  }\n  float rotation = rotationValue;\n  if (u_vvRotationType == 1.0) {\n    rotation = 90.0 - rotation;\n  }\n  float angle = C_DEG_TO_RAD * rotation;\n  float sinA = sin(angle);\n  float cosA = cos(angle);\n  return mat4(cosA, sinA, 0, 0,\n              -sinA,  cosA, 0, 0,\n              0,     0, 1, 0,\n              0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\n  if (isNan(rotationValue)) {\n    return mat3(1, 0, 0,\n                0, 1, 0,\n                0, 0, 1);\n  }\n  float rotation = rotationValue;\n  if (u_vvRotationType == 1.0) {\n    rotation = 90.0 - rotation;\n  }\n  float angle = C_DEG_TO_RAD * -rotation;\n  float sinA = sin(angle);\n  float cosA = cos(angle);\n  return mat3(cosA, -sinA, 0,\n             sinA, cosA, 0,\n              0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\n  if (isNan(colorValue) || isColorLocked == 1.0) {\n    return fallback;\n  }\n  if (colorValue <= u_vvColorValues[0]) {\n    return u_vvColors[0];\n  }\n  for (int i = 1; i < VV_COLOR_N; ++i) {\n    if (u_vvColorValues[i] >= colorValue) {\n      float f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\n      return mix(u_vvColors[i-1], u_vvColors[i], f);\n    }\n  }\n  return u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\n  return getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\n  return u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\n  float outSize = getVVStopsSize(vvSize, size);\n  return isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\n  return getVVUnitValue(vvSize, size);\n#else\n  return size;\n#endif\n}"},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\n  gl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\n  float mirrorFactor = 1.2 - factor;\n  return mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\n  gl_FragColor = u_bloomStrength * (\n    lerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\n    lerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\n    lerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\n    lerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\n    lerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n  );\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\n  vec2 invSize = 1.0 / u_texSize;\n  float fSigma = float(SIGMA);\n  float weightSum = gaussianPdf(0.0, fSigma);\n  vec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\n  for (int i = 1; i < KERNEL_RADIUS; i ++) {\n    float x = float(i);\n    float w = gaussianPdf(x, fSigma);\n    vec2 uvOffset = u_direction * invSize * x;\n    vec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\n    vec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\n    pixelColorSum += (sample1 + sample2) * w;\n    weightSum += 2.0 * w;\n  }\n  gl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\n  vec4 texel = texture2D(u_texture, v_uv);\n  vec3 luma = vec3(0.299, 0.587, 0.114);\n  float v = dot(texel.xyz, luma);\n  vec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\n  float alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\n  gl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\n  vec2 invSize = 1.0 / u_texSize;\n  float fSigma = u_sigma;\n  float weightSum = gaussianPdf(0.0, fSigma);\n  vec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\n  for (int i = 1; i < KERNEL_RADIUS; i ++) {\n    float x = float(i);\n    float w = gaussianPdf(x, fSigma);\n    vec2 uvOffset = u_direction * invSize * x;\n    vec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\n    vec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\n    pixelColorSum += (sample1 + sample2) * w;\n    weightSum += 2.0 * w;\n  }\n  gl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\n    float samples[10];\n    samples[0] = -0.08;\n    samples[1] = -0.05;\n    samples[2] = -0.03;\n    samples[3] = -0.02;\n    samples[4] = -0.01;\n    samples[5] =  0.01;\n    samples[6] =  0.02;\n    samples[7] =  0.03;\n    samples[8] =  0.05;\n    samples[9] =  0.08;\n    vec2 dir = 0.5 - v_uv;\n    float dist = sqrt(dir.x * dir.x + dir.y * dir.y);\n    dir = dir / dist;\n    vec4 color = texture2D(u_colorTexture,v_uv);\n    vec4 sum = color;\n    for (int i = 0; i < 10; i++) {\n      sum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n    }\n    sum *= 1.0 / 11.0;\n    float t = dist * sampleStrength;\n    t = clamp(t, 0.0, 1.0);\n    gl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\n  vec4 minColor = texture2D(u_minColor, vec2(0.5));\n  vec4 maxColor = texture2D(u_maxColor, vec2(0.5));\n  vec4 color = texture2D(u_texture, v_uv);\n  vec3 minColorUnpremultiply = minColor.rgb / minColor.a;\n  vec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\n  vec3 colorUnpremultiply = color.rgb / color.a;\n  vec3 range = maxColorUnpremultiply - minColorUnpremultiply;\n  gl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\n  vec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\n  vec2 onePixel = vec2(1.0) / u_srcResolution;\n  vec2 uv = (srcPixel + 0.5) / u_srcResolution;\n  vec4 minColor = vec4(1.0);\n  vec4 maxColor = vec4(0.0);\n  for (int y = 0; y < CELL_SIZE; ++y) {\n    for (int x = 0; x < CELL_SIZE; ++x) {\n      vec2 offset = uv + vec2(x, y) * onePixel;\n      minColor = min(minColor, texture2D(u_minTexture, offset));\n      maxColor = max(maxColor, texture2D(u_maxTexture, offset));\n    }\n  }\n  gl_FragData[0] = minColor;\n  gl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nvarying vec2 v_uv;\nvoid main() {\n  vec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\n  vec4 blurColor = texture2D(u_blurTexture, v_uv);\n  gl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"},"drop-shadow.vert":"precision mediump float;\nattribute vec2 a_position;\nuniform highp mat3 u_displayViewMat3;\nuniform highp vec2 u_offset;\nvarying vec2 v_uv;\nvoid main() {\n  vec3 offset = u_displayViewMat3 * vec3(u_offset, 0.0);\n  gl_Position = vec4(a_position, 0.0, 1.0) + vec4(offset, 0.0);\n  v_uv = (a_position + 1.0) / 2.0;\n}"},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\n  G[0] = g0,\n  G[1] = g1,\n  G[2] = g2,\n  G[3] = g3,\n  G[4] = g4,\n  G[5] = g5,\n  G[6] = g6,\n  G[7] = g7,\n  G[8] = g8;\n  mat3 I;\n  float cnv[9];\n  vec3 sample;\n  for (float i = 0.0; i < 3.0; i++) {\n    for (float j = 0.0; j < 3.0; j++) {\n      sample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\n      I[int(i)][int(j)] = length(sample);\n    }\n  }\n  for (int i = 0; i < 9; i++) {\n    float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\n    cnv[i] = dp3 * dp3;\n  }\n  float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\n  float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\n  gl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\n  mat3 I;\n  float cnv[2];\n  vec3 sample;\n  G[0] = g0;\n  G[1] = g1;\n  for (float i = 0.0; i < 3.0; i++) {\n    for (float j = 0.0; j < 3.0; j++) {\n      sample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\n      I[int(i)][int(j)] = length(sample);\n    }\n  }\n  for (int i = 0; i < 2; i++) {\n    float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\n    cnv[i] = dp3 * dp3;\n  }\n  gl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\n  mat3 I;\n  float cnv[2];\n  vec3 sample;\n  G[0] = g0;\n  G[1] = g1;\n  for (float i = 0.0; i < 3.0; i++) {\n    for (float j = 0.0; j < 3.0; j++) {\n      sample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\n      I[int(i)][int(j)] = length(sample);\n    }\n  }\n  for (int i = 0; i < 2; i++) {\n    float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\n    cnv[i] = dp3 * dp3;\n  }\n  vec4 color = texture2D(u_colorTexture, v_uv);\n  gl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\n  vec4 color = texture2D(u_colorTexture, v_uv);\n  vec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\n  float a = color.a;\n  gl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n  v_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\n  vec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\n  vec4 color = texture2D(u_texture, v_texcoord);\n#endif\n  float alpha = u_opacity * color.a;\n  gl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\n  v_texcoord = a_pos;\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_isFloatTexture;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\n  vec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\n  targetLocation = projectPixelLocation(targetLocation);\n#endif\n  return targetLocation;\n}\nbool isOutside(vec2 coords){\n   if (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\n     return true;\n   } else {\n     return false;\n   }\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\n  vec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\n  vec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\n  vec4 color = texture2D(u_image, pixelLocation);\n#endif\n  return color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\n  vec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\n  float maxI = 255.0;\n  float mid = 128.0;\n  float c = u_contrastOffset;\n  float b = u_brightnessOffset;\n  vec4 v;\n  if (c > 0.0 && c < 100.0) {\n    v = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n  } else if (c <= 0.0 && c > -100.0) {\n    v = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n  } else if (c == 100.0) {\n    v = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\n    v = (sign(v) + 1.0) / 2.0;\n  } else if (c == -100.0) {\n    v = vec4(mid, mid, mid, currentPixel.a);\n  }\n  return vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n  vec2 index_image = floor(coords * u_targetImageSize);\n  vec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\n  vec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\n  vec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\n  vec2 srcLocation;\n  vec2 transform_location = index_transform + oneTransformPixel * 0.5;\n  if (pos.s <= pos.t) {\n    vec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\n    vec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\n    srcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\n    srcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n  } else {\n    vec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\n    vec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\n    srcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\n    srcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n  }\n  return srcLocation;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\n  if (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\n    return 0.0;\n  }\n  else {\n    return e;\n  }\n}\nvec3 rgb2hsv(vec3 c) {\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n  vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n  vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n  float d = q.x - min(q.w, q.y);\n  float e = 1.0e-10;\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\n  val = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\n  vec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\n  vec3 hsv = rgb2hsv(rgb.xyz);\n  hsv.z = hillshade;\n  return vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\n  vec2 pixelLocation = getPixelLocation(v_texcoord);\n  if (isOutside(pixelLocation)) {\n     gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n     return;\n  }\n  vec4 currentPixel = getPixel(pixelLocation);\n  if (currentPixel.a == 0.0) {\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n  }\n  vec2 axy = vec2(-1.0, -1.0);\n  vec2 bxy = vec2(0.0, -1.0);\n  vec2 cxy = vec2(1.0, -1.0);\n  vec2 dxy = vec2(-1.0, 0.0);\n  vec2 fxy = vec2(1.0, 0.0);\n  vec2 gxy = vec2(-1.0, 1.0);\n  vec2 hxy = vec2(0.0, 1.0);\n  vec2 ixy = vec2(1.0, 1.0);\n  vec2 onePixel = 1.0 / u_srcImageSize;\n  if (pixelLocation.s < onePixel.s) {\n    axy[0] = 1.0;\n    dxy[0] = 1.0;\n    gxy[0] = 1.0;\n  }\n  if (pixelLocation.t < onePixel.t) {\n    axy[1] = 1.0;\n    bxy[1] = 1.0;\n    cxy[1] = 1.0;\n  }\n  if (pixelLocation.s > 1.0 - onePixel.s) {\n    cxy[0] = -1.0;\n    fxy[0] = -1.0;\n    ixy[0] = -1.0;\n  }\n  if (pixelLocation.t > 1.0 - onePixel.t) {\n    gxy[1] = -1.0;\n    hxy[1] = -1.0;\n    ixy[1] = -1.0;\n  }\n  vec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\n  vec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\n  vec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\n  vec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\n  vec4 ve = texture2D(u_image, pixelLocation);\n  vec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\n  vec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\n  vec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\n  vec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\n  float dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\n  float dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\n  float dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\n  float hillshade = 0.0;\n  if (u_hillshadeType == 0){\n\t   float cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\n     float z = (u_cosZs[0] + cosDelta) / dzd;\n     if (z < 0.0)  z = 0.0;\n\t   hillshade = z;\n  } else {\n\t  for (int k = 0; k < 6; k++) {\n\t\t float cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\n\t\t float z = (u_cosZs[k] + cosDelta) / dzd;\n\t\t if (z < 0.0) z = 0.0;\n     hillshade = hillshade + z * u_weights[k];\n\t\t if (k == 5) break;\n    }\n  }\n  float alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\n  gl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\n  gl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\n  v_texcoord = a_pos;\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\n  float clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\n  vec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\n  vec4 color = texture2D(u_colormap, clrPosition);\n  vec4 result = vec4(color.rgb, color.a * currentPixel.a);\n  return result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\n  vec2 pixelLocation = getPixelLocation(v_texcoord);\n  if (isOutside(pixelLocation)) {\n     gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n     return;\n  }\n  vec4 currentPixel = getPixel(pixelLocation);\n  vec4 result = colorize(currentPixel, 1.0);\n  gl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\n  v_texcoord = a_pos * u_scale + u_offset;\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\n  if (val >= maxCutOff) {\n    return maxOutput;\n  } else if (val <= minCutOff) {\n    return minOutput;\n  }\n  float stretchedVal;\n  if (useGamma) {\n  \tfloat tempf = 1.0;\n\t  float outRange = maxOutput - minOutput;\n\t  float relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\n\t  if (gamma > 1.0) {\n      tempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n    }\n    stretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n  } else {\n    stretchedVal = minOutput + (val - minCutOff) * factor;\n  }\n  return stretchedVal;\n}\nvoid main() {\n  vec2 pixelLocation = getPixelLocation(v_texcoord);\n  if (isOutside(pixelLocation)) {\n     gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n     return;\n  }\n  vec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\n  gl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n  return;\n#endif\n  if (u_bandCount == 1) {\n    float grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\n      vec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\n      gl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\n      gl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n  } else {\n    float redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n    float greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\n    float blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\n    gl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n  }\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\n  v_texcoord = a_pos * u_scale + u_offset;\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\n  gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nvoid main() {\n  gl_Position = vec4(a_pos, 0.0, 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\n  lowp vec4 color = texture2D(u_texture, v_tex);\n  gl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\n  mediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\n  vec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\n  gl_Position = vec4(v_pos.xy, 0.0, 1.0);\n  v_tex = a_pos;\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\n    255.0 / (256.0),\n    255.0 / (256.0 * 256.0),\n    255.0 / (256.0 * 256.0 * 256.0),\n    255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n  );\nfloat rgba2float(vec4 rgba) {\n  return dot(rgba, rgba2float_factors);\n}"}};/* harmony default export */ __webpack_exports__["default"] = (e);


/***/ }),

/***/ "+yyC":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/core/libs/earcut/earcut.js ***!
  \**************************************************************/
/*! exports provided: deviation, earcut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return s; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "earcut", function() { return e; });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function e(e,t,r){const i=t&&t.length,u=i?t[0]*r:e.length;let o=n(e,0,u,r,!0);const l=new Array;if(!o||o.next===o.prev)return l;let y,p,c,v,s;if(i&&(o=f(e,t,o,r)),e.length>80*r){y=c=e[0],p=v=e[1];for(let n=r;n<u;n+=r){const t=e[n],x=e[n+1];y=Math.min(y,t),p=Math.min(p,x),c=Math.max(c,t),v=Math.max(v,x)}s=Math.max(c-y,v-p),s=0!==s?1/s:0}return x(o,l,r,y,p,s),l}function n(e,n,t,x,r){let i;if(r===a(e,n,t,x)>0)for(let o=n;o<t;o+=x)i=u(o,e[o],e[o+1],i);else for(let o=t-x;o>=n;o-=x)i=u(o,e[o],e[o+1],i);return i&&z(i,i.next)&&(o(i),i=i.next),i}function t(e,n=e){if(!e)return e;let t,x=e;do{if(t=!1,x.steiner||!z(x,x.next)&&0!==h(x.prev,x,x.next))x=x.next;else{if(o(x),x=n=x.prev,x===x.next)break;t=!0}}while(t||x!==n);return n}function x(e,n,u,l,f,y,p=0){if(!e)return;!p&&y&&(e=c(e,l,f,y));let v=e;for(;e.prev!==e.next;){const c=e.prev,s=e.next;if(y?i(e,l,f,y):r(e))n.push(c.index/u),n.push(e.index/u),n.push(s.index/u),o(e),e=s.next,v=s.next;else if((e=s)===v){p?1===p?x(e=m(e,n,u),n,u,l,f,y,2):2===p&&k(e,n,u,l,f,y):x(t(e),n,u,l,f,y,1);break}}}function r(e){const n=e.prev,t=e,x=e.next;if(h(n,t,x)>=0)return!1;let r=e.next.next;const i=r;let u=0;for(;r!==e.prev&&(0===u||r!==i);){if(u++,w(n.x,n.y,t.x,t.y,x.x,x.y,r.x,r.y)&&h(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function i(e,n,t,x){const r=e.prev,i=e,u=e.next;if(h(r,i,u)>=0)return!1;const o=r.x<i.x?r.x<u.x?r.x:u.x:i.x<u.x?i.x:u.x,l=r.y<i.y?r.y<u.y?r.y:u.y:i.y<u.y?i.y:u.y,f=r.x>i.x?r.x>u.x?r.x:u.x:i.x>u.x?i.x:u.x,y=r.y>i.y?r.y>u.y?r.y:u.y:i.y>u.y?i.y:u.y,p=M(o,l,n,t,x),c=M(f,y,n,t,x);let v=e.prevZ,s=e.nextZ;for(;v&&v.z>=p&&s&&s.z<=c;){if(v!==e.prev&&v!==e.next&&w(r.x,r.y,i.x,i.y,u.x,u.y,v.x,v.y)&&h(v.prev,v,v.next)>=0)return!1;if(v=v.prevZ,s!==e.prev&&s!==e.next&&w(r.x,r.y,i.x,i.y,u.x,u.y,s.x,s.y)&&h(s.prev,s,s.next)>=0)return!1;s=s.nextZ}for(;v&&v.z>=p;){if(v!==e.prev&&v!==e.next&&w(r.x,r.y,i.x,i.y,u.x,u.y,v.x,v.y)&&h(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;s&&s.z<=c;){if(s!==e.prev&&s!==e.next&&w(r.x,r.y,i.x,i.y,u.x,u.y,s.x,s.y)&&h(s.prev,s,s.next)>=0)return!1;s=s.nextZ}return!0}function u(e,n,t,x){const r=new B(e,n,t);return x?(r.next=x.next,r.prev=x,x.next.prev=r,x.next=r):(r.prev=r,r.next=r),r}function o(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function l(e){let n=e,t=e;do{(n.x<t.x||n.x===t.x&&n.y<t.y)&&(t=n),n=n.next}while(n!==e);return t}function f(e,x,r,i){const u=new Array;for(let t=0,o=x.length;t<o;t++){const r=n(e,x[t]*i,t<o-1?x[t+1]*i:e.length,i,!1);r===r.next&&(r.steiner=!0),u.push(l(r))}u.sort(b);for(const n of u)y(n,r),r=t(r,r.next);return r}function y(e,n){if(n=p(e,n)){const x=q(n,e);t(x,x.next)}}function p(e,n){let t=n;const x=e.x,r=e.y;let i,u=-1/0;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const e=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(e<=x&&e>u){if(u=e,e===x){if(r===t.y)return t;if(r===t.next.y)return t.next}i=t.x<t.next.x?t:t.next}}t=t.next}while(t!==n);if(!i)return null;if(x===u)return i.prev;const o=i,l=i.x,f=i.y;let y,p=1/0;for(t=i.next;t!==o;)x>=t.x&&t.x>=l&&x!==t.x&&w(r<f?x:u,r,l,f,r<f?u:x,r,t.x,t.y)&&(y=Math.abs(r-t.y)/(x-t.x),(y<p||y===p&&t.x>i.x)&&g(t,e)&&(i=t,p=y)),t=t.next;return i}function c(e,n,t,x){for(let r;r!==e;r=r.next){if(r=r||e,null===r.z&&(r.z=M(r.x,r.y,n,t,x)),r.prev.next!==r||r.next.prev!==r)return r.prev.next=r,r.next.prev=r,c(e,n,t,x);r.prevZ=r.prev,r.nextZ=r.next}return e.prevZ.nextZ=null,e.prevZ=null,v(e)}function v(e){let n,t=1;for(;;){let x,r=e;e=null,n=null;let i=0;for(;r;){i++,x=r;let u=0;for(;u<t&&x;u++)x=x.nextZ;let o=t;for(;u>0||o>0&&x;){let t;0===u?(t=x,x=x.nextZ,o--):0!==o&&x?r.z<=x.z?(t=r,r=r.nextZ,u--):(t=x,x=x.nextZ,o--):(t=r,r=r.nextZ,u--),n?n.nextZ=t:e=t,t.prevZ=n,n=t}r=x}if(n.nextZ=null,t*=2,i<2)return e}}function s(e,n,t,x){const r=n&&n.length,i=r?n[0]*t:e.length;let u=Math.abs(a(e,0,i,t));if(r)for(let l=0,f=n.length;l<f;l++){const x=n[l]*t,r=l<f-1?n[l+1]*t:e.length;u-=Math.abs(a(e,x,r,t))}let o=0;for(let l=0;l<x.length;l+=3){const n=x[l]*t,r=x[l+1]*t,i=x[l+2]*t;o+=Math.abs((e[n]-e[i])*(e[r+1]-e[n+1])-(e[n]-e[r])*(e[i+1]-e[n+1]))}return 0===u&&0===o?0:Math.abs((o-u)/u)}function h(e,n,t){return(n.y-e.y)*(t.x-n.x)-(n.x-e.x)*(t.y-n.y)}function d(e,n,t,x){return!!(z(e,n)&&z(t,x)||z(e,x)&&z(t,n))||h(e,n,t)>0!=h(e,n,x)>0&&h(t,x,e)>0!=h(t,x,n)>0}function Z(e,n){let t=e;do{if(t.index!==e.index&&t.next.index!==e.index&&t.index!==n.index&&t.next.index!==n.index&&d(t,t.next,e,n))return!0;t=t.next}while(t!==e);return!1}function a(e,n,t,x){let r=0;for(let i=n,u=t-x;i<t;i+=x)r+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return r}function w(e,n,t,x,r,i,u,o){return(r-u)*(n-o)-(e-u)*(i-o)>=0&&(e-u)*(x-o)-(t-u)*(n-o)>=0&&(t-u)*(i-o)-(r-u)*(x-o)>=0}function g(e,n){return h(e.prev,e,e.next)<0?h(e,n,e.next)>=0&&h(e,e.prev,n)>=0:h(e,n,e.prev)<0||h(e,e.next,n)<0}function M(e,n,t,x,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-t)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=32767*(n-x)*r)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function z(e,n){return e.x===n.x&&e.y===n.y}function b(e,n){return e.x-n.x}function m(e,n,t){let x=e;do{const r=x.prev,i=x.next.next;!z(r,i)&&d(r,x,x.next,i)&&g(r,i)&&g(i,r)&&(n.push(r.index/t),n.push(x.index/t),n.push(i.index/t),o(x),o(x.next),x=e=i),x=x.next}while(x!==e);return x}function k(e,n,r,i,u,o){let l=e;do{let e=l.next.next;for(;e!==l.prev;){if(l.index!==e.index&&A(l,e)){let f=q(l,e);return l=t(l,l.next),f=t(f,f.next),x(l,n,r,i,u,o),void x(f,n,r,i,u,o)}e=e.next}l=l.next}while(l!==e)}function A(e,n){return e.next.index!==n.index&&e.prev.index!==n.index&&!Z(e,n)&&g(e,n)&&g(n,e)&&j(e,n)}function j(e,n){let t=e,x=!1;const r=(e.x+n.x)/2,i=(e.y+n.y)/2;do{t.y>i!=t.next.y>i&&t.next.y!==t.y&&r<(t.next.x-t.x)*(i-t.y)/(t.next.y-t.y)+t.x&&(x=!x),t=t.next}while(t!==e);return x}function q(e,n){const t=new B(e.index,e.x,e.y),x=new B(n.index,n.x,n.y),r=e.next,i=n.prev;return e.next=n,n.prev=e,t.next=r,r.prev=t,x.next=t,t.prev=x,i.next=x,x.prev=i,x}class B{constructor(e,n,t){this.index=e,this.x=n,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}}


/***/ }),

/***/ "1F90":
/*!***************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/programUtils.js ***!
  \***************************************************************/
/*! exports provided: createProgram, glslifyDefineMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createProgram", function() { return t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "glslifyDefineMap", function() { return n; });
/* harmony import */ var _Program_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Program.js */ "jjdI");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function n(e){let n="";for(const t in e){const o=e[t];if("boolean"==typeof o)o&&(n+=`#define ${t}\n`);else if("number"==typeof o)n+=`#define ${t} ${o.toFixed()}\n`;else if("object"==typeof o){const e=o.options;let r=0;for(const t in e)n+=`#define ${e[t]} ${(r++).toFixed()}\n`;n+=`#define ${t} ${e[o.value]}\n`}}return n}function t(n,t,o,r){o=o||{},r=r||"";const f="function"==typeof t.shaders?t.shaders(o):t.shaders;return new _Program_js__WEBPACK_IMPORTED_MODULE_0__["default"](n,r+f.vertexShader,r+f.fragmentShader,t.attributes)}


/***/ }),

/***/ "2LiO":
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _VertexStream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../VertexStream.js */ "gjrC");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const s={nearest:{defines:[],samplingMode:9728,mips:!1},bilinear:{defines:[],samplingMode:9729,mips:!1},bicubic:{defines:["bicubic"],samplingMode:9729,mips:!1},trilinear:{defines:[],samplingMode:9987,mips:!0}},n=(e,t,i)=>{if("dynamic"===i.samplingMode){const{state:i}=e,n=t.resolution/t.pixelRatio/i.resolution,a=Math.round(e.pixelRatio)!==e.pixelRatio,r=n>1.05||n<.95;return i.rotation||r||a||t.isSourceScaled||t.rotation?s.bilinear:s.nearest}return s[i.samplingMode]};class a extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:{a_position:0,a_texcoord:1}}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),"additive"===t.blendFunction?e.setBlendFunctionSeparate(1,1,1,1):e.setBlendFunctionSeparate(1,771,1,771),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(514,t.stencilRef,255)}draw(i,s){const{context:a,renderingOptions:r,painter:o}=i;if(!s.source)return;i.timeline.begin(this.name),this._quad||(this._quad=new _VertexStream_js__WEBPACK_IMPORTED_MODULE_1__["default"](a,[0,0,1,0,0,1,1,1]));const d=n(i,s,r),c=o.materialManager.getProgram(i,this._desc,d.defines),{coordScale:l,computedOpacity:m,transforms:p}=s;s.setSamplingProfile(d),s.bind(i,_definitions_js__WEBPACK_IMPORTED_MODULE_0__["TEXTURE_BINDING_BITMAP"]),a.bindProgram(c),c.setUniformMatrix3fv("u_dvsMat3",p.dvs),c.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_0__["TEXTURE_BINDING_BITMAP"]),c.setUniform2fv("u_coordScale",l),c.setUniform1f("u_opacity",m),this._quad.draw(),i.timeline.end(this.name)}}/* harmony default export */ __webpack_exports__["default"] = (a);


/***/ }),

/***/ "2yHJ":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js ***!
  \**************************************************************************************/
/*! exports provided: COLLISION_GRID_CELL_SIZE, DECLUTTER_BUDGET, DECLUTTER_TILES, FADE_DURATION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLLISION_GRID_CELL_SIZE", function() { return t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DECLUTTER_BUDGET", function() { return c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DECLUTTER_TILES", function() { return o; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FADE_DURATION", function() { return e; });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const o=!0,t=32,c=1.5,e=200;


/***/ }),

/***/ "3kh5":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js ***!
  \************************************************************************************/
/*! exports provided: WGLBrushVTLLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WGLBrushVTLLine", function() { return n; });
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "srIe");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/vec2f32.js */ "c46T");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../number.js */ "0RS7");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class n extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_5__["default"]{constructor(){super(...arguments),this._dashArray=Object(_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__["c"])(),this._programOptions={id:!1,pattern:!1}}dispose(){}drawMany(r,s){const{context:n,displayLevel:o,state:l,drawPhase:f,painter:m,styleLayerUID:d}=r,p=r.styleLayer,u=p.lineMaterial,c=m.vectorTilesMaterialManager,y=p.getPaintValue("line-translate",o),_=p.getPaintValue("line-translate-anchor",o),h=p.getPaintValue("line-pattern",o),g=void 0!==h,M=1/r.pixelRatio,U=8,v=f===_enums_js__WEBPACK_IMPORTED_MODULE_4__["WGLDrawPhase"].HITTEST,x=this._programOptions;x.id=v,x.pattern=g;const b=c.getMaterialProgram(n,u,x);if(n.bindProgram(b),b.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),b.setUniformMatrix3fv("u_displayMat3",1===_?l.displayMat3:l.displayViewMat3),b.setUniform2fv("u_lineTranslation",y),b.setUniform1f("u_depth",p.z),b.setUniform1f("u_antialiasing",M),v){const t=Object(_number_js__WEBPACK_IMPORTED_MODULE_3__["u32to4Xu8"])(d+1);b.setUniform4fv("u_id",t)}if(g){const t=r.spriteMosaic,a=t.getMosaicItemPosition(h,!0);a&&(t.bind(n,9729,a.page,_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_SPRITES"]),b.setUniform2f("u_pattern_tl",a.tl[0],a.br[1]),b.setUniform2f("u_pattern_br",a.br[0],a.tl[1]),b.setUniform2f("u_spriteSize",U*a.size[0],a.size[1]),b.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_SPRITES"]))}else{let t=p.getPaintValue("line-dasharray",o);t.length<2&&(t=[1,-1]);const e=U;this._dashArray[0]=e*t[0],this._dashArray[1]=e*t[1],b.setUniform2fv("u_dasharray",this._dashArray)}let P=-1;for(const e of s){if(!e.layerData.has(d))continue;e.key.level!==P&&(P=e.key.level,u.setDataUniforms(b,o,p,P));const r=e.layerData.get(d);r.prepareForRendering(n);const a=r.lineVertexArrayObject;Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(a)||(n.bindVAO(a),b.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),n.setStencilFunction(514,e.stencilRef,255),n.drawElements(4,r.lineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.lineIndexStart),e.triangleCount+=r.lineIndexCount/3)}}}


/***/ }),

/***/ "3p2C":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "GMaR");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils.js */ "yN2G");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "Cx4o");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const i=e=>Object(_Utils_js__WEBPACK_IMPORTED_MODULE_2__["createProgramDescriptor"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_vertexOffset",count:2,type:5122},{location:2,name:"a_texCoords",count:2,type:5123},{location:3,name:"a_bitSetAndDistRatio",count:2,type:5123},{location:4,name:"a_id",count:4,type:5121},{location:5,name:"a_color",count:4,type:5121,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:5121,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:5121}]});class n extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__["WGLGeometryType"].MARKER}drawGeometry(e,o,a,n){const{context:r,painter:s,rendererInfo:v,state:l}=e,u=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__["MarkerMaterialKey"].load(a.materialKey),{bufferLayouts:m,attributes:p}=i(u),f=s.materialManager.getMaterialProgram(e,u,"materials/icon",p,n);r.bindProgram(f),u.textureBinding&&s.textureManager.bindTextures(r,f,u,!0),this._setSharedUniforms(f,e,o);const c=u.vvRotation?l.displayViewMat3:l.displayMat3;if(f.setUniformMatrix3fv("u_displayMat3",c),u.vvSizeMinMaxValue&&f.setUniform4fv("u_vvSizeMinMaxValue",v.vvSizeMinMaxValue),u.vvSizeScaleStops&&f.setUniform1f("u_vvSizeScaleStopsValue",v.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=v.getSizeVVFieldStops(o.key.level);f.setUniform1fv("u_vvSizeFieldStopsValues",e.values),f.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}u.vvSizeUnitValue&&f.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",v.vvSizeUnitValueToPixelsRatio),u.vvColor&&(f.setUniform1fv("u_vvColorValues",v.vvColorValues),f.setUniform4fv("u_vvColors",v.vvColors)),u.vvOpacity&&(f.setUniform1fv("u_vvOpacityValues",v.vvOpacityValues),f.setUniform1fv("u_vvOpacities",v.vvOpacities)),u.vvRotation&&f.setUniform1f("u_vvRotationType","geographic"===v.vvMaterialParameters.vvRotationType?0:1),a.draw(r,m,p)}}/* harmony default export */ __webpack_exports__["default"] = (n);


/***/ }),

/***/ "7F7D":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/has.js */ "wSAH");
/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/mathUtils.js */ "OKTS");
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "XvKw");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "fOQB");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "D6bk");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/FramebufferObject.js */ "0meK");
/* harmony import */ var _webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/programUtils.js */ "1F90");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shaders/BackgroundPrograms.js */ "IcFU");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class a extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_8__["default"]{constructor(){super(...arguments),this._color=Object(_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_2__["f"])(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:t},r){t.setDepthWriteEnabled(!1),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(7680,7680,7681),t.setStencilWriteMask(255),t.setStencilFunctionSeparate(1032,516,r.stencilRef,255)}draw(t,r){const{context:e}=t;this._initialized||this._initialize(e),e.bindVAO(this._solidVertexArrayObject),e.bindProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",r.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",r.coordRange),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),e.drawArrays(5,0,4),e.bindVAO()}_initialize(t){if(this._initialized)return!0;const s=Object(_webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_7__["createProgram"])(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_9__["background"]);if(!s)return!1;const a={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},n=new Int8Array([0,0,1,0,0,1,1,1]),l=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_4__["default"].createVertex(t,35044,n),d=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_5__["default"](t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_9__["background"].attributes,a,{geometry:l});return this._solidProgram=s,this._solidVertexArrayObject=d,this._initialized=!0,!0}}/* harmony default export */ __webpack_exports__["default"] = (a);


/***/ }),

/***/ "7P6p":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "GMaR");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils.js */ "yN2G");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "Cx4o");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const i=e=>Object(_Utils_js__WEBPACK_IMPORTED_MODULE_2__["createProgramDescriptor"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_haloColor",count:4,type:5121,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:5121},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:5121},{location:6,name:"a_glyphData",count:4,type:5121},{location:7,name:"a_vertexOffset",count:2,type:5122},{location:8,name:"a_texCoords",count:2,type:5123}]});class n extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__["WGLGeometryType"].LABEL}drawGeometry(e,a,o,n){const{context:l,painter:s,state:r,rendererInfo:m}=e,u=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__["LabelMaterialKey"].load(o.materialKey),f=u.mapAligned?1:0;if(!f&&Math.abs(a.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:c,attributes:v}=i(u),d=s.materialManager.getMaterialProgram(e,u,"materials/label",v,n);e.context.setStencilFunction(514,0,255),l.bindProgram(d),this._setSharedUniforms(d,e,a),s.textureManager.bindTextures(l,d,u);const p=1===f?r.displayViewMat3:r.displayMat3;if(u.vvSizeMinMaxValue&&d.setUniform4fv("u_vvSizeMinMaxValue",m.vvSizeMinMaxValue),u.vvSizeScaleStops&&d.setUniform1f("u_vvSizeScaleStopsValue",m.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=m.getSizeVVFieldStops(a.key.level);d.setUniform1fv("u_vvSizeFieldStopsValues",e.values),d.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}u.vvSizeUnitValue&&d.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",m.vvSizeUnitValueToPixelsRatio),d.setUniform1f("u_mapRotation",Math.floor(r.rotation/360*254)),d.setUniform1f("u_mapAligned",f),d.setUniformMatrix3fv("u_displayMat3",p),d.setUniform1f("u_opacity",1),d.setUniform1f("u_zoomLevel",Math.round(10*e.displayLevel)),d.setUniform2fv("u_screenSize",e.state.size),d.setUniform1f("u_isHalo",1),o.draw(l,c,v),d.setUniform1f("u_isHalo",0),o.draw(l,c,v),l.setStencilTestEnabled(!0),l.setBlendingEnabled(!0)}}/* harmony default export */ __webpack_exports__["default"] = (n);


/***/ }),

/***/ "8HmA":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class r{constructor(){this.name=this.constructor.name||"UnnamedBrush"}prepareState(r,t,a){}draw(r,t,a){}drawMany(r,t,a){for(const s of t)this.draw(r,s,a)}}/* harmony default export */ __webpack_exports__["default"] = (r);


/***/ }),

/***/ "Cx4o":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "srIe");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class n extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{prepareState({context:t},e,i){const a=i&&-1!==i.indexOf("id");t.setBlendingEnabled(!a),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(514,e.stencilRef,255)}draw(e,i,a){const r=this.getGeometryType();i.commit(e);const s=i.getGeometry(r);Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(s)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),s.forEachCommand((t=>this.drawGeometry(e,i,t,a))))}_setSharedUniforms(t,s,n){t.setUniform1f("u_pixelRatio",s.pixelRatio),t.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),t.setUniformMatrix3fv("u_displayViewMat3",s.state.displayViewMat3),t.setUniform1i("u_attributeTextureSize",s.attributeView.size),t.setUniform1i("u_attributeData0",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["TEXTURE_BINDING_ATTRIBUTE_DATA_0"]),t.setUniform1i("u_attributeData1",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["TEXTURE_BINDING_ATTRIBUTE_DATA_1"]),t.setUniform1i("u_attributeData2",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["TEXTURE_BINDING_ATTRIBUTE_DATA_2"]),t.setUniform1i("u_attributeData3",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["TEXTURE_BINDING_ATTRIBUTE_DATA_3"])}}/* harmony default export */ __webpack_exports__["default"] = (n);


/***/ }),

/***/ "EVXj":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js ***!
  \*************************************************************************************/
/*! exports provided: tileInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tileInfo", function() { return r; });
/* harmony import */ var _sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sources/resolver.js */ "vpBa");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const r={shaders:{vertexShader:Object(_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__["resolveIncludes"])("tileInfo/tileInfo.vert"),fragmentShader:Object(_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__["resolveIncludes"])("tileInfo/tileInfo.frag")},attributes:{a_pos:0}};


/***/ }),

/***/ "HQFP":
/*!**************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js ***!
  \**************************************************************************/
/*! exports provided: C_256_TO_RAD, C_2PI, C_DEG_TO_256, C_DEG_TO_RAD, C_INFINITY, C_PI, C_PI_BY_2, C_RAD_TO_256, C_SQRT2, C_SQRT2_INV, between, degToByte, interpolate, log2, positiveMod, radToByte, sqr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_256_TO_RAD", function() { return e; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_2PI", function() { return r; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_DEG_TO_256", function() { return c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_DEG_TO_RAD", function() { return f; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_INFINITY", function() { return n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_PI", function() { return t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_PI_BY_2", function() { return u; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_RAD_TO_256", function() { return o; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_SQRT2", function() { return i; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_SQRT2_INV", function() { return I; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "between", function() { return g; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degToByte", function() { return M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return b; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log2", function() { return P; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "positiveMod", function() { return a; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radToByte", function() { return h; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqr", function() { return T; });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const n=Number.POSITIVE_INFINITY,t=Math.PI,r=2*t,u=t/2,o=128/t,e=t/128,c=256/360,f=t/180,i=1.414213562,I=1/i,N=1/Math.LN2;function a(n,t){return(n%=t)>=0?n:n+t}function h(n){return a(n*o,256)}function M(n){return a(n*c,256)}function P(n){return Math.log(n)*N}function T(n){return n*n}function b(n,t,r){return n*(1-r)+t*r}function g(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}


/***/ }),

/***/ "I/na":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/maybe.js */ "srIe");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Logger.js */ "6S2I");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Error.js */ "zlDU");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../webgl/VertexArrayObject.js */ "D6bk");
/* harmony import */ var _DisplayObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../DisplayObject.js */ "fEsP");
/* harmony import */ var _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Mesh2D.js */ "k61e");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const a=_core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.engine.webgl.ClippingInfo"),c=t=>parseFloat(t)/100;class n extends _DisplayObject_js__WEBPACK_IMPORTED_MODULE_4__["DisplayObject"]{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=e.watch("version",(()=>this._invalidate())),this.ready()}static fromClipArea(t,e){return new n(t,e)}_destroyGL(){Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isSome"])(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isSome"])(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(t,r,s,h){const[o,a]=r.size;if("geometry"!==this._clip.type&&this._lastWidth===o&&this._lastHeight===a||(this._lastWidth=o,this._lastHeight=a,this._destroyGL()),Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(this._cache.vao)){const e=this._createMesh(r,this._clip),o=e.getIndexBuffer(t),a=e.getVertexBuffers(t);this._cache.mesh=e,this._cache.vao=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_3__["default"](t,s,h,a,o)}return this._cache.vao}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(t,e){const[r,s]=t.size,i="string"==typeof e.left?c(e.left)*r:e.left,h="string"==typeof e.right?c(e.right)*r:e.right,o="string"==typeof e.top?c(e.top)*s:e.top,a="string"==typeof e.bottom?c(e.bottom)*s:e.bottom,n=i,p=o;return{x:n,y:p,width:Math.max(r-h-n,0),height:Math.max(s-a-p,0)}}_createMesh(t,e){switch(e.type){case"rect":return _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromRect(this._createScreenRect(t,e));case"path":return _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromPath(e);case"geometry":return _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromGeometry(t,e);default:return a.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),_Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromRect({x:0,y:0,width:1,height:1})}}}/* harmony default export */ __webpack_exports__["default"] = (n);


/***/ }),

/***/ "IcFU":
/*!***************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js ***!
  \***************************************************************************************/
/*! exports provided: background */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "background", function() { return e; });
/* harmony import */ var _sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sources/resolver.js */ "vpBa");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const e={shaders:{vertexShader:Object(_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__["resolveIncludes"])("background/background.vert"),fragmentShader:Object(_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__["resolveIncludes"])("background/background.frag")},attributes:{a_pos:0}};


/***/ }),

/***/ "JB4N":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "GMaR");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils.js */ "yN2G");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "Cx4o");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const i=e=>Object(_Utils_js__WEBPACK_IMPORTED_MODULE_2__["createProgramDescriptor"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:5120},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:5123},{location:5,name:"a_tlbr",count:4,type:5123},{location:6,name:"a_segmentDirection",count:4,type:5120},{location:7,name:"a_aux",count:2,type:5123}]});class n extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__["WGLGeometryType"].LINE}drawGeometry(e,a,o,n){const{context:l,painter:r,rendererInfo:s,requiredLevel:v}=e,u=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__["LineMaterialKey"].load(o.materialKey),{bufferLayouts:m,attributes:c}=i(u),f=r.materialManager.getMaterialProgram(e,u,"materials/line",c,n),p=1/e.pixelRatio,d=0;l.bindProgram(f),this._setSharedUniforms(f,e,a),u.textureBinding&&r.textureManager.bindTextures(l,f,u);const S=2**(v-a.key.level)/e.pixelRatio;if(f.setUniform1f("u_zoomFactor",S),f.setUniform1f("u_blur",d+p),f.setUniform1f("u_antialiasing",p),u.vvSizeMinMaxValue&&f.setUniform4fv("u_vvSizeMinMaxValue",s.vvSizeMinMaxValue),u.vvSizeScaleStops&&f.setUniform1f("u_vvSizeScaleStopsValue",s.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=s.getSizeVVFieldStops(a.key.level);f.setUniform1fv("u_vvSizeFieldStopsValues",e.values),f.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}u.vvSizeUnitValue&&f.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",s.vvSizeUnitValueToPixelsRatio),u.vvColor&&(f.setUniform1fv("u_vvColorValues",s.vvColorValues),f.setUniform4fv("u_vvColors",s.vvColors)),u.vvOpacity&&(f.setUniform1fv("u_vvOpacityValues",s.vvOpacityValues),f.setUniform1fv("u_vvOpacities",s.vvOpacities)),l.setFaceCullingEnabled(!0),l.setFrontFace(2305),l.setCullFace(1029),o.draw(l,m,c),l.setFaceCullingEnabled(!1)}}/* harmony default export */ __webpack_exports__["default"] = (n);


/***/ }),

/***/ "Jn3h":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js ***!
  \**************************************************************************************/
/*! exports provided: WGLBrushVTLSymbol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WGLBrushVTLSymbol", function() { return p; });
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "srIe");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/vec2f32.js */ "c46T");
/* harmony import */ var _vectorTiles_decluttering_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vectorTiles/decluttering/config.js */ "2yHJ");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../number.js */ "0RS7");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/* harmony import */ var _GeometryUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../GeometryUtils.js */ "HQFP");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const c=1/65536;class p extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_6__["default"]{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=Object(_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__["c"])()}dispose(){}drawMany(t,e){const{drawPhase:a,styleLayerUID:i}=t,r=t.styleLayer;let n;a===_enums_js__WEBPACK_IMPORTED_MODULE_5__["WGLDrawPhase"].HITTEST&&(n=Object(_number_js__WEBPACK_IMPORTED_MODULE_4__["u32to4Xu8"])(i+1)),this._drawIcons(t,r,e,n),this._drawText(t,r,e,n)}_drawIcons(a,i,r,s){const{context:l,displayLevel:c,drawPhase:p,painter:u,state:m,styleLayerUID:d}=a,g=i.iconMaterial,y=u.vectorTilesMaterialManager;let _,h=!1;for(const t of r)if(t.layerData.has(d)&&(_=t.layerData.get(d),_.iconPerPageElementsMap.size>0)){h=!0;break}if(!h)return;const M=i.getPaintValue("icon-translate",c),U=i.getPaintValue("icon-translate-anchor",c);let P=i.getLayoutValue("icon-rotation-alignment",c);2===P&&(P=0===i.getLayoutValue("symbol-placement",c)?1:0);const x=0===P,v=i.getLayoutValue("icon-keep-upright",c)&&x,T=_.isIconSDF,E=p===_enums_js__WEBPACK_IMPORTED_MODULE_5__["WGLDrawPhase"].HITTEST,D=this._iconProgramOptions;D.id=E,D.sdf=T;const V=y.getMaterialProgram(l,g,D);l.bindProgram(V),V.setUniformMatrix3fv("u_displayViewMat3",0===P?m.displayViewMat3:m.displayMat3),V.setUniformMatrix3fv("u_displayMat3",1===U?m.displayMat3:m.displayViewMat3),V.setUniform2fv("u_iconTranslation",M),V.setUniform1f("u_depth",i.z),V.setUniform1f("u_mapRotation",Object(_GeometryUtils_js__WEBPACK_IMPORTED_MODULE_7__["degToByte"])(m.rotation)),V.setUniform1f("u_keepUpright",v?1:0),V.setUniform1f("u_level",10*c),V.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_SPRITES"]),V.setUniform1f("u_fadeDuration",_vectorTiles_decluttering_config_js__WEBPACK_IMPORTED_MODULE_3__["FADE_DURATION"]/1e3),E&&V.setUniform4fv("u_id",s);let S=-1;for(const e of r){if(!e.layerData.has(d))continue;if(e.key.level!==S&&(S=e.key.level,g.setDataUniforms(V,c,i,S)),_=e.layerData.get(d),0===_.iconPerPageElementsMap.size)continue;_.prepareForRendering(l),_.updateOpacityInfo();const r=_.iconVertexArrayObject;if(!Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(r)){l.bindVAO(r),V.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),V.setUniform1f("u_time",(performance.now()-_.lastOpacityUpdate)/1e3);for(const[t,i]of _.iconPerPageElementsMap)this._renderIconRange(a,V,i,t,e)}}}_renderIconRange(t,a,i,r,n){const{context:s,spriteMosaic:o}=t;this._spritesTextureSize[0]=o.getWidth(r)/4,this._spritesTextureSize[1]=o.getHeight(r)/4,a.setUniform2fv("u_mosaicSize",this._spritesTextureSize),o.bind(s,9729,r,_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_SPRITES"]),s.setStencilTestEnabled(!0),s.setStencilFunction(516,255,255),s.setStencilWriteMask(0),s.drawElements(4,i[1],5125,Uint32Array.BYTES_PER_ELEMENT*i[0]),n.triangleCount+=i[1]/3}_drawText(e,i,s,l){const{context:p,displayLevel:u,drawPhase:m,glyphMosaic:d,painter:g,pixelRatio:y,state:_,styleLayerUID:h}=e,M=i.textMaterial,U=g.vectorTilesMaterialManager;let P,x=!1;for(const t of s)if(t.layerData.has(h)&&(P=t.layerData.get(h),P.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const v=i.getPaintProperty("text-opacity");if(v&&!v.isDataDriven&&0===v.getValue(u))return;const T=i.getPaintProperty("text-color"),E=!T||T.isDataDriven||T.getValue(u)[3]>0,D=i.getPaintProperty("text-halo-width"),V=i.getPaintProperty("text-halo-color"),S=(!D||D.isDataDriven||D.getValue(u)>0)&&(!V||V.isDataDriven||V.getValue(u)[3]>0);if(!E&&!S)return;const w=24/8;let b=i.getLayoutValue("text-rotation-alignment",u);2===b&&(b=0===i.getLayoutValue("symbol-placement",u)?1:0);const L=0===b,z=i.getLayoutValue("text-keep-upright",u)&&L,k=m===_enums_js__WEBPACK_IMPORTED_MODULE_5__["WGLDrawPhase"].HITTEST,I=.8*w/y;this._glyphTextureSize||(this._glyphTextureSize=Object(_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__["f"])(d.width/4,d.height/4));const O=i.getPaintValue("text-translate",u),R=i.getPaintValue("text-translate-anchor",u),j=this._sdfProgramOptions;j.id=k;const A=U.getMaterialProgram(p,M,j);p.bindProgram(A),A.setUniformMatrix3fv("u_displayViewMat3",0===b?_.displayViewMat3:_.displayMat3),A.setUniformMatrix3fv("u_displayMat3",1===R?_.displayMat3:_.displayViewMat3),A.setUniform2fv("u_textTranslation",O),A.setUniform1f("u_depth",i.z+c),A.setUniform2fv("u_mosaicSize",this._glyphTextureSize),A.setUniform1f("u_mapRotation",Object(_GeometryUtils_js__WEBPACK_IMPORTED_MODULE_7__["degToByte"])(_.rotation)),A.setUniform1f("u_keepUpright",z?1:0),A.setUniform1f("u_level",10*u),A.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_GLYPHS"]),A.setUniform1f("u_antialiasingWidth",I),A.setUniform1f("u_fadeDuration",_vectorTiles_decluttering_config_js__WEBPACK_IMPORTED_MODULE_3__["FADE_DURATION"]/1e3),k&&A.setUniform4fv("u_id",l);let F=-1;for(const a of s){if(!a.layerData.has(h))continue;if(a.key.level!==F&&(F=a.key.level,M.setDataUniforms(A,u,i,F)),P=a.layerData.get(h),0===P.glyphPerPageElementsMap.size)continue;P.prepareForRendering(p),P.updateOpacityInfo();const e=P.textVertexArrayObject;if(Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(e))continue;p.bindVAO(e),A.setUniformMatrix3fv("u_dvsMat3",a.transforms.dvs),p.setStencilTestEnabled(!0),p.setStencilFunction(516,255,255),p.setStencilWriteMask(0);const r=(performance.now()-P.lastOpacityUpdate)/1e3;A.setUniform1f("u_time",r),P.glyphPerPageElementsMap.forEach(((t,e)=>{this._renderGlyphRange(p,t,e,d,A,S,E,a)}))}}_renderGlyphRange(t,e,i,r,n,s,o,l){r.bind(t,9729,i,_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_GLYPHS"]),s&&(n.setUniform1f("u_halo",1),t.drawElements(4,e[1],5125,Uint32Array.BYTES_PER_ELEMENT*e[0]),l.triangleCount+=e[1]/3),o&&(n.setUniform1f("u_halo",0),t.drawElements(4,e[1],5125,Uint32Array.BYTES_PER_ELEMENT*e[0]),l.triangleCount+=e[1]/3)}}


/***/ }),

/***/ "Oxob":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/brushes.js ***!
  \**************************************************************/
/*! exports provided: brushes, vtlBrushes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushes", function() { return g; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtlBrushes", function() { return G; });
/* harmony import */ var _webgl_brushes_BrushBitmap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl/brushes/BrushBitmap.js */ "2LiO");
/* harmony import */ var _webgl_brushes_BrushClip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl/brushes/BrushClip.js */ "bGT/");
/* harmony import */ var _webgl_brushes_WGLBrushInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushInfo.js */ "b3VY");
/* harmony import */ var _webgl_brushes_WGLBrushStencil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushStencil.js */ "7F7D");
/* harmony import */ var _webgl_brushes_WGLBrushVTLBackground_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLBackground.js */ "cRHi");
/* harmony import */ var _webgl_brushes_WGLBrushVTLCircle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLCircle.js */ "ip0X");
/* harmony import */ var _webgl_brushes_WGLBrushVTLFill_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLFill.js */ "zcBC");
/* harmony import */ var _webgl_brushes_WGLBrushVTLLine_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLLine.js */ "3kh5");
/* harmony import */ var _webgl_brushes_WGLBrushVTLSymbol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLSymbol.js */ "Jn3h");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushFill_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushFill.js */ "j/wV");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushLabel_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushLabel.js */ "7P6p");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushLine_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushLine.js */ "JB4N");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushMarker.js */ "3p2C");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushText_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushText.js */ "eCaw");
/* harmony import */ var _webgl_brushes_raster_BrushRasterBitmap_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./webgl/brushes/raster/BrushRasterBitmap.js */ "aET7");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const g={marker:_webgl_brushes_WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_12__["default"],line:_webgl_brushes_WGLGeometryBrushLine_js__WEBPACK_IMPORTED_MODULE_11__["default"],fill:_webgl_brushes_WGLGeometryBrushFill_js__WEBPACK_IMPORTED_MODULE_9__["default"],text:_webgl_brushes_WGLGeometryBrushText_js__WEBPACK_IMPORTED_MODULE_13__["default"],label:_webgl_brushes_WGLGeometryBrushLabel_js__WEBPACK_IMPORTED_MODULE_10__["default"],clip:_webgl_brushes_BrushClip_js__WEBPACK_IMPORTED_MODULE_1__["default"],stencil:_webgl_brushes_WGLBrushStencil_js__WEBPACK_IMPORTED_MODULE_3__["default"],bitmap:_webgl_brushes_BrushBitmap_js__WEBPACK_IMPORTED_MODULE_0__["default"],raster:_webgl_brushes_raster_BrushRasterBitmap_js__WEBPACK_IMPORTED_MODULE_14__["default"],tileInfo:_webgl_brushes_WGLBrushInfo_js__WEBPACK_IMPORTED_MODULE_2__["default"],vtlBackground:_webgl_brushes_WGLBrushVTLBackground_js__WEBPACK_IMPORTED_MODULE_4__["WGLBrushVTLBackground"],vtlFill:_webgl_brushes_WGLBrushVTLFill_js__WEBPACK_IMPORTED_MODULE_6__["WGLBrushVTLFill"],vtlLine:_webgl_brushes_WGLBrushVTLLine_js__WEBPACK_IMPORTED_MODULE_7__["WGLBrushVTLLine"],vtlCircle:_webgl_brushes_WGLBrushVTLCircle_js__WEBPACK_IMPORTED_MODULE_5__["WGLBrushVTLCircle"],vtlSymbol:_webgl_brushes_WGLBrushVTLSymbol_js__WEBPACK_IMPORTED_MODULE_8__["WGLBrushVTLSymbol"]},G={vtlBackground:_webgl_brushes_WGLBrushVTLBackground_js__WEBPACK_IMPORTED_MODULE_4__["WGLBrushVTLBackground"],vtlFill:_webgl_brushes_WGLBrushVTLFill_js__WEBPACK_IMPORTED_MODULE_6__["WGLBrushVTLFill"],vtlLine:_webgl_brushes_WGLBrushVTLLine_js__WEBPACK_IMPORTED_MODULE_7__["WGLBrushVTLLine"],vtlCircle:_webgl_brushes_WGLBrushVTLCircle_js__WEBPACK_IMPORTED_MODULE_5__["WGLBrushVTLCircle"],vtlSymbol:_webgl_brushes_WGLBrushVTLSymbol_js__WEBPACK_IMPORTED_MODULE_8__["WGLBrushVTLSymbol"]};


/***/ }),

/***/ "SfCL":
/*!*****************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/ShaderCompiler.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class e{constructor(e){this.readFile=e}resolveIncludes(e){return this.resolve(e)}resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this.read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h="";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?"":this.resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}read(e){return this.readFile(e)}}/* harmony default export */ __webpack_exports__["default"] = (e);


/***/ }),

/***/ "XvKw":
/*!*****************************************************!*\
  !*** ./node_modules/@arcgis/core/chunks/vec4f32.js ***!
  \*****************************************************/
/*! exports provided: O, U, Z, a, b, c, d, e, f, g, h, i, j, o, u, v, z */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return l; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Z", function() { return f; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return r; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return a; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return s; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return i; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return w; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return N; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return U; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return u; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return o; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return e; });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function n(){return new Float32Array(4)}function r(n){const r=new Float32Array(4);return r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r}function t(n,r,t,a){const e=new Float32Array(4);return e[0]=n,e[1]=r,e[2]=t,e[3]=a,e}function a(n,r){return new Float32Array(n,r,4)}function e(){return n()}function u(){return t(1,1,1,1)}function o(){return t(1,0,0,0)}function s(){return t(0,1,0,0)}function c(){return t(0,0,1,0)}function i(){return t(0,0,0,1)}const f=e(),l=u(),_=o(),w=s(),N=c(),U=i();var y=Object.freeze({__proto__:null,create:n,clone:r,fromValues:t,createView:a,zeros:e,ones:u,unitX:o,unitY:s,unitZ:c,unitW:i,ZEROS:f,ONES:l,UNIT_X:_,UNIT_Y:w,UNIT_Z:N,UNIT_W:U});


/***/ }),

/***/ "aET7":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/raster/BrushRasterBitmap.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../webgl/rasterUtils.js */ "vrr1");
/* harmony import */ var _VertexStream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../VertexStream.js */ "gjrC");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class l extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:{a_position:0,a_texcoord:1}},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:{a_position:0,a_texcoord:1}},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:{a_position:0,a_texcoord:1}}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState({context:t},e){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(514,e.stencilRef,255)}draw(t,e){var r;if(!e.source)return;if(e.suspended)return;t.timeline.begin(this.name);const s=!(null!=(r=t.context.capabilities.textureFloat)&&r.textureFloatLinear);e.updateTexture(t);const a=this.getShaderVariations(e,s),i=t.painter.materialManager.getProgram(t,this._desc[e.symbolizerParameters.type],a);this.drawWithProgram(t.context,i,e),t.timeline.end(this.name)}drawWithProgram(o,c,l,d=1,u=[0,0],p=!1){this._quad||(this._quad=new _VertexStream_js__WEBPACK_IMPORTED_MODULE_1__["default"](o,[0,0,1,0,0,1,1,1]));const{symbolizerParameters:m,transformGrid:f,width:g,height:_,opacity:b}=l,x=m.type;o.bindProgram(c);const P=this.getShaderVariations(l),S=this.getUniformInfos(x,o,c,P),{names:y,textures:w}=l.getTextures();Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["setTextures"])(o,c,y,w);const U=Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["getBasicGridUniforms"])(d,u),v=Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["getCommonUniforms"])(f,[g,_],[l.source.width,l.source.height],b,p);if(Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["setUniforms"])(c,S,{u_coordScale:l.coordScale,u_dvsMat3:l.transforms.dvs,...U,...v}),m.colormap){const{colormap:t,colormapOffset:e}=m,a=Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["getColormapUniforms"])(t,e);Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["setUniforms"])(c,S,a)}if("stretch"===m.type){const t=Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["getStretchUniforms"])(m);Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["setUniforms"])(c,S,t)}else if("hillshade"===m.type){const t=Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["getShadedReliefUniforms"])(m);Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["setUniforms"])(c,S,t)}this._quad.draw()}getUniformInfos(t,e,r,s){const a=s.length>0?t+"-"+s.join("-"):t;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const i=Object(_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_0__["getUniformLocationInfos"])(e,r);return this._rendererUniformInfos.set(a,i),i}getShaderVariations(t,e=!1){const r=[];return"cubic"===t.interpolation?r.push("bicubic"):e&&"bilinear"===t.interpolation&&r.push("bilinear"),t.isRendereredSource?r.push("noop"):t.symbolizerParameters.colormap&&r.push("applyColormap"),t.transformGrid&&r.push("applyProjection"),r}}/* harmony default export */ __webpack_exports__["default"] = (l);


/***/ }),

/***/ "b3VY":
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/has.js */ "wSAH");
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "XvKw");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "fOQB");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/Texture.js */ "of9L");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "D6bk");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/FramebufferObject.js */ "0meK");
/* harmony import */ var _webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/programUtils.js */ "1F90");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shaders/BackgroundPrograms.js */ "IcFU");
/* harmony import */ var _shaders_TileInfoPrograms_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shaders/TileInfoPrograms.js */ "EVXj");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const l=300,u=32;class m extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_8__["default"]{constructor(){super(...arguments),this._color=Object(_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_1__["f"])(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r}=t;if(!e.isReady)return;this._loadWGLResources(r),r.bindVAO(this._outlineVertexArrayObject),r.bindProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",e.coordRange[0],e.coordRange[1]),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),r.drawArrays(3,0,4),r.bindVAO();const i=this._getTexture(r,e);i&&(r.bindVAO(this._tileInfoVertexArrayObject),r.bindProgram(this._tileInfoProgram),r.bindTexture(i,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",e.coordRange[0]/e.size[0],e.coordRange[1]/e.size[1]),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",i.descriptor.width,i.descriptor.height),r.drawArrays(5,0,4),r.bindVAO())}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=Object(_webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_7__["createProgram"])(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_9__["background"]),s=Object(_webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_7__["createProgram"])(t,_shaders_TileInfoPrograms_js__WEBPACK_IMPORTED_MODULE_10__["tileInfo"]),l={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},u=new Int8Array([0,0,1,0,1,1,0,1]),m=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].createVertex(t,35044,u),c=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_5__["default"](t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_9__["background"].attributes,l,{geometry:m}),f=new Int8Array([0,0,1,0,0,1,1,1]),d=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].createVertex(t,35044,f),g=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_5__["default"](t,_shaders_TileInfoPrograms_js__WEBPACK_IMPORTED_MODULE_10__["tileInfo"].attributes,l,{geometry:d});this._outlineProgram=r,this._tileInfoProgram=s,this._outlineVertexArrayObject=c,this._tileInfoVertexArrayObject=g}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width",`${l}`),this._canvas.setAttribute("height",`${u}`),this._canvas.setAttribute("style","display:none"));const i=e.triangleCount;let o=e.key.id;e.triangleCount>0&&(o+=`, ${i}`);const s=this._canvas,n=s.getContext("2d");return n.font="24px sans-serif",n.textAlign="left",n.textBaseline="top",n.clearRect(0,0,l,u),i>1e5?(n.fillStyle="red",n.fillRect(0,0,l,u),n.fillStyle="black"):(n.clearRect(0,0,l,u),n.fillStyle="blue"),n.fillText(o,0,0),e.texture=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_4__["default"](t,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071},s),e.texture}}/* harmony default export */ __webpack_exports__["default"] = (m);


/***/ }),

/***/ "bGT/":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "XvKw");
/* harmony import */ var _webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../webgl/programUtils.js */ "1F90");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Utils.js */ "yN2G");
/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shaders/BackgroundPrograms.js */ "IcFU");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const i=()=>Object(_Utils_js__WEBPACK_IMPORTED_MODULE_3__["createProgramDescriptor"])("clip",{geometry:[{location:0,name:"a_pos",count:2,type:5122}]});class a extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._color=Object(_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__["f"])(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:t}){t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setFaceCullingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(7680,7680,7681),t.setStencilWriteMask(255),t.setStencilFunction(519,0,255)}draw(t,s){const{context:e,state:a}=t;this._program||(this._program=Object(_webgl_programUtils_js__WEBPACK_IMPORTED_MODULE_1__["createProgram"])(e,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_4__["background"]));const n=this._program,m=i(),c=s.getVAO(e,a,m.attributes,m.bufferLayouts);e.bindProgram(this._program),n.setUniform2fv("u_coord_range",[1,1]),n.setUniform4fv("u_color",this._color),n.setUniformMatrix3fv("u_dvsMat3",a.displayMat3),e.bindVAO(c),e.drawElements(4,c.indexBuffer.size,5125,0),e.bindVAO()}}/* harmony default export */ __webpack_exports__["default"] = (a);


/***/ }),

/***/ "cRHi":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js ***!
  \******************************************************************************************/
/*! exports provided: WGLBrushVTLBackground */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WGLBrushVTLBackground", function() { return f; });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/has.js */ "wSAH");
/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/mathUtils.js */ "OKTS");
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "XvKw");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../chunks/mat3f32.js */ "jHF5");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "fOQB");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "D6bk");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../webgl/FramebufferObject.js */ "0meK");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../number.js */ "0RS7");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class f extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_11__["default"]{constructor(){super(...arguments),this._color=Object(_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_2__["f"])(1,0,0,1),this._patternMatrix=Object(_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_4__["c"])(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(t,o){const{context:i,painter:s,styleLayerUID:c}=t;this._loadWGLResources(t);const f=t.displayLevel,m=t.styleLayer,l=m.backgroundMaterial,u=s.vectorTilesMaterialManager,p=m.getPaintValue("background-color",f),_=m.getPaintValue("background-opacity",f),d=m.getPaintValue("background-pattern",f),h=void 0!==d,g=p[3]*_,b=1|window.devicePixelRatio,v=t.spriteMosaic;let M;const x=b>_definitions_js__WEBPACK_IMPORTED_MODULE_3__["VTL_HIGH_RES_CUTOFF"]?2:1,y=t.drawPhase===_enums_js__WEBPACK_IMPORTED_MODULE_10__["WGLDrawPhase"].HITTEST,j=this._programOptions;j.id=y,j.pattern=h;const U=u.getMaterialProgram(i,l,j);if(i.bindVAO(this._vao),i.bindProgram(U),h){if(M=v.getMosaicItemPosition(d,!0),!M)return;U.setUniform1f("u_opacity",_),U.setUniform2f("u_pattern_tl",M.tl[0],M.tl[1]),U.setUniform2f("u_pattern_br",M.br[0],M.br[1]),U.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_3__["VTL_TEXTURE_BINDING_UNIT_SPRITES"]),v.bind(i,9729,M.page,_definitions_js__WEBPACK_IMPORTED_MODULE_3__["VTL_TEXTURE_BINDING_UNIT_SPRITES"])}else this._color[0]=g*p[0],this._color[1]=g*p[1],this._color[2]=g*p[2],this._color[3]=g,U.setUniform4fv("u_color",this._color);if(U.setUniform1f("u_depth",m.z||0),y){const t=Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["u32to4Xu8"])(c+1);U.setUniform4fv("u_id",t)}for(const r of o){if(U.setUniform1f("u_coord_range",r.coordRange[0]),U.setUniformMatrix3fv("u_dvsMat3",r.transforms.dvs),h){const t=Math.max(2**(Math.round(f)-r.key.level),1),e=x*r.size[0]*t,o=e/M.size[0],i=e/M.size[1];this._patternMatrix[0]=o,this._patternMatrix[4]=i,U.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}i.setStencilFunction(514,r.stencilRef,255),i.drawArrays(5,0,4)}}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:e}=t,o=e.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),n=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_6__["default"].createVertex(r,35044,a),c=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_7__["default"](r,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:n});this._vao=c}}


/***/ }),

/***/ "eCaw":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "GMaR");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils.js */ "yN2G");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "Cx4o");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const i=e=>Object(_Utils_js__WEBPACK_IMPORTED_MODULE_2__["createProgramDescriptor"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_haloColor",count:4,type:5121,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:5121},{location:5,name:"a_aux",count:4,type:5120},{location:6,name:"a_vertexOffset",count:2,type:5122},{location:7,name:"a_texCoords",count:2,type:5123}]});class r extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__["WGLGeometryType"].TEXT}drawGeometry(e,a,o,r){const{context:s,painter:n,rendererInfo:v,state:l}=e,u=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__["TextMaterialKey"].load(o.materialKey),{bufferLayouts:m,attributes:f}=i(u),p=n.materialManager.getMaterialProgram(e,u,"materials/text",f,r);if(s.bindProgram(p),this._setSharedUniforms(p,e,a),n.textureManager.bindTextures(s,p,u),p.setUniformMatrix3fv("u_displayMat3",l.displayMat3),p.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),u.vvSizeMinMaxValue&&p.setUniform4fv("u_vvSizeMinMaxValue",v.vvSizeMinMaxValue),u.vvSizeScaleStops&&p.setUniform1f("u_vvSizeScaleStopsValue",v.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=v.getSizeVVFieldStops(a.key.level);p.setUniform1fv("u_vvSizeFieldStopsValues",e.values),p.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}u.vvSizeUnitValue&&p.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",v.vvSizeUnitValueToPixelsRatio),u.vvColor&&(p.setUniform1fv("u_vvColorValues",v.vvColorValues),p.setUniform4fv("u_vvColors",v.vvColors)),u.vvOpacity&&(p.setUniform1fv("u_vvOpacityValues",v.vvOpacityValues),p.setUniform1fv("u_vvOpacities",v.vvOpacities)),u.vvRotation&&p.setUniform1f("u_vvRotationType","geographic"===v.vvMaterialParameters.vvRotationType?0:1),p.setUniform1f("u_isHalo",1),o.draw(s,m,f),p.setUniform1f("u_isHalo",0),o.draw(s,m,f)}}/* harmony default export */ __webpack_exports__["default"] = (r);


/***/ }),

/***/ "gjrC":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "wSAH");
/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/mathUtils.js */ "OKTS");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../webgl/BufferObject.js */ "fOQB");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../webgl/VertexArrayObject.js */ "D6bk");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../webgl/FramebufferObject.js */ "0meK");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class r{constructor(r,i){this.rctx=r,this._vertexBuffer=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].createVertex(r,35044,new Uint16Array(i)),this._vao=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_4__["default"](r,{a_position:0},{geometry:[{name:"a_position",count:2,type:5122,offset:0,stride:4,normalized:!1}]},{geometry:this._vertexBuffer})}bind(){this._vao.bind()}unbind(){this._vao.unbind()}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(5,0,4)}}/* harmony default export */ __webpack_exports__["default"] = (r);


/***/ }),

/***/ "ip0X":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js ***!
  \**************************************************************************************/
/*! exports provided: WGLBrushVTLCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WGLBrushVTLCircle", function() { return i; });
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "srIe");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../number.js */ "0RS7");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class i extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(a,i){const{context:n,displayLevel:s,requiredLevel:o,state:l,drawPhase:c,painter:m,styleLayerUID:d}=a,f=a.styleLayer,u=f.circleMaterial,p=m.vectorTilesMaterialManager,y=1.2,g=f.getPaintValue("circle-translate",s),v=f.getPaintValue("circle-translate-anchor",s),M=c===_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].HITTEST,_=this._programOptions;_.id=M;const x=p.getMaterialProgram(n,u,_);n.bindProgram(x),x.setUniformMatrix3fv("u_displayMat3",1===v?l.displayMat3:l.displayViewMat3),x.setUniform2fv("u_circleTranslation",g),x.setUniform1f("u_depth",f.z),x.setUniform1f("u_antialiasingWidth",y);let U=-1;if(M){const e=Object(_number_js__WEBPACK_IMPORTED_MODULE_1__["u32to4Xu8"])(d+1);x.setUniform4fv("u_id",e)}for(const t of i){if(!t.layerData.has(d))continue;t.key.level!==U&&(U=t.key.level,u.setDataUniforms(x,s,f,U));const r=t.layerData.get(d);r.prepareForRendering(n);const a=r.circleVertexArrayObject;Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(a)||(n.bindVAO(a),x.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),o!==t.key.level?n.setStencilFunction(514,t.stencilRef,255):n.setStencilFunction(516,255,255),n.drawElements(4,r.circleIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.circleIndexStart),t.triangleCount+=r.circleIndexCount/3)}}}


/***/ }),

/***/ "j/wV":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/has.js */ "wSAH");
/* harmony import */ var _core_RandomLCG_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/RandomLCG.js */ "iA3P");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _webgl_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/checkWebGLError.js */ "GVa1");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/Texture.js */ "of9L");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/FramebufferObject.js */ "0meK");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "GMaR");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Utils.js */ "yN2G");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "Cx4o");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const d=e=>Object(_Utils_js__WEBPACK_IMPORTED_MODULE_9__["createProgramDescriptor"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},...e.dotDensity?[]:[{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_tlbr",count:4,type:5123},{location:4,name:"a_aux1",count:4,type:5121},{location:5,name:"a_aux2",count:2,type:5123},{location:6,name:"a_aux3",count:4,type:5121}],...e.dotDensity?[{location:2,name:"a_inverseArea",count:1,type:5126}]:[]]});class u extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_10__["default"]{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([_definitions_js__WEBPACK_IMPORTED_MODULE_2__["TEXTURE_BINDING_RENDERER_0"],_definitions_js__WEBPACK_IMPORTED_MODULE_2__["TEXTURE_BINDING_RENDERER_1"]])}dispose(){this._disposeTextures()}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_7__["WGLGeometryType"].FILL}drawGeometry(e,t,o,r){const{context:s,painter:n,rendererInfo:l,requiredLevel:u}=e,m=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_8__["FillMaterialKey"].load(o.materialKey),{bufferLayouts:c,attributes:_}=d(m),f=n.materialManager.getMaterialProgram(e,m,"materials/fill",_,r);if(s.bindProgram(f),this._setSharedUniforms(f,e,t),m.textureBinding){n.textureManager.bindTextures(s,f,m);const o=1/2**(u-t.key.level)/e.pixelRatio;f.setUniform1f("u_zoomFactor",o)}if(m.vvColor&&(f.setUniform1fv("u_vvColorValues",l.vvColorValues),f.setUniform4fv("u_vvColors",l.vvColors)),m.vvOpacity&&(f.setUniform1fv("u_vvOpacityValues",l.vvOpacityValues),f.setUniform1fv("u_vvOpacities",l.vvOpacities)),m.dotDensity){const o=_definitions_js__WEBPACK_IMPORTED_MODULE_2__["TILE_SIZE"]/l.ddDotSize,r=o*window.devicePixelRatio*o*window.devicePixelRatio,a=1/2**(u-t.key.level),n=1/a*(1/a),d=l.ddDotScale?e.state.scale/l.ddDotScale:1;f.setUniform1f("u_tileZoomFactor",a),f.setUniform1f("u_tileDotsOverArea",r/(_definitions_js__WEBPACK_IMPORTED_MODULE_2__["TILE_SIZE"]*window.devicePixelRatio*_definitions_js__WEBPACK_IMPORTED_MODULE_2__["TILE_SIZE"]*window.devicePixelRatio)),f.setUniformMatrix4fv("u_dotColors",l.ddColors),f.setUniform4fv("u_isActive",l.ddActiveDots),f.setUniform4fv("u_dotBackgroundColor",l.ddBackgroundColor),f.setUniform1f("u_dotValue",Math.max(1,l.ddDotValue*d*n)),this._bindDotDensityTextures(s,f,l,o)}o.draw(s,c,_)}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,i){const r=this._createDotDensityTextures(e,i,o.ddSeed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let s=0;s<r.length;s++)e.bindTexture(r[s],this._dotSamplers[s])}_createDotDensityTextures(t,o,i){if(this._dotTextureSize===o&&this._seed===i||(this._disposeTextures(),this._dotTextureSize=o,this._seed=i),null===this._dotTextures){const r=new _core_RandomLCG_js__WEBPACK_IMPORTED_MODULE_1__["default"](i);this._dotTextures=[this._allocDotDensityTexture(t,o,r),this._allocDotDensityTexture(t,o,r)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const i=new Float32Array(t*t*4);for(let r=0;r<i.length;r++)i[r]=o.getFloat();return new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_5__["default"](e,{wrapMode:10497,pixelFormat:6408,dataType:5126,samplingMode:9728,width:t,height:t},i)}}/* harmony default export */ __webpack_exports__["default"] = (u);


/***/ }),

/***/ "k61e":
/*!*******************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/maybe.js */ "srIe");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Logger.js */ "6S2I");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Error.js */ "zlDU");
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../layers/graphics/OptimizedGeometry.js */ "gVKr");
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../layers/graphics/featureConversionUtils.js */ "ZlUD");
/* harmony import */ var _chunks_vec2f64_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../chunks/vec2f64.js */ "AvGH");
/* harmony import */ var _core_libs_earcut_earcut_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/libs/earcut/earcut.js */ "+yyC");
/* harmony import */ var _chunks_vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../chunks/vec2.js */ "M0lq");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../webgl/BufferObject.js */ "fOQB");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./number.js */ "0RS7");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const m=_core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.engine.webgl.Mesh2D"),u=e=>{switch(e.BYTES_PER_ELEMENT){case 1:return 5121;case 2:return 5123;case 4:return 5125;default:throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("Cannot get DataType of array")}},y=(e,t,r,o)=>{let n=0;for(let s=1;s<r;s++){const r=e[2*(t+s-1)],o=e[2*(t+s-1)+1];n+=(e[2*(t+s)]-r)*(e[2*(t+s)+1]+o)}return o?n>0:n<0},x=({coords:e,lengths:t},r)=>{const o=[];for(let n=0,s=0;n<t.length;s+=t[n],n+=1){const c=s,a=[];for(;n<t.length-1&&y(e,s+t[n],t[n+1],r);n+=1,s+=t[n])a.push(s+t[n]-c);const f=e.slice(2*c,2*(s+t[n])),h=Object(_core_libs_earcut_earcut_js__WEBPACK_IMPORTED_MODULE_6__["earcut"])(f,a,2);for(const e of h)o.push(e+c)}return o};class g{constructor(e,t,r,o=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=o}static fromRect({x:e,y:t,width:r,height:o}){const n=e,s=t,c=n+r,i=s+o;return g.fromScreenExtent({xmin:n,ymin:s,xmax:c,ymax:i})}static fromPath(e){const t=Object(_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__["convertFromNestedArray"])(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_3__["default"],e.path,!1,!1),r=t.coords,s=new Uint32Array(x(t,!0)),c=new Uint32Array(r.length/2);for(let o=0;o<c.length;o++)c[o]=Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(Math.floor(r[2*o]),Math.floor(r[2*o+1]));return new g({geometry:c},s,4)}static fromGeometry(e,t){const o=t.geometry.type;switch(o){case"polygon":return g.fromPolygon(e,t.geometry);case"extent":return g.fromMapExtent(e,t.geometry);default:return m.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mapview-bad-type",`Unable to create a mesh from type ${o}`,t)),g.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=Object(_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__["convertFromPolygon"])(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_3__["default"],t,!1,!1),n=r.coords,i=new Uint32Array(x(r,!1)),f=new Uint32Array(n.length/2),m=Object(_chunks_vec2f64_js__WEBPACK_IMPORTED_MODULE_5__["a"])(),u=Object(_chunks_vec2f64_js__WEBPACK_IMPORTED_MODULE_5__["a"])();for(let o=0;o<f.length;o++)Object(_chunks_vec2_js__WEBPACK_IMPORTED_MODULE_7__["s"])(m,n[2*o],n[2*o+1]),e.toScreen(u,m),f[o]=Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(Math.floor(u[0]),Math.floor(u[1]));return new g({geometry:f},i,4,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:o}){const n={geometry:new Uint32Array([Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(e,r),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(t,r),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(e,o),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(e,o),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(t,r),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(t,o)])},s=new Uint32Array([0,1,2,3,4,5]);return new g(n,s,4)}static fromMapExtent(e,t){const[r,o]=e.toScreen([0,0],[t.xmin,t.ymin]),[n,s]=e.toScreen([0,0],[t.xmax,t.ymax]),c={geometry:new Uint32Array([Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(r,o),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(n,o),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(r,s),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(r,s),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(n,o),Object(_number_js__WEBPACK_IMPORTED_MODULE_9__["i1616to32"])(n,s)])},i=new Uint32Array([0,1,2,3,4,5]);return new g(c,i,4)}destroy(){Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isSome"])(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose();for(const t in this._cache.vertexBuffers)Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isSome"])(this._cache.vertexBuffers[t])&&this._cache.vertexBuffers[t].dispose()}get elementType(){return u(this.indices)}getIndexBuffer(e,t=35044){return this._cache.indexBuffer||(this._cache.indexBuffer=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_8__["default"].createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=35044){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,o)=>({...r,[o]:_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_8__["default"].createVertex(e,t,this.vertices[o])})),{})),this._cache.vertexBuffers}}/* harmony default export */ __webpack_exports__["default"] = (g);


/***/ }),

/***/ "mgI5":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "wSAH");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/maybe.js */ "srIe");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enums.js */ "yE7X");
/* harmony import */ var _Container_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Container.js */ "AMBt");
/* harmony import */ var _brushes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../brushes.js */ "Oxob");
/* harmony import */ var _ClippingInfo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ClippingInfo.js */ "I/na");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class o extends _Container_js__WEBPACK_IMPORTED_MODULE_3__["Container"]{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach((r=>r.clips=e)),this._updateClippingInfo()}doRender(e){const r=this.createRenderParams(e),{painter:t,globalOpacity:i,profiler:n,drawPhase:o}=r,a=o===_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].LABEL?1:i*this.computedOpacity;n.recordContainerStart(this.name),t.beforeRenderLayer(r,this._clippingInfos?255:0,a),this.updateTransforms(e.state),this.renderChildren(r),t.compositeLayer(r,a),n.recordContainerEnd()}renderChildren(r){Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__["isNone"])(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(r.painter));for(const e of this.children)e.beforeRender(r);for(const e of this._renderPasses)try{e.render(r)}catch(s){}for(const e of this.children)e.afterRender(r)}createRenderParams(e){return{...e,requireFBO:this.requiresDedicatedFBO}}prepareRenderPasses(e){return[e.registerRenderPass({name:"clip",brushes:[_brushes_js__WEBPACK_IMPORTED_MODULE_4__["brushes"].clip],target:()=>this._clippingInfos,drawPhase:_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].MAP|_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].LABEL|_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].LABEL_ALPHA|_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].DEBUG|_enums_js__WEBPACK_IMPORTED_MODULE_2__["WGLDrawPhase"].HIGHLIGHT})]}updateTransforms(e){for(const r of this.children)r.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){if(Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__["isSome"])(this._clippingInfos)&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null),!this.stage)return;const e=this._clips;Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__["isSome"])(e)&&e.length&&(this._clippingInfos=e.items.map((e=>_ClippingInfo_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromClipArea(this.stage,e)))),this.requestRender()}}/* harmony default export */ __webpack_exports__["default"] = (o);


/***/ }),

/***/ "vpBa":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js ***!
  \*************************************************************************************/
/*! exports provided: resolveIncludes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveIncludes", function() { return s; });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/has.js */ "wSAH");
/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../core/mathUtils.js */ "OKTS");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _webgl_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../webgl/checkWebGLError.js */ "GVa1");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../webgl/FramebufferObject.js */ "0meK");
/* harmony import */ var _webgl_ShaderCompiler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../webgl/ShaderCompiler.js */ "SfCL");
/* harmony import */ var _shaderRepository_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./shaderRepository.js */ "+0fo");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function o(r){let o=_shaderRepository_js__WEBPACK_IMPORTED_MODULE_6__["default"];return r.split("/").forEach((r=>{o&&(o=o[r])})),o}const t=new _webgl_ShaderCompiler_js__WEBPACK_IMPORTED_MODULE_5__["default"](o);function s(r){return t.resolveIncludes(r)}


/***/ }),

/***/ "vrr1":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/rasterUtils.js ***!
  \**************************************************************/
/*! exports provided: createColormapTexture, createFrameBuffer, createRasterTexture, createTransformTexture, getBasicGridUniforms, getColormapUniforms, getCommonUniforms, getShadedReliefUniforms, getStretchUniforms, getUniformLocationInfos, setTextures, setUniforms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createColormapTexture", function() { return r; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFrameBuffer", function() { return a; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRasterTexture", function() { return n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTransformTexture", function() { return i; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBasicGridUniforms", function() { return u; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getColormapUniforms", function() { return s; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCommonUniforms", function() { return o; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getShadedReliefUniforms", function() { return l; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStretchUniforms", function() { return f; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUniformLocationInfos", function() { return c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTextures", function() { return p; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUniforms", function() { return m; });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/has.js */ "wSAH");
/* harmony import */ var _chunks_builtins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chunks/builtins.js */ "n4uK");
/* harmony import */ var _checkWebGLError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./checkWebGLError.js */ "GVa1");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Texture.js */ "of9L");
/* harmony import */ var _FramebufferObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FramebufferObject.js */ "0meK");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function n(t,n,a="nearest",i=!1){var r;const o=!(i&&"u8"===n.pixelType),s=o?5126:5121,u=null==n.pixels||0===n.pixels.length?null:o?n.getAsRGBAFloat():n.getAsRGBA(),f=null==(r=t.capabilities.textureFloat)?void 0:r.textureFloatLinear,l={width:n.width,height:n.height,target:3553,pixelFormat:6408,internalFormat:t.isWebGL2Context()?34836:6408,samplingMode:!f||"bilinear"!==a&&"cubic"!==a?9728:9729,dataType:s,wrapMode:33071,flipped:!1};return new _Texture_js__WEBPACK_IMPORTED_MODULE_3__["default"](t,l,u)}function a(n,a,i,r){const o=new _Texture_js__WEBPACK_IMPORTED_MODULE_3__["default"](n,{width:a,height:i,target:3553,pixelFormat:6408,internalFormat:6408,samplingMode:9728,dataType:r?5121:5126,wrapMode:33071,flipped:!1});return new _FramebufferObject_js__WEBPACK_IMPORTED_MODULE_4__["default"](n,{colorTarget:0,depthStencilTarget:3,width:a,height:i},o)}function i(t,n){const a=4*n.size[0],i=n.size[1],r={width:a,height:i,target:3553,pixelFormat:6408,internalFormat:t.isWebGL2Context()?34836:6408,dataType:5126,samplingMode:9728,wrapMode:33071,flipped:!1},o=new Float32Array(a*i*4);let s=0;for(let e=0;e<n.coefficients.length;e++)o[s++]=n.coefficients[e],e%3==2&&(o[s++]=1);return new _Texture_js__WEBPACK_IMPORTED_MODULE_3__["default"](t,r,o)}function r(t,n){const a={width:n.length/4,height:1,target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,flipped:!1};return new _Texture_js__WEBPACK_IMPORTED_MODULE_3__["default"](t,a,n)}function o(e,t,n,a=1,i=!0,r=!1){return{u_flipY:i,u_isFloatTexture:r,u_applyTransform:!!e,u_opacity:a,u_transformSpacing:e?e.spacing:null,u_transformGridSize:e?e.size:null,u_targetImageSize:t,u_srcImageSize:n}}function s(e,t){return{u_colormapOffset:t||0,u_colormapMaxIndex:e?e.length/4-1:null}}function u(e,t){return{u_scale:e,u_offset:t}}function f(e){return{u_bandCount:e.bandCount,u_minOutput:e.outMin,u_maxOutput:e.outMax,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function l(e){return{u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}function c(e,t){const n=e.gl,a=t.glName,i=n.getProgramParameter(a,n.ACTIVE_UNIFORMS),r=new Map;let o;for(let s=0;s<i;s++)o=n.getActiveUniform(a,s),o&&r.set(o.name,{location:n.getUniformLocation(a,o.name),info:o});return r}function m(e,t,n){Object.keys(n).forEach((a=>{const i=t.get(a)||t.get(a+"[0]");i&&g(e,a,n[a],i)}))}function p(e,t,n,a){n.length===a.length&&(a.some((e=>null==e))||n.some((e=>null==e))||n.forEach(((n,i)=>{t.setUniform1i(n,i),e.bindTexture(a[i],i)})))}function g(e,t,n,a){if(null===a||null==n)return!1;const{info:i}=a;switch(i.type){case 5126:i.size>1?e.setUniform1fv(t,n):e.setUniform1f(t,n);break;case 35664:e.setUniform2fv(t,n);break;case 35665:e.setUniform3fv(t,n);break;case 35666:e.setUniform4fv(t,n);break;case 35675:e.setUniformMatrix3fv(t,n);break;case 35676:e.setUniformMatrix4fv(t,n);break;case 5124:i.size>1?e.setUniform1iv(t,n):e.setUniform1i(t,n);break;case 35670:e.setUniform1i(t,n?1:0);break;case 35667:case 35671:e.setUniform2iv(t,n);break;case 35668:case 35672:e.setUniform3iv(t,n);break;case 35669:case 35673:e.setUniform4iv(t,n);break;default:return!1}return!0}


/***/ }),

/***/ "zcBC":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js ***!
  \************************************************************************************/
/*! exports provided: WGLBrushVTLFill */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WGLBrushVTLFill", function() { return s; });
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "srIe");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ "jIHu");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/mat3f32.js */ "jHF5");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../number.js */ "0RS7");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enums.js */ "yE7X");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WGLBrush.js */ "8HmA");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const o=1/65536;class s extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_5__["default"]{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1},this._patternMatrix=Object(_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_2__["c"])()}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:a,renderPass:l,styleLayerUID:o}=t,s=t.styleLayer,f=s.getPaintValue("fill-pattern",i),u=void 0!==f,d=!u&&s.getPaintValue("fill-antialias",i);let p=!0,m=1;if(!u){const t=s.getPaintProperty("fill-color"),e=s.getPaintProperty("fill-opacity");if(!(null!=t&&t.isDataDriven||null!=e&&e.isDataDriven)){const t=s.getPaintValue("fill-color",i);m=s.getPaintValue("fill-opacity",i)*t[3],m>=1&&(p=!1)}}if(p&&"opaque"===l)return;let c;a===_enums_js__WEBPACK_IMPORTED_MODULE_4__["WGLDrawPhase"].HITTEST&&(c=Object(_number_js__WEBPACK_IMPORTED_MODULE_3__["u32to4Xu8"])(o+1));const _=s.getPaintValue("fill-translate",i),y=s.getPaintValue("fill-translate-anchor",i);(p||"translucent"!==l)&&this._drawFill(t,o,s,e,_,y,f,c);const M=!s.hasDataDrivenOutlineColor&&s.outlineUsesFillColor&&m<1;d&&"opaque"!==l&&!M&&this._drawOutline(t,o,s,e,_,y,c)}_drawFill(a,r,l,s,f,u,d,p){const{context:m,displayLevel:c,state:_,drawPhase:y,painter:M,pixelRatio:g,spriteMosaic:v}=a,x=l.fillMaterial,P=M.vectorTilesMaterialManager,h=void 0!==d,U=g>_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_HIGH_RES_CUTOFF"]?2:1;let T;const E=y===_enums_js__WEBPACK_IMPORTED_MODULE_4__["WGLDrawPhase"].HITTEST,b=this._fillProgramOptions;b.id=E,b.pattern=h;const w=P.getMaterialProgram(m,x,b);if(m.bindProgram(w),h){if(T=v.getMosaicItemPosition(d,!0),!T)return void m.bindProgram();w.setUniform2f("u_pattern_tl",T.tl[0],T.tl[1]),w.setUniform2f("u_pattern_br",T.br[0],T.br[1]),w.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_SPRITES"]),v.bind(m,9729,T.page,_definitions_js__WEBPACK_IMPORTED_MODULE_1__["VTL_TEXTURE_BINDING_UNIT_SPRITES"])}w.setUniformMatrix3fv("u_displayMat3",1===u?_.displayMat3:_.displayViewMat3),w.setUniform2fv("u_fillTranslation",f),w.setUniform1f("u_depth",l.z+o),E&&w.setUniform4fv("u_id",p);let D=-1;for(const e of s){if(!e.layerData.has(r))continue;e.key.level!==D&&(D=e.key.level,x.setDataUniforms(w,c,l,D));const i=e.layerData.get(r);i.prepareForRendering(m);const a=i.fillVertexArrayObject;if(!Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(a)){if(m.bindVAO(a),w.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),h){const t=Math.max(2**(Math.round(c)-e.key.level),1),i=e.coordRange[0]/(U*e.size[0]*t),a=1/(T.size[0]*i),r=1/(T.size[1]*i);this._patternMatrix[0]=a,this._patternMatrix[4]=r,w.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}m.setStencilFunction(514,e.stencilRef,255),m.drawElements(4,i.fillIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart),e.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,a,r,l,s,f){const{context:u,displayLevel:d,state:p,drawPhase:m,painter:c,pixelRatio:_}=e,y=a.outlineMaterial,M=c.vectorTilesMaterialManager,g=.75/_,v=m===_enums_js__WEBPACK_IMPORTED_MODULE_4__["WGLDrawPhase"].HITTEST,x=this._outlineProgramOptions;x.id=v;const P=M.getMaterialProgram(u,y,x);u.bindProgram(P),P.setUniformMatrix3fv("u_displayMat3",1===s?p.displayMat3:p.displayViewMat3),P.setUniform2fv("u_fillTranslation",l),P.setUniform1f("u_depth",a.z+o),P.setUniform1f("u_outline_width",g),v&&P.setUniform4fv("u_id",f);let h=-1;for(const n of r){if(!n.layerData.has(i))continue;n.key.level!==h&&(h=n.key.level,y.setDataUniforms(P,d,a,h));const e=n.layerData.get(i);e.prepareForRendering(u);const r=e.outlineVertexArrayObject;Object(_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__["isNone"])(r)||(u.bindVAO(r),P.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),u.setStencilFunction(514,n.stencilRef,255),u.drawElements(4,e.outlineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),n.triangleCount+=e.outlineIndexCount/3)}}}


/***/ })

}]);
//# sourceMappingURL=default~layers-BaseDynamicLayerView2D-js~layers-GeoRSSLayerView2D-js~layers-GraphicsLayerView2D-js~l~70af773e.js.map