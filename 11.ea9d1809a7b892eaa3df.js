(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"5LEI":function(e,t,s){"use strict";s.d(t,"a",function(){return o}),s("wSAH");var i=s("HJJS"),r=s("rlSK"),a=s("jHF5"),n=s("fEsP");class o extends n.a{constructor(e,t,s,i=s){super(),this.triangleCountReportedInDebug=0,this.transforms={dvs:Object(a.b)(),tileMat3:Object(a.b)()},this.triangleCount=0,this.key=new r.a(e),this.bounds=t,this.size=s,this.coordRange=i}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}get coords(){return this._coords}get bounds(){return this._bounds}set bounds(e){this._coords=[e[0],e[3]],this._bounds=e}setTransform(e,t){const s=t/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[a,n]=e.toScreenNoRotation([0,0],this.coords),o=this.size[0]/this.coordRange[0]*s,l=this.size[1]/this.coordRange[1]*s;Object(i.i)(r,o,0,0,0,l,0,a,n,1),Object(i.f)(this.transforms.dvs,e.displayViewMat3,r)}}},KFVX:function(e,t,s){"use strict";s.d(t,"a",function(){return a});var i=s("jIHu"),r=s("5LEI");class a extends r.a{constructor(e,t){super(e,t,[i.E,i.E])}}},Vh9r:function(e,t,s){"use strict";var i=s("pO5D"),r=s("wSAH"),a=s("srIe"),n=(s("6S2I"),s("zqDF"),s("WbKI")),o=s("04ZG"),l=(s("4EHJ"),s("ju1D"),s("9AIY"),s("9MzC")),d=s("/CmD"),h=s("f4Nx"),c=s("WZb1"),u=s("Mu3I"),f=s("Ehki"),p=s("qatw"),m=s("qRWG"),y=s("kYAx"),g=s("psH3"),x=s("kJYu"),_=s("jIHu"),b=s("sq/B"),v=s("PNY3"),O=s("KLE9"),w=s("9w8m");function D(e,t,s){if(Array.isArray(e)){const i=e[0];if(i>t){const s=Object(w.d)(i,t);e[0]=i+s*(-2*t)}else if(i<s){const t=Object(w.d)(i,s);e[0]=i+t*(-2*s)}}else{const i=e.x;if(i>t){const s=Object(w.d)(i,t);e.x+=s*(-2*t)}else if(i<s){const t=Object(w.d)(i,s);e.x+=t*(-2*s)}}return e}function j(e,t){const[s,i]=t.valid,r=2*i;let a,n=0;return e>i?(a=Math.ceil(Math.abs(e-i)/r),e-=a*r,n=a):e<s&&(a=Math.ceil(Math.abs(e-s)/r),e+=a*r,n=-a),{x:e,frameId:n}}function T(e,t){const{xmin:s,ymin:i,xmax:r,ymax:a}=t;return B(e,s,i)&&B(e,s,a)&&B(e,r,a)&&B(e,r,i)}function B(e,t,s){return t>=e.xmin&&t<=e.xmax&&s>=e.ymin&&s<=e.ymax}class F{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let a=0;a<i;a++){const e=s[a];if(e&&e.length>=this.minPts){const t=[];for(const s of e)t.push([s[0]+r,s[1]]);s.push(t)}}return this.closed?e.rings=s:e.paths=s,e}}const C=Object(y.e)();var I=s("t7mB"),S=s("ZxoT"),R=s("HsO1"),z=s("yN2G");function L(e,t,s){if(!e.allDirty)if(null!=e.from&&null!=e.count){const i=Math.min(e.from,t),r=Math.max(e.from+e.count,t+s)-i;e.from=i,e.count=r}else e.from=t,e.count=s}var M=class{constructor(){this._dirties=Object(z.e)(()=>({indices:{from:null,count:null,allDirty:!1}}),()=>({vertices:{from:null,count:null,allDirty:!1}}))}hasDirty(){for(const e of this._dirties)if(null!==e.data.indices.count||e.data.indices.allDirty)return!0;return!1}markAllClean(){for(const e of this._dirties){e.data.indices.from=null,e.data.indices.count=null,e.data.indices.allDirty=!1;for(const t in e.buffers)e.buffers[t].data.vertices.from=null,e.buffers[t].data.vertices.count=null,e.buffers[t].data.vertices.allDirty=!1}}markAllDirty(){for(const e of this._dirties){e.data.indices.allDirty=!0;for(const t in e.buffers)e.buffers[t].data.vertices.allDirty=!0}}forEach(e){for(let t=0;t<this._dirties.length;++t){const s=this._dirties[t],i={};for(const e in s.buffers){const t=s.buffers[e].data.vertices;(t.allDirty||null!=t.from&&null!=t.count&&t.count>0)&&(i[e]=t)}const r=s.data.indices;let a;a=r.allDirty||null!=r.from&&null!=r.count&&r.count>0?{indices:r,vertices:i}:{indices:null,vertices:i},(a.indices||Object.keys(a).length>0)&&e(a,t)}}markDirtyIndices(e,t,s){L(this._dirties[e].data.indices,t,s)}markDirtyVertices(e,t,s,i){L(this._dirties[e].buffers[t].data.vertices,s,i)}};class A{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,a=this._parent._freeHead;for(;s&&!i;){const n=null!==a?a.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=n?(s=!1,i=!0):null!==a?(r=a,a=a.next):s=!1}return[r,a]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class V{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new A(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;V._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const e=r.from,t=r.count;V._fuse(r,i),V._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const e=s.from,t=s.count;V._fuse(s,r),V._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}const G=["FILL","LINE","MARKER","TEXT","LABEL"];class k{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new V(i):null,idxFreeList:i?new V(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:i?Object(z.b)(i,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const s=function(e){const t=e.getStrides(),s={};for(let i=0;i<t.length;i++)s[G[i]]=t[i];return s}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],a=e.tileDisplayData.displayObjects;for(const o of a)for(const e of o.displayRecords)i[e.geometryType]=Math.max(i[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const n=new k(s,e.tileDisplayData.displayList,t,null);for(let o=0;o<e.tileBufferData.geometries.length;++o){const t=i[o],s=r[o],a=e.tileBufferData.geometries[o],l=n._storageFor(G[o]),d=e.tileBufferData.geometries[o].indexBuffer;let h;l.indexBuffer=d,l.idxFreeList=new V(d.length),l.idxFreeList.allocate(s);for(const i in a.vertexBuffer){const t=e.tileBufferData.geometries[o].vertexBuffer[i];l.vertexBuffers[i].data=t.data,l.vertexBuffers[i].stride=t.stride;const s=Object(z.p)(t.stride),r=t.data.length*s/t.stride;h||(h=r)}l.vtxFreeList=new V(h),l.vtxFreeList.allocate(t)}return n}delete(e){const t=G[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const a=G[e.geometryType];let n,o;e.meshData=null,void 0===e.vertexFrom?(o=t.vertexCount,n=this._allocateVertices(a,o)):t.vertexCount>e.vertexCount?(this._freeVertices(a,e.vertexFrom,e.vertexCount),o=t.vertexCount,n=this._allocateVertices(a,o)):t.vertexCount===e.vertexCount?(n=e.vertexFrom,o=e.vertexCount):(this._freeVertices(a,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),n=e.vertexFrom,o=t.vertexCount);let l,d,h,c=!0;if(void 0===e.indexFrom?(l=r,h=t.indexCount,d=this._allocateIndices(a,h)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom,e.indexCount),h=t.indexCount,d=this._allocateIndices(a,h)):t.indexCount===e.indexCount?(c=!1,d=e.indexFrom,h=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),d=e.indexFrom,h=t.indexCount),-1!==n&&-1!==d){const r=this._storageFor(a);if(Object(z.d)(n,d,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=n,e.indexFrom=d,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==n&&this._freeVertices(a,n,o),-1!==d&&this._freeIndices(a,d,h),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=G[e.geometryType],a=this._allocateVertices(r,e.vertexCount);if(-1===a)return this._freeVertices(r,a,e.vertexCount),!1;const n=this._allocateIndices(r,e.indexCount);if(-1===n)return this._freeVertices(r,a,e.vertexCount),this._freeIndices(r,n,e.indexCount),!1;const o=this._storageFor(r);if(Object(z.d)(a,n,o.vertexBuffers,o.indexBuffer,e,s,i),e.vertexFrom=a,e.indexFrom=n,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,a,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var U=k,P=(s("OKTS"),s("n4uK"),s("fOQB")),E=s("D6bk");s("0meK");var K=s("KFVX");class q extends K.a{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new M}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new M,this._dispRecStore=U.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new class{constructor(e){this.geometryMap=Object(z.e)(()=>({indexBuffer:P.a.createIndex(e,35044),vao:null}),(t,s)=>({vertexBuffer:P.a.createVertex(e,z.a[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(e,s,i,r,a){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new E.a(e,i,s,r,t.data.indexBuffer)}e.bindVAO(t.data.vao),e.drawElements(4,a,5125,Uint32Array.BYTES_PER_ELEMENT*r),e.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((t,s)=>{this._upload(t,s,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const a=this.geometryMap[t];if(!a)return;const n=e.geometries[t].vertexBuffer[s];if(!n)return;const o=n.stride,l=n.data.buffer;a.buffers[s]&&l.byteLength>0&&(null!=i&&null!=r?a.buffers[s].data.vertexBuffer.setSubData(l,i*o,i*o,(i+r)*o):a.buffers[s].data.vertexBuffer.setData(l))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const a=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&a.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(a,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(a))}}(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=U.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const e=this._data.tileDisplayData.displayObjectRegistry.get(r);if(e){this._data.tileDisplayData.displayList.removeFromList(e.displayRecords);for(const s of e.displayRecords)this._dispRecStore.delete(s);this._data.tileDisplayData.displayObjectRegistry.delete(r);const t=this._data.tileDisplayData.displayObjects.indexOf(e);this._data.tileDisplayData.displayObjects.splice(t,1)}}for(const r of s){let s,i=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(i){const e=i.displayRecords;i.set(r),i.displayRecords=e;const t=i.displayRecords.length;for(let s=0;s<t;++s){const e=i.displayRecords[s],t=r.displayRecords[s];(s>=r.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<r.displayRecords.length&&(i.displayRecords[s]=void 0))}i.displayRecords.length=r.displayRecords.length}else{let e;i=r.copy(),i.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,i);const t=this._data.tileDisplayData.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=this._data.tileDisplayData.displayObjectRegistry.get(i.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,i):(t.push(i),e=t.length)):(t.push(i),e=t.length)}else t.unshift(i),e=0;else t.push(i),e=t.length;if(s){const i=r.displayRecords.length>0?1:0;let a=0;for(let r=e-1;r>=0&&a<i;--r)for(let e=t[r].displayRecords.length-1;e>=0&&a<i;--e){const i=t[r].displayRecords[e],n=this._data.tileDisplayData.displayList.getDPInfoType();s[n]||(s[n]=i,++a)}}}const a=r.displayRecords.length;for(let n=0;n<a;++n){const a=r.displayRecords[n];let o=i.displayRecords[n];o?(o.meshData=a.meshData,o.materialKey=a.materialKey):(o=a.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,i.displayRecords[n]=o);const l=a.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),h=e.addOrUpdate.tileBufferData.geometries[l],c=h.vertexBuffer,u=h.indexBuffer;let f;s&&(f=s[d]?this._data.tileDisplayData.displayList.splitAfter(s[d]):-1),t=this._dispRecStore.setMeshData(o,a,c,u,f)&&t,s&&null!=o.indexFrom&&null!=o.indexFrom&&(s[d]=o)}}return t}}var H=s("n21L"),N=class{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}};class Z{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new Z;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new Z;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:Object(z.c)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var X=Z,Q=class{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}};class J{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new J(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Q;for(const r in t){const s=t[r].stride,a=t[r].data,n=[],o=Object(z.p)(s);for(let t=0;t<s*e.vertexCount/o;++t)n[t]=a[t+s*e.vertexFrom/o];i.vertexData.set(r,n)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Q;for(const s in e){const t=e[s].stride,i=e[s].data,r=[],a=Object(z.p)(t);for(let e=0;e<t*this.vertexCount/a;++e)r[e]=i[e+t*this.vertexFrom/a];this.meshData.vertexData.set(s,r)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const r in t){const s=t[r].stride,i=this.meshData.vertexData.get(r),a=t[r].data,n=Object(z.p)(s);for(let t=0;t<s*this.meshData.vertexCount/n;++t)a[t+s*e/n]=i[t]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const a of e)a.writeMeshDataToBuffers(i,t,r,s),i+=a.vertexCount,r+=a.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new J(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}var Y=J;function W(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}class ${constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new $(this.id);return e.set(this),e}clone(){const e=new $(this.id);return e.displayRecords=this.displayRecords.map(e=>e.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),W(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new $(t);return s.displayRecords=function(e,t,s){const i=e.readInt32(),r=new Array(i);for(let a=0;a<r.length;a++)r[a]=t.deserialize(e,s);return r}(e,Y,{id:t}),s}}var ee=$,te=s("yE7X");function se(e,t,s,...i){t<e.length?e.splice(t,s,...i):e.push(...i)}const ie=new Map;ie.set(te.c.MAP,[te.d.FILL,te.d.LINE,te.d.MARKER,te.d.TEXT]),ie.set(te.c.LABEL,[te.d.LABEL]),ie.set(te.c.LABEL_ALPHA,[te.d.LABEL]);class re{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const i=e.painter.getGeometryBrush(r.geometryType),a=t.getGeometry(r.geometryType),n={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,draw:(e,t,s)=>{a.draw(e,t,s,r.indexFrom,r.indexCount)}};i.prepareState(e,t),i.drawGeometry(e,t,n,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new re;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new ae;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=this._getDisplayList(e.symbolLevel,e.zOrder),i=null!=t?t:s.length-1,r=i>=0&&i<s.length?s[i]:null;if(null!==r&&r.materialKey===e.materialKey&&r.indexFrom+r.indexCount===e.indexFrom&&r.geometryType===e.geometryType)r.indexCount+=e.indexCount;else{const t=new ae;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,se(s,i+1,0,t)}}_removeFromList(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length;let i;for(let r=0;r<s;++r){const s=t[r];if(e.indexFrom+e.indexCount>s.indexFrom&&e.indexFrom<s.indexFrom+s.indexCount&&s.geometryType===e.geometryType){i=r;break}}if(void 0!==i){const s=t[i];if(e.indexFrom===s.indexFrom)return s.indexCount-=e.indexCount,s.indexFrom+=e.indexCount,0===s.indexCount&&se(t,i,1),i-1;if(e.indexFrom+e.indexCount===s.indexFrom+s.indexCount)return s.indexCount-=e.indexCount,0===s.indexCount?(se(t,i,1),i-1):i;{const r=s.indexFrom,a=e.indexFrom-s.indexFrom,n=e.indexCount,o=s.indexFrom+s.indexCount-(e.indexFrom+e.indexCount);s.indexCount=a;const l=new ae;return l.geometryType=s.geometryType,l.materialKey=s.materialKey,l.indexFrom=r+a+n,l.indexCount=o,se(t,i+1,0,l),i}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let n=0;n<i;n++)if(this.symbolLevels[n].symbolLevel===e){s=this.symbolLevels[n];break}let r;s||(s=new le,s.symbolLevel=e,this.symbolLevels.push(s));const a=s.zLevels.length;for(let n=0;n<a;n++)if(s.zLevels[n].zLevel===t){r=s.zLevels[n];break}return r||(r=new oe,r.geometryDPInfo=new ne,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class ae{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new ae;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class ne{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new ne;return e.fill=this.fill&&this.fill.map(e=>e.clone()),e.line=this.line&&this.line.map(e=>e.clone()),e.marker=this.marker&&this.marker.map(e=>e.clone()),e.text=this.text&&this.text.map(e=>e.clone()),e.label=this.label&&this.label.map(e=>e.clone()),e.unified=this.unified&&this.unified.map(e=>e.clone()),e}}class oe{constructor(){this.geometryDPInfo=new ne}clone(){const e=new oe;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class le{constructor(){this.zLevels=[]}clone(){const e=new le;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}var de=re;class he{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new de;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new he;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(e=>e.clone())),e}serialize(e){return W(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const t=ee.deserialize(e);s[r]=t,i.set(t.id,t)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new he;return t._deserializeObjects(e),t}}var ce=he;class ue{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=Object(z.c)(e.data,e.stride);return new ue(t,e.stride)}static fromVertexVector(e){const t=Object(z.c)(e.data.buffer(),e.stride);return new ue(t,e.stride)}}class fe{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=ue.decode(e.namedBuffers[r]);return new fe(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=Object(z.c)(e.vertices,e.stride),r={geometry:new ue(i,e.stride)};return new fe(t,s,r)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=ue.fromVertexVector(e.namedVectors[r]);return new fe(t,s,i)}}var pe=s("PeSW");class me{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.data.length/(this.stride/4);return e!==(0|e)&&console.debug("Corrupted stride"),e}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class ye{constructor(e,t,s=!1){this.geometryType=e,this.indexVector=new pe.a(Uint32Array,6*t),this.namedVectors={};const i=Object(z.l)(e,s);for(const r in i){const e=i[r];let s;switch(e%4){case 0:case 2:s=new pe.a(Uint32Array,e*t);break;case 1:case 3:s=new pe.a(Uint8Array,e*t)}this.namedVectors[r]=new me(s,e)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const e=this.namedVectors[r];i[r]={},e.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=fe.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const ge=new N,xe=new N;function _e(e,t){const s={};for(const i in e){const r={data:Object(z.b)(t,e[i]),stride:e[i]};s[i]=r}return s}class be{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){ge.reset();const e=function(e){const t=[[],[],[],[],[]],s=e;for(const i of s)for(const e of i.displayRecords)t[e.geometryType].push(e);return t}(this.tileDisplayData.displayObjects);for(const i of e)for(const e of i)e&&ge.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new X;for(let i=0;i<t;++i){s.geometries[i].indexBuffer=new Uint32Array(Math.round(1.5*ge.indicesFor(i)));const e=[];for(const s in this.tileBufferData.geometries[i].vertexBuffer)e.push(this.tileBufferData.geometries[i].vertexBuffer[s].stride);const t=be._computeVertexAlignment(e),r=Math.round(1.5*ge.verticesFor(i)),a=be._align(r,t);for(const n in this.tileBufferData.geometries[i].vertexBuffer){const e=this.tileBufferData.geometries[i].vertexBuffer[n].stride;s.geometries[i].vertexBuffer[n]={stride:e,data:Object(z.b)(a,e)}}}xe.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const t=e[i];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(xe.verticesFor(i),s.geometries[i].vertexBuffer,xe.indicesFor(i),s.geometries[i].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[i].vertexBuffer,r=this.tileBufferData.geometries[i].indexBuffer,a=s.geometries[i].vertexBuffer,n=s.geometries[i].indexBuffer,o=xe.verticesFor(i),l=xe.indicesFor(i);Object(z.d)(o,l,a,n,e,t,r),e.vertexFrom=o,e.indexFrom=l}xe.needMore(i,e.vertexCount,e.indexCount)}}for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new be;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let s=0;for(let i=0;i<t;i++)s=Math.max(s,e[i].displayRecords.length);return 2*(12*e.length+e.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new pe.a(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e){const t=[],s={},i=new Map;return Object(z.g)(r=>{const n=e.data[r];if(Object(a.i)(n)){const e=H.a.from(n.records).getCursor();for(;e.next();){const s=e.id,a=e.materialKey,n=e.insertAfter,o=e.indexFrom,l=e.indexCount,d=e.vertexFrom,h=e.vertexCount;if(!i.has(s)){const e=new ee(s);e.insertAfter=n,i.set(s,e),t.push(e)}const c=i.get(s),u=new Y(s,r,a);u.indexFrom=o,u.indexCount=l,u.vertexFrom=d,u.vertexCount=h,c.displayRecords.push(u)}s[r]=fe.fromVertexData(n,r)}else s[r]=new ye(r,0).intoBuffers()}),t.sort((e,t)=>e.id-t.id),be.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new be,s=new ce,i=new X;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=t.indexBuffer,i.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new be;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new be;s.tileDisplayData=new ce,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],a=[[],[],[],[],[]];for(const l of e)for(const e of l.displayRecords)a[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const n=new X,o=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let l=0;l<5;l++){const e=new Uint32Array(r[l]),t=_e(o[l],i[l]);Y.writeAllMeshDataToBuffers(a[l],t,e),n.geometries[l]={indexBuffer:e,vertexBuffer:t}}return s.tileBufferData=n,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var ve=s("2AbE"),Oe=s("acOm"),we=s("M08Z"),De=s("owVx"),je=s("Bcjy"),Te=s("Dw8i"),Be=s("J3nV"),Fe=s("Swtj"),Ce=s("ZlUD"),Ie=s("8NDJ"),Se=s("Q0oN");class Re extends Se.a{constructor(e,t){super(e,t,null)}static from(e){const t=Ie.a.createInstance(),s=[],i=e.filter(e=>!!e.geometry);for(const r of i){const e=Object(p.c)(r.geometry);Object(Ce.e)(s,[r],e,!1,!1,"uid")}return new Re(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Re(this.instance,this._features);return this.copyInto(e),e}}var ze=s("w5u1"),Le=s("IXLn"),Me=s("+NQI"),Ae=s("gEht"),Ve=s("qNUd"),Ge=s("kB+0"),ke=s("V+VG"),Ue=s("gVKr"),Pe=s("AIxD");const Ee=new Ue.a,Ke=new Ue.a,qe="esriGeometryPolyline";function He(e){e.coords.length=0,e.lengths.length=0}class Ne{constructor(){this.bounds=Object(y.e)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,s,i,r,a){let n;return 0===Ne._pool.length?n=new Ne:(n=Ne._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r,a),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if(Object(p.g)(e.geometry)){const s=e.symbol;if(Object(a.h)(s))return null;if(Object(we.j)(s.type)||Object(we.l)(s.type)){const s=Object(ke.a)(e.geometry);return Object(Pe.b)(t,{},{x:s[0],y:s[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r,a){e&&this.set(e,t,s,i,r,a)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r,a){this.graphic=e,this.geometry=s,this.symbolResource=t,this.updateBounds(i,r,a)}updateBounds(e,t,s){Object(we.c)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s)}getGeometryQuantized(e){if(Object(p.g)(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return Object(Pe.a)(e,{paths:[[t[0][0],t[0][1]]]})}else if(Object(p.h)(this.geometry))return He(Ee),He(Ke),Object(Ce.h)(Ee,this.geometry),Object(Ce.q)(Ke,Ee,this.geometry.hasZ,this.geometry.hasM,qe,e.scale[0]),Object(Ce.u)(Ee,Ke,this.geometry.hasZ,this.geometry.hasM,qe,e),Object(Ce.o)(Ee,this.geometry.hasZ,this.geometry.hasM);return Object(Pe.a)(e,this.geometry)}}Ne._pool=[],Ne._set=new Set;var Ze=Ne;const Xe={minX:0,minY:0,maxX:0,maxY:0},Qe=Object(y.e)(),Je=[],Ye=1e-5;function We(e,t,s,i,r){return Xe.minX=t,Xe.minY=s,Xe.maxX=i,Xe.maxY=r,e.search(Xe)}var $e=s("pdg3");const et=e=>{let t=class extends(Object($e.a)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null,this.view=null}};return Object(i.a)([Object(n.b)()],t.prototype,"graphics",void 0),Object(i.a)([Object(n.b)()],t.prototype,"renderer",void 0),Object(i.a)([Object(n.b)()],t.prototype,"updating",void 0),Object(i.a)([Object(n.b)()],t.prototype,"view",void 0),t=Object(i.a)([Object(o.a)("esri.views.layers.GraphicsView")],t),t};function tt(e,t,s){if(s.has(e))return s.get(e);const i={tile:t,addedOrModified:[],removed:[]};return s.set(e,i),i}let st=class extends(et(Object(x.b)(d.a))){constructor(e){super(e),this._storage=new Fe.a,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(e,t){if(e){const s=Object(De.a)({indexCount:0,fields:{}},"feature",e);this._matcher=Object(je.a)(s,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new ze.a(this.view.featuresTilingScheme),this._attributeStore=new ve.a({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},Object(b.a)()),this._graphicStore=new class{constructor(e,t,s,i,a,n){this._graphics=i,this._onAdd=a,this._onRemove=n,this._index=Object(Ge.a)(9,Object(r.a)("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=s;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level));const l=e.spatialReference;this._metersPerUnit=Object(h.i)(l)?Object(Ae.c)(e.spatialReference):1}hitTest(e,t,s,i,r){e=Object(Ve.b)(e,this._tileInfoView.spatialReference);const a=.5*i*s;Qe[0]=e-a,Qe[1]=t-a,Qe[2]=e+a,Qe[3]=t+a;const n=.5*i*(s+we.a),o=We(this._index,e-n,t-n,e+n,t+n);if(!o||0===o.length)return[];const l={x:e,y:t},d=[];let h;for(const c of o)if(c.graphic.visible)switch(Object(p.c)(c.geometry)){case"esriGeometryPoint":{const e=c.symbol;if(!e)continue;const t=c.geometry,{x:s,y:a}=t,n=i*this._metersPerUnit;let o;switch(e.type){case"esriTS":o=Object(we.f)(s,a,e,c.size,i,r);break;case"expanded-cim":o=Object(we.d)(s,a,e,i,n,r);break;case"esriSMS":case"esriPMS":o=Object(we.e)(s,a,e,i,n,r)}Object(Le.g)(o,l)&&d.push(c)}break;case"esriGeometryPolyline":{const s=c.symbol;if(!s||!s.layers.length)continue;const r=s.layers[0];h=1.5*i*window.devicePixelRatio*Object(m.d)(r.width),Object(we.k)(c.geometry,e,t,h)&&d.push(c)}break;case"esriGeometryEnvelope":{const e=c.geometry,t=Object(y.j)(e.xmin,e.ymin,e.xmax,e.ymax);Object(y.l)(t,Qe)&&d.push(c);break}case"esriGeometryPolygon":{if(Object(Le.g)(c.geometry,l)){d.push(c);break}const e=Object(Me.b)(c.geometry);if(Math.abs(e.ymax-e.ymin)<5*i||Math.abs(e.xmax-e.xmin)<5*i){const t=Object(y.j)(e.xmin,e.ymin,e.xmax,e.ymax);Object(y.l)(t,Qe)&&d.push(c)}break}case"esriGeometryMultipoint":{const e=c.symbol;if(!e)continue;const t=c.geometry.points;let s;for(let a=0;a<t.length;a++)if(s="esriTS"===e.type?Object(we.f)(t[a][0],t[a][1],e,c.size,i,r):Object(we.e)(t[a][0],t[a][1],e,i,i*this._metersPerUnit,r),Object(Le.g)(s,l)){d.push(c);break}break}}return d.sort((e,t)=>{const s=Object(we.h)(e.graphic),i=Object(we.h)(t.graphic);return s===i?t.zorder-e.zorder:s-i}),d.map(e=>e.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((e,t)=>e.zorder-t.zorder),i[0].insertAfter=-1;for(let d=1;d<i.length;d++)i[d].insertAfter=i[d-1].graphic.uid;i.sort((e,t)=>e.graphic.uid-t.graphic.uid),s.sort((e,t)=>e.uid-t.uid);let r,a=0,n=0;const o=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const d of s){for(n=-2;a<i.length;)if(r=i[a],a++,d.uid===r.graphic.uid){n=r.insertAfter;break}if(!r.geometry||-2===n)continue;const t=r.getGeometryQuantized(l),s={...r.graphic.attributes};s[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),o.push({centroid:Ze.getCentroidQuantized(r,l),geometry:t,attributes:s,symbol:r.symbol,groupId:r.groupId,insertAfter:n,zorder:r.zorder})}return o.sort((e,t)=>e.zorder-t.zorder),o}queryTileData(e,t){const{bounds:s,resolution:i}=t,r=this._searchForItems(t),a=[];return this._createTileGraphics(a,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]}),a}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,s){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=Ze.acquire(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,i),s&&this._index.insert(i),i.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=Object(y.c)(i.bounds);return i.size[0]=i.size[1]=0,this._index.remove(i),i.set(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),Je.length=0,this._itemByGraphic.forEach(e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&Je.push(e)}),this._index.load(Je)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i){const r=this._uidFieldName;let a,n,o,l;s.sort((e,t)=>e.zorder-t.zorder);for(let d=0;d<s.length;d++){o=s[d],a=o.graphic,n=o.getGeometryQuantized(i),l=0===d?-1:s[d-1].graphic.uid;const h={...o.graphic.attributes};h[r]=a.uid,null==o.groupId&&(o.groupId=t.createTemplateGroup(o.symbol,null)),e.push({centroid:Ze.getCentroidQuantized(o,i),geometry:n,attributes:h,symbol:o.symbol,groupId:o.groupId,insertAfter:l,zorder:o.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=Object(w.c)(t),a=Math.abs(s[2]-r)<Ye,n=Math.abs(s[0]-i)<Ye;if((!a||!n)&&(a||n)){const t=e.resolution;let n;n=Object(y.e)(a?[i,s[1],i+t*we.a,s[3]]:[r-t*we.a,s[1],r,s[3]]);const o=We(this._index,s[0],s[1],s[2],s[3]),l=We(this._index,n[0],n[1],n[2],n[3]);return[...new Set([...o,...l])]}}return We(this._index,s[0],s[1],s[2],s[3])}}(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)},e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)});const e=new Te.a(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new Be.a(null,this.uid,e),this._templateStore=e,this.watch("renderer",t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()}),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",e=>this._graphicsChangeHandler(e)),"graphics"),this._attached=!0,this.notifyChange("updating")})}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const s=this.view.toMap(Object(m.b)(e,t));return this.searchFeatures(s).then(e=>e&&e.length?e[0]:null)}async searchFeatures(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}update(e){const t=e.state,s=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(s),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s,newValue:i}=e;switch(s){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,i),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map(e=>this._displayIds.get(e));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===Object(y.o)(t)||0===Object(y.k)(t))return[];const s=Object(we.i)(t,this.view.spatialReference);return Object(a.i)(s)?[...this._tileStore.boundsIntersections(s[0]),...this._tileStore.boundsIntersections(s[1])]:this._tileStore.boundsIntersections(t)}async _updateTile(e){const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1}),i}_patchTile(e,t){if(!this._tiles.has(e))return;const s=this._tiles.get(e);this.container.onTileData(s,t),this.container.requestRender()}_graphicsChangeHandler(e){for(const t of e.added)this._pendingUpdate.added.add(t);for(const t of e.moved)this._pendingUpdate.added.add(t);for(const t of e.removed)this._pendingUpdate.added.has(t)?this._pendingUpdate.added.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const a=[],n=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],o=this._getIntersectingTiles(t);for(const e of o)r=e.id,tt(r,e,i).removed.push(this._displayIds.get(t.uid));a.push(this._updateGraphic(t,null)),n[e]=t}const o=s.length;for(let t=0;t<e.length;t++){const s=e[t];n[o+t]=s,this._graphicsSet.add(s),a.push(this._addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,tt(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(a);for(let e=0;e<n.length;e++){l=n[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,tt(r,e,i).addedOrModified.push(l)}this._graphicStore.updateZ();const d=[];for(const[e,t]of i)d.push(this._updateTile(t));await Promise.all(d)}catch(a){}for(const n of t){const e=await this._getSymbolForGraphic(n,{});e&&this._hashToExpandedSymbol.delete(e.hash())}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return Object(a.h)(e.geometry)?null:{geometryType:Object(p.c)(e.geometry),spatialReference:c.a.fromJSON(e.geometry.spatialReference),fields:t}}async _getSymbolForGraphic(e,t){return Object(a.i)(e.symbol)?e.symbol:Object(a.i)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if(!this.container.stage)return Promise.resolve(null);const s=await this._getSymbolForGraphic(e,t),i=s.hash();let r=this._hashToExpandedSymbol.get(i);if(!r){let n=this._hashTpExpandedSymbolPromise.get(i);if(n)r=await n;else{const o=this._getArcadeInfo(e),d=Object(De.c)(s);n=Object(S.a)(d,o,t),this._hashTpExpandedSymbolPromise.set(i,n);try{r=await n,this._hashTpExpandedSymbolPromise.delete(i),this._hashToExpandedSymbol.set(i,r)}catch(a){this._hashTpExpandedSymbolPromise.delete(i),Object(l.u)(a)}}}if("esriTS"===r.type){const e=[],[t]=Object(I.a)(r.text);for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));const s={symbol:r,id:0,glyphIds:e},[{mosaicItem:i}]=await this.container.getMaterialItems([s]);return{symbol:r,mosaicItem:i}}return{symbol:r,mosaicItem:null}}async _projectAndNormalizeGeometry(e,t){if(Object(a.h)(e.geometry)||"mesh"===e.geometry.type)return Promise.resolve(null);let s=e.geometry;if(Object(p.g)(s))s.rings=s.rings;else if(Object(p.h)(s))s.paths=s.paths;else if(Object(p.d)(s)){const i=await this._getSymbolForGraphic(e,t);s=Object(we.j)(i.type)||Object(we.l)(i.type)?s.center:f.a.fromExtent(s)}await Object(R.a)(s.spatialReference,this.view.spatialReference);const i=function(e){if(!e)return null;if("mesh"===e.type)return e.toJSON();let t=null;const s=e.spatialReference,i=Object(h.d)(s);if(!i)return e.toJSON();const r=s.isWebMercator?102100:4326,a=w.a[r].maxX,n=w.a[r].minX,o=w.a[r].plus180Line,l=w.a[r].minus180Line;let d;const c=e.toJSON();if(Object(p.f)(c))d=D(c,a,n);else if(Object(p.e)(c))c.points=c.points.map(e=>D(e,a,n)),d=c;else if(Object(p.d)(c))d=function(e,t){if(!t)return e;const s=function(e,t){const s=[],{ymin:i,ymax:r}=e,a=e.xmax-e.xmin,n=e.xmin,o=e.xmax;let l;const[d,h]=t.valid;l=j(e.xmin,t);const c=l.x,u=l.frameId;l=j(e.xmax,t);const f=l.x,p=l.frameId,m=c===f&&a>0;if(a>2*h){const e={xmin:n<o?c:f,ymin:i,xmax:h,ymax:r},t={xmin:d,ymin:i,xmax:n<o?f:c,ymax:r},a={xmin:0,ymin:i,xmax:h,ymax:r},l={xmin:d,ymin:i,xmax:0,ymax:r},m=[],y=[];T(e,a)&&m.push(u),T(e,l)&&y.push(u),T(t,a)&&m.push(p),T(t,l)&&y.push(p);for(let s=u+1;s<p;s++)m.push(s),y.push(s);s.push({extent:e,frameIds:[u]},{extent:t,frameIds:[p]},{extent:a,frameIds:m},{extent:l,frameIds:y})}else c>f||m?s.push({extent:{xmin:c,ymin:i,xmax:h,ymax:r},frameIds:[u]},{extent:{xmin:d,ymin:i,xmax:f,ymax:r},frameIds:[p]}):s.push({extent:{xmin:c,ymin:i,xmax:f,ymax:r},frameIds:[u]});return s}(e,t).map(e=>e.extent);return s.length<2?s[0]||e:s.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:s.map(e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]])}}(c,i);else if(Object(p.g)(c)||Object(p.h)(c)){const e=C;Object(O.a)(e,c);const s={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},i=Object(w.d)(s.xmin,n)*(2*a),r=0===i?c:function(e,t){const s=Object(w.b)(e);for(const i of s)for(const e of i)e[0]+=t;return e}(c,i);s.xmin+=i,s.xmax+=i,Object(v.a)(s,o)&&s.xmax!==a||Object(v.a)(s,l)&&s.xmin!==n?t=r:d=r}else d=e.toJSON();return null!==t?(new F).cut(t,a):d}(s),r=Object(R.b)(i,s.spatialReference,this.view.spatialReference);return Object(u.a)(r),r}_onTileUpdate(e){const t=Object(h.d)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const s of e.removed)this._removeTile(s.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid);const t=Object(l.d)();this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),this._graphicIdToAbortController.delete(e.uid)}catch(i){if(this._graphicIdToAbortController.delete(e.uid),!Object(l.m)(i))throw i}}async _updateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t),[r,a]=await Promise.all([s,i]);this._graphicStore.addOrModify(e,a,r)}async _addOrUpdateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);try{const[t,r]=await Promise.all([s,i]);this._addProjectedGraphic(e,r,t)}catch(r){if(!Object(l.m)(r))throw r}}_addProjectedGraphic(e,t,s){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,s)}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds(Object(y.e)(),e),s=new q(e,t);return this._tiles.set(e,s),this.container.addChild(s),s}_addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&(Object(p.f)(e.geometry)||Object(p.e)(e.geometry))&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(e,i).then(e=>{s.patch({type:"update",clear:!1,addOrUpdate:e,remove:[],end:!0}),this._tileUpdateSet.delete(r),this.notifyChange("updating")}).catch(e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!Object(l.m)(e))throw e})}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?_.i:0))}_getGraphicsData(e,t,s){const i=Object(h.d)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,s);if(i){const e=Math.round((i.valid[1]-i.valid[0])/t.resolution);for(const t of r)t.geometry&&(Object(p.f)(t.geometry)||Object(p.e)(t.geometry))&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const s=e.geometry;Object(p.e)(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,a=0;for(const[n,o]of s){if(i.push([n+r,o]),r=0,t===we.b){const e=5*we.a;n+a<e?(i.push([t,0]),r=-t):n+a>we.b-e&&(i.push([-t,0]),r=t)}else n+a<-we.a?(i.push([t,0]),r=-t):n+a>we.b+we.a&&(i.push([-t,0]),r=t);a+=n}e.points=i}_wrapPoint(e,t){const s=e.geometry;if(t===we.b){const i=5*we.a;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>we.b-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}else s.x<-we.a?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>we.b+we.a&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}async _processGraphics(e,t,s){if(!t||!t.length||!this._meshFactory)return null;const i=Re.from(t),r=this._meshFactory,a=await this._matcher;return await r.analyzeGraphics(i,a,null,null,s),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i)}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getApproximateSize(),r=t.getCursor(),a=new Oe.a(e.key.id,{features:i,records:i,metrics:0},!1,!1,!1);for(;r.next();){const e=r.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),s.writeGraphic(a,r)}const n=a.serialize(e.tileInfoView.tileInfo.isWrappable);return 1!==n.length?new be:be.fromVertexData(n[0].message)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return Object(p.h)(t)?g.d:Object(p.g)(t)||Object(p.d)(t)?g.c:g.b}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};Object(i.a)([Object(n.b)({constructOnly:!0})],st.prototype,"requestUpdateCallback",void 0),Object(i.a)([Object(n.b)()],st.prototype,"container",void 0),Object(i.a)([Object(n.b)({constructOnly:!0})],st.prototype,"graphics",void 0),Object(i.a)([Object(n.b)()],st.prototype,"updating",null),Object(i.a)([Object(n.b)()],st.prototype,"view",void 0),Object(i.a)([Object(n.b)()],st.prototype,"updateRequested",void 0),st=Object(i.a)([Object(o.a)("esri.views.2d.layers.support.GraphicsView2D")],st),t.a=st},ZyIX:function(e,t,s){"use strict";var i=s("yE7X"),r=s("b3VY"),a=s("7F7D"),n=s("mgI5");const o=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;t.a=class extends n.a{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(o),this.setStencilReference(),super.renderChildren(e)}createRenderParams(e){const{state:t}=e;return{...super.createRenderParams(e),requiredLevel:this._tileInfoView.getClosestInfoForScale(t.scale).level,displayLevel:this._tileInfoView.tileInfo.scaleToZoom(t.scale)}}prepareRenderPasses(e){const t=e.registerRenderPass({name:"stencil",brushes:[a.a],drawPhase:i.c.DEBUG|i.c.MAP|i.c.HIGHLIGHT,target:()=>this.getStencilTarget()}),s=e.registerRenderPass({name:"tileInfo",brushes:[r.a],drawPhase:i.c.DEBUG,target:()=>this.children,has:"esri-tiles-debug"});return[...super.prepareRenderPasses(e),t,s]}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const s=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,s)}}setStencilReference(){let e=1;for(const t of this.children)t.stencilRef=e++}}},by2V:function(e,t,s){"use strict";s.d(t,"a",function(){return F});var i=s("9MzC"),r=s("jKdI"),a=s("wSAH"),n=s("srIe"),o=s("6S2I"),l=s("zlDU"),d=s("jIHu"),h=(s("n4uK"),s("GVa1"),s("of9L")),c=s("0meK"),u=s("yN2G"),f=s("l8tk");const p=o.a.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),m=Object(f.b)(f.a,p),y=e=>2147483647&e;class g{constructor(e,t,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:a}=e,o=Object(u.j)(r);this.shared=s,this.pixelType=r,this.size=t,this.textureOnly=a,a||(this.data=new o(Object(n.o)(i))),this._resetRange()}destroy(){Object(n.a)(this._texture,e=>e.dispose());for(const e in this._fbos)Object(n.a)(this._fbos[e],t=>{"0"===e&&t.detachColorTexture(),t.dispose()}),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(e,t,s){const i=y(e),r=Object(n.o)(this.data),a=i*this.texelSize+t;!r||a>=r.length||(r[a]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(e,t){if(Object(n.h)(this.data))return null;const s=y(e)*this.texelSize+t;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(e){return Object(n.p)(this._texture,()=>this._initTexture(e))}getFBO(e,t=0){if(Object(n.h)(this._fbos[t])){const s={colorTarget:0,depthStencilTarget:0},i=0===t?this.getTexture(e):this._textureDesc;this._fbos[t]=new c.a(e,s,i)}return this._fbos[t]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!Object(a.a)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}updateTexture(e){if(!this.locked)try{const s=this.dirtyStart,i=this.dirtyEnd;if(s>i)return;this._resetRange();const r=Object(n.o)(this.data).buffer,a=this.getTexture(e),o=4,d=(s-s%this.size)/this.size,h=d,c=(i-i%this.size)/this.size,f=d*this.size*o,m=(this.size+c*this.size)*o-f,y=Object(u.j)(this.pixelType),g=y.BYTES_PER_ELEMENT;try{new y(r,f*g,m)}catch(t){}const x=new y(r,f*g,m),_=this.size,b=c-h+1;if(b>this.size)return void p.error(new l.a("mapview-webgl","Out-of-bounds index when updating AttributeData"));a.updateData(0,0,h,_,b,x)}catch(t){}}update(e){const{data:t,start:s,end:i}=e;if(Object(n.i)(t)){const i=this.data,r=s*this.texelSize;for(let s=0;s<t.length;s++)e.layout&1<<s%this.texelSize&&(i[r+s]=t[s])}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(e,t){const s=this.size;if(this.size=t,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=Object(u.j)(this.pixelType);this.destroy(),this.data=new i(Object(n.o)(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new h.a(e,this._textureDesc,Object(n.p)(this.data,void 0));if(Object(n.i)(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(e),o=Object(u.k)(r),l=new(Object(u.j)(r))(new ArrayBuffer(s*i*o*this.texelSize)),d=e.getBoundFramebufferObject(),{x:h,y:c,width:f,height:p}=e.getViewport();e.bindFramebuffer(n),n.readPixels(0,0,s,i,a,r,l),t.updateData(0,0,0,2*s,i/2,l),e.setViewport(h,c,f,p),e.bindFramebuffer(d)}return this.destroy(),this._texture=t,this._texture}}class x{constructor(e){this._onUpdate=e,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:s,size:i}=e;if(this.shared=s,this.size=i,m("Initializing AttributeStoreView",e),Object(n.h)(this._data))this._data=Object(n.k)(t,e=>new g(e,i,s));else for(let r=0;r<this._data.length;r++){const e=this._data[r],a=t[r];Object(n.i)(a)&&(Object(n.h)(e)?this._data[r]=new g(a,i,s):e.resize(a,i))}this._initialized=!0}destroy(){Object(n.a)(this._data,e=>Object(n.k)(e,e=>e.destroy())),Object(n.a)(this._defaultTexture,e=>e.dispose())}getBlock(e){return Object(n.h)(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,d.b,0,0)}getData(e,t,s,i){if(!this._data)return 0;const r=Object(n.o)(this._data)[t];if(Object(n.h)(r))return 0;const a=r.getData(e,s);return Object(n.i)(a)?a:i}setData(e,t,s,i){const r=Object(n.o)(this._data)[t];Object(n.o)(r).setData(e,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void p.error(new l.a("mapview-webgl","Tried to update attribute data with a pending update"));const t=Object(i.g)();return m("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:t},t.promise}update(){if(this._initialized&&(this._onUpdate(),Object(n.i)(this._pendingAttributeUpdate))){const{data:e,resolver:t}=this._pendingAttributeUpdate,s=Object(n.o)(this._data);for(let i=0;i<e.blocks.length;i++){const t=e.blocks[i],r=s[i];Object(n.a)(r,e=>Object(n.a)(t,t=>{m(`Updating block ${i}`,t),e.update(t)}))}this._pendingAttributeUpdate=null,t()}}bindTextures(e){this.update();const t=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(t,d.r),e.bindTexture(t,d.s),e.bindTexture(t,d.t),void e.bindTexture(t,d.u);const s=Object(n.o)(this._data);this._locked&&!this._forceNextUpload||(Object(n.f)(s,t=>t.updateTexture(e)),this._forceNextUpload=!1),e.bindTexture(Object(n.l)(s[0],t,t=>t.getTexture(e)),d.r),e.bindTexture(Object(n.l)(s[1],t,t=>t.getTexture(e)),d.s),e.bindTexture(Object(n.l)(s[2],t,t=>t.getTexture(e)),d.t),e.bindTexture(Object(n.l)(s[3],t,t=>t.getTexture(e)),d.u)}_getDefaultTexture(e){return Object(n.h)(this._defaultTexture)&&(this._defaultTexture=new h.a(e,{wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1},new Uint8Array(4))),this._defaultTexture}}var _=s("ZyIX"),b=s("nvBr"),v=s("qRWG"),O=s("gEht"),w=s("m0D6"),D=s("sq/B");function j(e,t){const s=t.length;if(e<t[0].value||1===s)return t[0].size;for(let i=1;i<s;i++)if(e<t[i].value)return t[i-1].size+(e-t[i-1].value)/(t[i].value-t[i-1].value)*(t[i].size-t[i-1].size);return t[s-1].size}function T(e,t,s=0){if(Object(n.h)(t))return e[s+0]=0,e[s+1]=0,e[s+2]=0,void(e[s+3]=0);const{r:i,g:r,b:a,a:o}=t;e[s+0]=i*o/255,e[s+1]=r*o/255,e[s+2]=a*o/255,e[s+3]=o}class B{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;switch(t.type){case"static":return t;case"level-dependent":return Object(n.p)(t.levels[e],()=>{let s=1/0,i=0;for(const n in t.levels){const t=parseFloat(n),r=Math.abs(e-t);r<s&&(s=r,i=t)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((e-i)/2),a=Object(n.o)(t.levels[i]),o=new Float32Array(a.values);return o[2]*=r,o[3]*=r,{sizes:Object(n.o)(a.sizes),values:o}})}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){Object(n.i)(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,s){switch(Object(n.i)(s)&&s.forEach(e=>this._updateEffects(e)),this._vvInfo=t,e.type){case"dot-density":this._updateDotDensityInfo(e)}}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:Object(D.a)().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(e){Object(n.i)(e)&&e.filter&&e.filter.enabled&&(this.outsideLabelsVisible=e.excludedLabelsVisible)}_updateVisualVariables(e,t){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!e)return;const i=e.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const e=i.minMaxValue;let s,r;if(Object(u.n)(e.minSize)&&Object(u.n)(e.maxSize))if(Object(u.o)(e.minSize)&&Object(u.o)(e.maxSize))s=Object(v.d)(e.minSize),r=Object(v.d)(e.maxSize);else{const i=t.scale;s=Object(v.d)(j(i,e.minSize.stops)),r=Object(v.d)(j(i,e.maxSize.stops))}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,s,r])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=Object(v.d)(j(t.scale,i.scaleStops.stops))),i.unitValue){const e=Object(O.d)(t.spatialReference)/w.a[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=e.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const a=e.opacity;a&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(a.values),this.vvOpacities.set(a.opacities));const n=e.rotation;n&&(s.vvRotationEnabled=!0,s.vvRotationType=n.type)}_updateDotDensityInfo(e){const t=e.attributes;this.ddDotValue=e.dotValue,this.ddDotScale=e.referenceScale,this.ddDotSize=e.dotSize,this.ddDotBlending=e.dotBlendingEnabled,this.ddSeed=e.seed;for(let s=0;s<d.g;s++){const e=s>=t.length?new b.a([0,0,0,0]):t[s].color;T(this.ddColors,e,4*s)}for(let s=0;s<8;s++)this.ddActiveDots[s]=s<e.attributes.length?1:0;T(this.ddBackgroundColor,e.backgroundColor)}}class F extends _.a{constructor(e){super(e),this._rendererInfo=new B,this._materialItemsRequestQueue=new r.a,this.attributeView=new x(()=>this.onAttributeStoreUpdate())}destroy(){this.removeAllChildren(),this.children.forEach(e=>e.destroy()),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,s){this._rendererInfo.setInfo(e,t,s),this.requestRender()}async getMaterialItems(e,t){if(!e||0===e.length)return null;const s=Object(i.g)();return this._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:s}),this.requestRender(),s.promise}doRender(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),super.renderChildren(e)}createRenderParams(e){return{...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}onAttributeStoreUpdate(){}_processMaterialItemRequest(e,{items:t,abortOptions:s,resolver:i}){const{painter:r,pixelRatio:a}=e,n=t.map(e=>r.textureManager.rasterizeItem(e.symbol,a,e.glyphIds,s));Promise.all(n).then(e=>{if(!this.stage)return void i.reject();const s=e.map((e,s)=>({id:t[s].id,mosaicItem:e}));i.resolve(s)},i.reject)}}},"kvL/":function(e,t,s){"use strict";var i=s("by2V");t.a=class extends i.a{constructor(e){super(e)}get hasLabels(){return!1}get labelsVisible(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const s of this.children)s.isReady&&s.hasData&&(s.commit(e),e.context.setStencilFunction(514,s.stencilRef,255),s._displayList.replay(e,s,t))}}}}]);