(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{LfYK:function(e,t,i){"use strict";i.r(t),i.d(t,"ElevationQuery",function(){return E}),i.d(t,"GeometryDescriptor",function(){return q}),i.d(t,"getFinestLodIndex",function(){return j});var n=i("srIe"),s=i("zlDU"),o=i("9MzC"),l=i("SuVq"),a=i("V9wi"),r=i("UhwK"),c=i("eSsm"),u=i("gEht"),h=i("kYAx"),p=i("gYg2"),m=(i("wSAH"),i("6S2I")),d=i("l4ZG"),f=i("IXLn");i("4GrV");const y=m.a.getLogger("esri.layers.support.ElevationSampler");class x{queryElevation(e){return function(e,t){const i=g(e,t.spatialReference);if(!i)return null;switch(e.type){case"point":!function(e,t,i){e.z=Object(n.p)(i.elevationAt(t),0)}(e,i,t);break;case"polyline":!function(e,t,i){w.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let o=0;o<e.paths.length;o++){const l=e.paths[o],a=t.paths[o];for(let e=0;e<l.length;e++){const t=l[e],o=a[e];w.x=o[0],w.y=o[1],s&&(t[3]=t[2]),t[2]=Object(n.p)(i.elevationAt(w),0)}}e.hasZ=!0}(e,i,t);break;case"multipoint":!function(e,t,i){w.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let o=0;o<e.points.length;o++){const l=e.points[o],a=t.points[o];w.x=a[0],w.y=a[1],s&&(l[3]=l[2]),l[2]=Object(n.p)(i.elevationAt(w),0)}e.hasZ=!0}(e,i,t)}return e}(e.clone(),this)}on(){return R}projectIfRequired(e,t){return g(e,t)}}class v extends x{constructor(e,t,i){super(),this.tile=e,this.noDataValue=i,this.extent=Object(h.n)(e.tile.extent,t.spatialReference);const n=Object(u.d)(t.spatialReference),s=t.lodAt(e.tile.level).resolution*n;this.demResolution={min:s,max:s}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return Object(f.e)(this.extent,t)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent;y.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax})`)}return this.tile.sample(t.x,t.y)}}class T extends x{constructor(e,t,i){let n;super(),"number"==typeof t?(this.noDataValue=t,n=null):(n=t,this.noDataValue=i),this.samplers=n?e.map(e=>new v(e,n,this.noDataValue)):e;const s=this.samplers[0];if(s){this.extent=s.extent.clone();const{min:e,max:t}=s.demResolution;this.demResolution={min:e,max:t};for(let i=1;i<this.samplers.length;i++){const e=this.samplers[i];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=Object(h.n)(Object(h.e)(),n.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const i of this.samplers)if(i.contains(t))return i.elevationAt(t);return y.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function g(e,t){const i=e.spatialReference;return i.equals(t)?e:Object(d.a)(i,t)?Object(d.d)(e,t):(y.error(`Cannot project geometry spatial reference (wkid:${i.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),null)}const w=new l.a,R={remove(){}};class _{constructor(e,t){if(this.tile=e,!t)return void(this.samplerData=null);const i=this.tile.extent;this.samplerData={pixelData:t.values,width:t.width,height:t.height,safeWidth:.99999999*(t.width-1),noDataValue:t.noDataValue,dx:(t.width-1)/(i[2]-i[0]),dy:(t.width-1)/(i[3]-i[1]),x0:i[0],y1:i[3]}}sample(e,t){if(this.samplerData)return function(e,t,i){const{safeWidth:n,width:s,pixelData:o,noDataValue:l}=e,a=b(e.dy*(e.y1-i),0,n),r=b(e.dx*(t-e.x0),0,n),c=Math.floor(a),u=Math.floor(r),h=c*s+u,p=h+s,m=o[h],d=o[p],f=o[h+1],y=o[p+1];if(m!==l&&d!==l&&f!==l&&y!==l){const e=r-u,t=m+(f-m)*e;return t+(d+(y-d)*e-t)*(a-c)}}(this.samplerData,e,t)}}function b(e,t,i){return e<t?t:e>i?i:e}class E{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)throw new s.a("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=q.fromGeometry(t);let o=!1;i&&i.returnSampleInfo||(o=!0);const l={...D,...i,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new s.a("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof q)&&"point"!==t.type&&"multipoint"!==t.type&&"polyline"!==t.type)throw new s.a("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...D,...i},o=new A(e,t.spatialReference,n),l=n.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(o,t,l),await this._selectTiles(o,l),await this._populateElevationTiles(o,l),this._sampleGeometryWithElevation(o),this._createQueryResult(o,l)}async createSampler(e,t,i){if(!e)throw new s.a("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||"extent"!==t.type)throw new s.a("elevation-query:invalid-extent","Invalid or undefined extent");const n={...D,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)throw new s.a("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||"extent"!==t.type)throw new s.a("elevation-query:invalid-extent","Invalid or undefined extent");const n={...D,...i,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,o,n)}async _createSampler(e,t,i,n){const s=i.signal;await e.load({signal:s});const o=t.spatialReference,l=e.tileInfo.spatialReference;o.equals(l)||(await Object(p.c)([{source:o,dest:l}],{signal:s}),t=Object(p.g)(t,l));const a=new I(e,t,i,n);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new T(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const s=i.samplers.map(e=>Object(h.i)(e.extent)),o=await this._createSampler(e[e.length-1],t,n,s);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new T(l,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,i){const n=e.pop(),s=t.geometry.coordinates,o=[],l=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=n):e.length&&(o.push(s[c]),l.push(c))}if(!e.length||0===o.length)return t;const a=t.geometry.clone(o),r=await this.query(e[e.length-1],a,i);return l.forEach((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution}),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(e=>{e.tile=null,e.elevationTile=null}),i}async _createGeometryDescriptor(e,t,i){let n;const o=e.layer.tileInfo.spatialReference;if(t instanceof q?n=await t.project(o,i):(await Object(p.c)([{source:t.spatialReference,dest:o}],{signal:i}),n=Object(p.g)(t,o)),!n)throw new s.a("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=q.fromGeometry(n)}async _selectTiles(e,t){const i=e.options.demResolution;if("geometry"===e.type&&this._preselectOutsideLayerExtent(e),"number"==typeof i)this._selectTilesClosestResolution(e);else if("finest-contiguous"===i)await this._selectTilesFinestContiguous(e,t);else{if("auto"!==i)throw new s.a("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){const t=new _(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(e=>{const n=e.x,s=e.y;(n<i.xmin||n>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)})}_selectTilesClosestResolution(e){const t=this._findNearestDemResolutionLODIndex(e.layer.tileInfo,e.options.demResolution);e.selectTilesAtLOD(t)}_findNearestDemResolutionLODIndex(e,t){const i=t/Object(u.d)(e.spatialReference);let n=e.lods[0],s=0;for(let o=1;o<e.lods.length;o++){const t=e.lods[o];Math.abs(t.resolution-i)<Math.abs(n.resolution-i)&&(n=t,s=o)}return s}async _selectTilesFinestContiguous(e,t){const i=j(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const l=n.tilemapCache,a=e.getTilesToFetch();try{if(l)await Object(o.x)(Promise.all(a.map(e=>l.fetchAvailability(e.level,e.row,e.col,{signal:i}))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new s.a("elevation-query:has-unavailable-tiles")}catch(r){Object(o.t)(r),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},l=e.options.cache,a=e.options.noDataValue,r=i.map(async i=>{const o=`${e.layer.uid}:${i.id}:${a}`,r=Object(n.i)(l)?l.get(o):null,c=Object(n.i)(r)?r:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:a,signal:t});Object(n.i)(l)&&l.put(o,c),s[i.id]=new _(i,c)});await Object(o.x)(Object(o.j)(r),t),e.populateElevationTiles(s)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),s={},l=n.map(async e=>{const n={id:null,level:0,row:0,col:0,extent:Object(h.e)()},l=await Object(c.c)(i.fetchAvailabilityUpsample(e.level,e.row,e.col,n,{signal:t}));!1===l.ok?Object(o.t)(l.error):s[e.id]=n});await Object(o.x)(Promise.all(l),t),e.remapTiles(s)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},s=e=>{e.id in n?n[e.id]++:(n[e.id]=1,i++)},o=e=>{const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(s,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch(n=>{i<=e.options.maximumAutoTileRequests||(o(n),t.upsampleTile(n)&&(l=!0),s(n))},o),l););}_selectTilesAutoFinest(e){const t=j(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((e,t)=>{i.upsampleTile(e)?n=!0:t()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);void 0!==e?n=e:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=Object(u.d)(t.spatialReference);return e.geometry.coordinates.map(n=>{let s=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(s=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:s}})}}class q{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new q;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(e=>this._cloneCoordinate(e)),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await Object(p.c)([{source:this.spatialReference,dest:e}],{signal:t});const i=new a.a({spatialReference:this.spatialReference,points:this.coordinates.map(e=>[e.x,e.y])}),n=Object(p.g)(i,e);if(!n)return null;const s=this.coordinates.map((e,t)=>{const i=this._cloneCoordinate(e),s=n.points[t];return i.x=s[0],i.y=s[1],i}),o=this.clone(s);return o.spatialReference=e,o}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new q;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof q)t.coordinates=e.coordinates.map(e=>t._cloneCoordinate(e)),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:n?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new l.a(t[0].x,t[0].y,t[0].z,t[0].m,i):new l.a(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=i.points.map(n&&s?e=>({x:e[0],y:e[1],z:e[2],m:e[3]}):n?e=>({x:e[0],y:e[1],z:e[2]}):s?e=>({x:e[0],y:e[1],m:e[2]}):e=>({x:e[0],y:e[1]})),t._exporter=(t,i)=>e.hasM?new a.a({points:t.map(e=>[e.x,e.y,e.z,e.m]),hasZ:!0,hasM:!0,spatiaReference:i}):new a.a(t.map(e=>[e.x,e.y,e.z]),i);break}case"polyline":{const i=e,n=[],s=[],{hasZ:o,hasM:l}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,o&&l)for(const t of e)n.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(o)for(const t of e)n.push({x:t[0],y:t[1],z:t[2]});else if(l)for(const t of e)n.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)n.push({x:t[0],y:t[1]});t.coordinates=n,t._exporter=(t,i)=>{const n=t.map(e.hasM?e=>[e.x,e.y,e.z,e.m]:e=>[e.x,e.y,e.z]),o=s.map(e=>n.slice(e[0],e[1]));return new r.a({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class O{constructor(e,t){this.layer=e,this.options=t}}class A extends O{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(e=>e.tile=null);else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach(e=>{e.tile=t.tileAt(i,e.x,e.y)})}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;i.elevationTile||!i.tile||e[n.id]||(e[n.id]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>t.tile=null)}}class I extends O{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;for(let n=t.lods.length-1;n>=0;n--){const s=t.lods[n],o=s.resolution*t.size[1];if(Math.ceil(i.width/(s.resolution*t.size[0]))*Math.ceil(i.height/o)<=e)return n}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach(i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,()=>n=!0),n?t&&t(i):this.candidateTiles.push(i)}),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const o of e)i[o.id]?t&&t(o):(i[o.id]=o,n.push(o));const s=n.sort((e,t)=>e.level-t.level);return s.filter((e,i)=>{for(let n=0;n<i;n++)if(Object(h.d)(s[n].extent,e.extent))return t&&t(e),!1;return!0})}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.layer.tileInfo,i=t.lods[e],n=this.extent,s=t.tileAt(i.level,n.xmin,n.ymin),o=i.resolution*t.size[1],l=Math.ceil((n.xmax-s.extent[0])/(i.resolution*t.size[0])),a=Math.ceil((n.ymax-s.extent[1])/o);for(let r=0;r<a;r++)for(let e=0;e<l;e++){const i={id:null,level:s.level,row:s.row-r,col:s.col+e};t.updateTileInfo(i),this._tileIsMasked(i)||this.candidateTiles.push(i)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>Object(h.d)(t,e.extent))}}function j(e,t){let i=e.lods.length-1;if(t>0){const n=e.lods.findIndex(e=>e.resolution<t);0===n?i=0:n>0&&(i=n-1)}return i}const D={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};t.default=E}}]);